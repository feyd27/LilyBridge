/**
 * Original work Copyright (c) 2018 PoC-Consortium
 * Modified work Copyright (c) 2019 Burst Apps Team
 * Modified work Copyright (c) 2024 Signum Network
 */
import { EncryptedData } from './typings/encryptedData';
import { EncryptedMessage } from './typings/encryptedMessage';
/**
 * Decrypts an encrypted cipher text
 * @param encryptedData The encrypted data
 * @param senderPublicKeyHex The senders public key in hex format
 * @param recipientPrivateKeyHex The recipients private (agreement) key in hex format
 * @return The original plain text
 *
 * @category en/decryption
 */
export declare function decryptData(encryptedData: EncryptedData, senderPublicKeyHex: string, recipientPrivateKeyHex: string): Promise<Uint8Array>;
/**
 * Decrypts an encrypted Message
 * @param encryptedMessage The encrypted message
 * @param senderPublicKeyHex The senders public key in hex format
 * @param recipientPrivateKeyHex The recipients private (agreement) key in hex format
 * @return The original message
 *
 * @category en/decryption
 */
export declare function decryptMessage(encryptedMessage: EncryptedMessage, senderPublicKeyHex: string, recipientPrivateKeyHex: string): Promise<string>;
