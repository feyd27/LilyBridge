"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Crypto = exports.Buffer = void 0;
/**
 * This file is the entry point for web-bundle IIFE build
 * needed for Burstcoin/Signum.
 *
 * @ignore
 * @internal
 * @module crypto
 * */
__exportStar(require("./decrypt"), exports);
__exportStar(require("./encrypt"), exports);
__exportStar(require("./random"), exports);
__exportStar(require("./mnemonic"), exports);
__exportStar(require("./sha256"), exports);
__exportStar(require("./sign"), exports);
__exportStar(require("./typings/cryptoError"), exports);
__exportStar(require("./typings/signKeys"), exports);
__exportStar(require("./typings/encryptedMessage"), exports);
__exportStar(require("./typings/encryptedData"), exports);
__exportStar(require("./typings/cryptoAdapter"), exports);
var base_1 = require("./base"); // export as very useful!
Object.defineProperty(exports, "Buffer", { enumerable: true, get: function () { return base_1.Buffer; } });
Object.defineProperty(exports, "Crypto", { enumerable: true, get: function () { return base_1.Crypto; } });
// init web adapter
const base_2 = require("./base");
const adapters_1 = require("./adapters");
(() => {
    base_2.Crypto.init(new adapters_1.WebCryptoAdapter());
})();
//# sourceMappingURL=web-bundle.js.map