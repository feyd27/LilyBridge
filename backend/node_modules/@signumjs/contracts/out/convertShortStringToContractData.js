"use strict";
/**
 * Copyright (c) 2022 Signum Network
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertShortStringToContractData = convertShortStringToContractData;
const util_1 = require("@signumjs/util");
/**
 * Converts a short string into {@link ContractData} to be used as argument for smart contract calls, i.e. {@link generateMethodCall}
 *
 * @param {string} shortString A short alphanumerical string of at maximum 8 characters (bytes) length.
 * @return A compatible numerical representation which can be used as string in a smart contract.
 *
 */
function convertShortStringToContractData(shortString) {
    const MaxChars = 8;
    if (shortString.length > MaxChars) {
        throw new Error(`At maximum ${MaxChars} bytes/characters are supported`);
    }
    return (0, util_1.convertHexStringToDecString)((0, util_1.convertHexEndianess)((0, util_1.convertStringToHexString)(shortString)));
}
//# sourceMappingURL=convertShortStringToContractData.js.map