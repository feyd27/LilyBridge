"use strict";
/**
 * This submodule describes the Factory Methods
 * of the API. You almost will like to use {@link composeApi}
 * or {@link LedgerClientFactory.createClient}
 * rather than using the Factory Methods itself
 *
 * The factory methods are higher-order functions which
 * receives a {@link ChainService} instance in first order, and
 * the payload in second order.
 *
 * `factoryMethod(chainServiceInstance)(methodArgs)`
 *
 * The factory methods are used {@link ApiComposer} and {@link composeApi}
 *
 * */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./account"), exports);
__exportStar(require("./alias"), exports);
__exportStar(require("./asset"), exports);
__exportStar(require("./block"), exports);
__exportStar(require("./contract"), exports);
__exportStar(require("./network"), exports);
__exportStar(require("./message"), exports);
__exportStar(require("./transaction"), exports);
//# sourceMappingURL=index.js.map