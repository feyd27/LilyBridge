"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendSameAmountToMultipleRecipients = void 0;
const signIfPrivateKey_1 = require("../../../internal/signIfPrivateKey");
const constants_1 = require("../../../constants");
/**
 * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.
 *
 * See details at {@link TransactionApi.sendSameAmountToMultipleRecipients}
*
* @category factories
*/
const sendSameAmountToMultipleRecipients = (service) => (args) => (0, signIfPrivateKey_1.signIfPrivateKey)(service, args, async (a) => {
    const { recipientIds, senderPublicKey, amountPlanck, feePlanck, referencedTransactionFullHash, deadline = constants_1.DefaultDeadline, dedupe = false, } = a;
    const uniqueRecipients = new Set(recipientIds);
    if (!dedupe && recipientIds.length !== uniqueRecipients.size) {
        throw new Error('Duplicate Recipients found');
    }
    if (recipientIds.length === 0) {
        throw new Error('No recipients given. Send ignored');
    }
    const parameters = {
        publicKey: senderPublicKey,
        recipients: Array.from(uniqueRecipients).join(';'),
        feeNQT: feePlanck,
        amountNQT: amountPlanck,
        deadline,
        referencedTransactionFullHash
    };
    return service.send('sendMoneyMultiSame', parameters);
});
exports.sendSameAmountToMultipleRecipients = sendSameAmountToMultipleRecipients;
//# sourceMappingURL=sendSameAmountToMultipleRecipients.js.map