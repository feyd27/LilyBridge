{
  "version": 3,
  "sources": ["../../../node_modules/pako/lib/utils/common.js", "../../../node_modules/pako/lib/zlib/adler32.js", "../../../node_modules/pako/lib/zlib/crc32.js", "../../../node_modules/pako/lib/zlib/inffast.js", "../../../node_modules/pako/lib/zlib/inftrees.js", "../../../node_modules/pako/lib/zlib/inflate.js", "../../../node_modules/pako/lib/utils/strings.js", "../../../node_modules/pako/lib/zlib/constants.js", "../../../node_modules/pako/lib/zlib/messages.js", "../../../node_modules/pako/lib/zlib/zstream.js", "../../../node_modules/pako/lib/zlib/gzheader.js", "../../../node_modules/pako/lib/inflate.js", "../../../node_modules/base64-js/index.js", "../../../node_modules/ieee754/index.js", "../../../node_modules/buffer/index.js", "../../crypto/src/typings/cryptoError.ts", "../../crypto/src/base/crypto.ts", "../../crypto/src/base/curve25519.ts", "../../crypto/src/base/ec-kcdsa.ts", "../../crypto/src/base/cryptoParams.ts", "../../crypto/src/base/index.ts", "../../crypto/src/decrypt.ts", "../../../node_modules/pako/lib/zlib/trees.js", "../../../node_modules/pako/lib/zlib/deflate.js", "../../../node_modules/pako/lib/deflate.js", "../../crypto/src/random.ts", "../../crypto/src/encrypt.ts", "../../crypto/src/dictionaries/en.ts", "../../crypto/src/mnemonic.ts", "../../crypto/src/sha256.ts", "../../crypto/src/sign.ts", "../../crypto/out/typings/cryptoAdapter.js", "../../crypto/src/index.ts", "../../util/src/asyncRetry.ts", "../../util/src/chainTime.ts", "../../../node_modules/bignumber.js/bignumber.js", "../../util/src/chainValue.ts", "../../util/src/constants.ts", "../../util/src/amount.ts", "../../util/src/convertBase36StringToHexString.ts", "../../../node_modules/js-base64/base64.js", "../../util/src/convertBase64StringToString.ts", "../../util/src/convertByteArrayToHexString.ts", "../../util/src/convertByteArrayToString.ts", "../../util/src/internal/padStartPolyfill.ts", "../../util/src/internal/twosComplementBinary.ts", "../../util/src/convertDecStringToHexString.ts", "../../util/src/convertHexEndianess.ts", "../../util/src/convertHexStringToBase36String.ts", "../../util/src/convertHexStringToByteArray.ts", "../../util/src/convertHexStringToDecString.ts", "../../util/src/convertHexStringToString.ts", "../../util/src/convertStringToBase64String.ts", "../../util/src/convertStringToByteArray.ts", "../../util/src/convertStringToHexString.ts", "../../util/src/convertAssetPriceToPlanck.ts", "../../util/src/convertPlanckToAssetPrice.ts", "../../util/src/typings/index.ts", "../../util/src/index.ts", "../src/constants/apiVersion.ts", "../src/constants/transactionType.ts", "../src/constants/transactionArbitrarySubtype.ts", "../src/constants/transactionAssetSubtype.ts", "../src/constants/transactionLeasingSubtype.ts", "../src/constants/transactionMarketplaceSubtype.ts", "../src/constants/transactionPaymentSubtype.ts", "../src/constants/transactionMiningSubtype.ts", "../src/constants/transactionAdvancedPaymentSubtype.ts", "../src/constants/transactionSmartContractSubtype.ts", "../src/constants/index.ts", "../../http/src/httpResponse.ts", "../../http/src/httpError.ts", "../../http/src/httpMockBuilder.ts", "../../../node_modules/axios/lib/helpers/bind.js", "../../../node_modules/axios/lib/utils.js", "../../../node_modules/axios/lib/core/AxiosError.js", "../../../node_modules/axios/lib/helpers/null.js", "../../../node_modules/axios/lib/helpers/toFormData.js", "../../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js", "../../../node_modules/axios/lib/helpers/buildURL.js", "../../../node_modules/axios/lib/core/InterceptorManager.js", "../../../node_modules/axios/lib/defaults/transitional.js", "../../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js", "../../../node_modules/axios/lib/platform/browser/classes/FormData.js", "../../../node_modules/axios/lib/platform/browser/classes/Blob.js", "../../../node_modules/axios/lib/platform/browser/index.js", "../../../node_modules/axios/lib/platform/common/utils.js", "../../../node_modules/axios/lib/platform/index.js", "../../../node_modules/axios/lib/helpers/toURLEncodedForm.js", "../../../node_modules/axios/lib/helpers/formDataToJSON.js", "../../../node_modules/axios/lib/defaults/index.js", "../../../node_modules/axios/lib/helpers/parseHeaders.js", "../../../node_modules/axios/lib/core/AxiosHeaders.js", "../../../node_modules/axios/lib/core/transformData.js", "../../../node_modules/axios/lib/cancel/isCancel.js", "../../../node_modules/axios/lib/cancel/CanceledError.js", "../../../node_modules/axios/lib/core/settle.js", "../../../node_modules/axios/lib/helpers/parseProtocol.js", "../../../node_modules/axios/lib/helpers/speedometer.js", "../../../node_modules/axios/lib/helpers/throttle.js", "../../../node_modules/axios/lib/helpers/progressEventReducer.js", "../../../node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../../node_modules/axios/lib/helpers/cookies.js", "../../../node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../../node_modules/axios/lib/helpers/combineURLs.js", "../../../node_modules/axios/lib/core/buildFullPath.js", "../../../node_modules/axios/lib/core/mergeConfig.js", "../../../node_modules/axios/lib/helpers/resolveConfig.js", "../../../node_modules/axios/lib/adapters/xhr.js", "../../../node_modules/axios/lib/helpers/composeSignals.js", "../../../node_modules/axios/lib/helpers/trackStream.js", "../../../node_modules/axios/lib/adapters/fetch.js", "../../../node_modules/axios/lib/adapters/adapters.js", "../../../node_modules/axios/lib/core/dispatchRequest.js", "../../../node_modules/axios/lib/env/data.js", "../../../node_modules/axios/lib/helpers/validator.js", "../../../node_modules/axios/lib/core/Axios.js", "../../../node_modules/axios/lib/cancel/CancelToken.js", "../../../node_modules/axios/lib/helpers/spread.js", "../../../node_modules/axios/lib/helpers/isAxiosError.js", "../../../node_modules/axios/lib/helpers/HttpStatusCode.js", "../../../node_modules/axios/lib/axios.js", "../../http/src/httpAdapterAxios.ts", "../../http/src/httpClientFactory.ts", "../../http/src/index.ts", "../../../node_modules/bignumber.js/bignumber.mjs", "../src/internal/verifyTransaction/byteBuffer.ts", "../src/internal/verifyTransaction/getAttachmentFields.ts", "../src/internal/verifyTransaction/getRequestRebuildInfo.ts", "../src/internal/verifyTransaction/rebuildTransactionPostData.ts", "../src/internal/verifyTransaction/verifyTransaction.ts", "../src/internal/verifyTransaction/index.ts", "../src/service/chainService.ts", "../../contracts/src/getContractDatablock.ts", "../../contracts/src/convertShortStringToContractData.ts", "../../contracts/src/constants.ts", "../../contracts/src/countCodePages.ts", "../../contracts/src/ContractDataView.ts", "../../contracts/src/countDataPages.ts", "../../contracts/src/calculateMinimumCreationFee.ts", "../../contracts/src/internal/convertContractData.ts", "../../contracts/src/generateMethodCall.ts", "../../contracts/src/generateDataStack.ts", "../../contracts/src/typings/args/index.ts", "../../contracts/out/typings/contractData.js", "../../contracts/src/typings/index.ts", "../../contracts/src/index.ts", "../src/index.ts", "../src/address/address.ts", "../src/address/tokenizeReedSolomonAddress.ts", "../src/address/internal.ts", "../src/address/ensureReedSolomonAddress.ts", "../src/address/convertReedSolomonAddressToNumericId.ts", "../src/address/convertNumericIdToReedSolomonAddress.ts", "../src/api/apiComposer.ts", "../src/service/index.ts", "../src/api/factories/block/getBlockByHeight.ts", "../src/api/factories/block/getBlockById.ts", "../src/api/factories/block/getBlockByTimestamp.ts", "../src/api/factories/block/getBlocks.ts", "../src/api/factories/block/getBlockId.ts", "../src/api/factories/network/getBlockchainStatus.ts", "../src/api/factories/network/getMiningInfo.ts", "../src/api/factories/network/getPeer.ts", "../src/api/factories/network/getPeers.ts", "../src/api/factories/network/getServerStatus.ts", "../src/api/factories/network/getTime.ts", "../src/api/factories/network/getSuggestedFees.ts", "../src/api/factories/network/getNetworkInfo.ts", "../src/api/factories/message/sendMessage.ts", "../src/api/factories/transaction/signAndBroadcastTransaction.ts", "../src/api/factories/transaction/broadcastTransaction.ts", "../src/internal/signIfPrivateKey.ts", "../src/api/factories/message/sendEncryptedMessage.ts", "../src/api/factories/account/addCommitment.ts", "../src/api/factories/account/generateSendTransactionQRCode.ts", "../src/api/factories/account/generateSendTransactionQRCodeAddress.ts", "../src/api/factories/account/getAccount.ts", "../src/api/factories/account/getAccountBalance.ts", "../src/api/factories/account/getAccountBlockIds.ts", "../src/api/factories/account/getAccountBlocks.ts", "../src/api/factories/account/getAccountSubscriptions.ts", "../src/api/factories/account/getAccountTransactions.ts", "../src/api/factories/transaction/getTransaction.ts", "../src/api/factories/transaction/getTransactionByFullHash.ts", "../src/api/factories/transaction/sendAmountToSingleRecipient.ts", "../src/typings/attachment.ts", "../src/internal/createParametersFromAttachment.ts", "../src/api/factories/transaction/getDistributionAmountsFromTransaction.ts", "../src/api/factories/transaction/sendSameAmountToMultipleRecipients.ts", "../src/api/factories/transaction/sendAmountToMultipleRecipients.ts", "../src/api/factories/transaction/createSubscription.ts", "../src/api/factories/transaction/cancelSubscription.ts", "../src/api/factories/transaction/getSubscription.ts", "../src/api/factories/transaction/getUnconfirmedTransactions.ts", "../src/api/factories/transaction/parseTransactionBytes.ts", "../src/api/factories/transaction/getSubscriptionPayments.ts", "../src/api/factories/account/getAccountTransactionsFromSender.ts", "../src/api/factories/account/getAccountTransactionsToRecipient.ts", "../src/api/factories/account/getAccountTransactionsFromSenderToRecipient.ts", "../src/api/factories/account/getAccountTransactionsBetweenSenderAndRecipient.ts", "../src/api/factories/account/getRewardRecipient.ts", "../src/api/factories/account/getSubscriptionsToAccount.ts", "../src/api/factories/account/getUnconfirmedAccountTransactions.ts", "../src/api/factories/account/removeCommitment.ts", "../src/api/factories/account/setAccountInfo.ts", "../src/api/factories/account/setAlias.ts", "../src/api/factories/account/setRewardRecipient.ts", "../src/api/factories/alias/getAliasById.ts", "../src/api/factories/alias/getAliasByName.ts", "../src/api/factories/alias/getAliasesOnSale.ts", "../src/api/factories/alias/getAliases.ts", "../src/api/factories/alias/buyAlias.ts", "../src/api/factories/alias/sellAlias.ts", "../src/api/factories/alias/getTopLevelDomains.ts", "../src/api/factories/alias/buyTopLevelDomain.ts", "../src/internal/index.ts", "../src/api/factories/alias/searchAliasesByName.ts", "../src/api/factories/contract/getContract.ts", "../src/api/factories/contract/getAllContractIds.ts", "../src/api/factories/contract/getContractsByAccount.ts", "../src/api/factories/contract/publishContract.ts", "../src/api/factories/contract/publishContractByReference.ts", "../src/api/factories/contract/callContractMethod.ts", "../src/api/factories/asset/addAssetTreasuryAccount.ts", "../src/api/factories/asset/transferAsset.ts", "../src/api/factories/asset/burnAsset.ts", "../src/api/factories/asset/cancelOrder.ts", "../src/api/factories/asset/cancelAskOrder.ts", "../src/api/factories/asset/cancelBidOrder.ts", "../src/api/factories/asset/distributeToAssetHolders.ts", "../src/api/factories/asset/getAllAssets.ts", "../src/api/factories/asset/getAllTrades.ts", "../src/api/factories/asset/getAsset.ts", "../src/api/factories/asset/getAssetHolders.ts", "../src/api/factories/asset/getAssetsByIssuer.ts", "../src/api/factories/asset/getAssetsByOwner.ts", "../src/api/factories/asset/getAssetsByName.ts", "../src/api/factories/asset/getAssetTrades.ts", "../src/api/factories/asset/getAssetTradesPerAccount.ts", "../src/api/factories/asset/getAssetTradesPerAsset.ts", "../src/api/factories/asset/getAssetTransfers.ts", "../src/api/factories/asset/getAssetTransfersPerAccount.ts", "../src/api/factories/asset/getAssetTransfersPerAsset.ts", "../src/api/factories/asset/getOpenOrders.ts", "../src/api/factories/asset/getOpenAskOrders.ts", "../src/api/factories/asset/getOpenOrdersPerAccount.ts", "../src/api/factories/asset/getOpenAskOrdersPerAccount.ts", "../src/api/factories/asset/getOpenOrdersPerAsset.ts", "../src/api/factories/asset/getOpenAskOrdersPerAsset.ts", "../src/api/factories/asset/getOpenBidOrders.ts", "../src/api/factories/asset/getOpenBidOrdersPerAccount.ts", "../src/api/factories/asset/getOpenBidOrdersPerAsset.ts", "../src/api/factories/asset/getTradeHistoryPerAccount.ts", "../src/api/factories/asset/issueAsset.ts", "../src/api/factories/asset/mintAsset.ts", "../src/api/factories/asset/placeOrder.ts", "../src/api/factories/asset/placeAskOrder.ts", "../src/api/factories/asset/placeBidOrder.ts", "../src/api/factories/asset/transferAssetOwnership.ts", "../src/api/factories/asset/transferMultipleAssets.ts", "../src/api/factories/asset/calculateDistributionFee.ts", "../src/api/factories/contract/getSingleContractMapValue.ts", "../src/api/factories/contract/getContractMapValuesByFirstKey.ts", "../src/api/factories/contract/getAllContractsByCodeHash.ts", "../src/api/composeApi.ts", "../src/attachment/getAttachmentVersion.ts", "../src/ledgerClient/ledgerClientFactory.ts", "../src/transaction/isMultiOutSameTransaction.ts", "../src/transaction/isMultiOutTransaction.ts", "../src/transaction/getRecipientAmountsFromMultiOutPayment.ts", "../src/transaction/getRecipientsAmount.ts", "../src/typings/api/index.ts"],
  "sourcesContent": ["'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n", "'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n", "'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n", "// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n", "'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "export class CryptoError extends Error {}\n", "import {CryptoAdapter} from '../typings/cryptoAdapter';\nimport {CryptoError} from '../typings/cryptoError';\n\n/**\n * Unified Low-Level Crypto Class for common crypto operations needed for Signum.\n *\n * IMPORTANT: Before using any of the crypto functions {@link init()} needs to be called once\n *\n * Usually, you want to use the comfort functions like\n * {@link encryptData}, {@link encryptMessage}, {@link decryptData}, {@link decryptData}, {@link getRandomBytes}, etc.\n *\n * Interacting with this class maybe necessary in cases where the underlying crypto implementations need to be\n * customized, i.e. React Native\n *\n */\nexport class Crypto {\n\n    private static cryptoAdapter: CryptoAdapter;\n\n    /**\n     * The adapter gives access to required crypto methods\n     */\n    static get adapter(): CryptoAdapter {\n        if(!Crypto.cryptoAdapter) {\n            throw new CryptoError('No Crypto Adapter provided - Use [Crypto.init()] first');\n        }\n        return Crypto.cryptoAdapter;\n    }\n\n    /**\n     * Initializes the crypto module with platform specific {@link CryptoAdapter}\n     *\n     * This must be called, before any of the crypto functions is being used\n     *\n     * @param cryptoAdapter The platform specific adapter, e.g. {@link NodeJSCryptoAdapter}, {@link WebCryptoAdapter}, or any other provider\n     */\n    static init(cryptoAdapter: CryptoAdapter) {\n        Crypto.cryptoAdapter = cryptoAdapter;\n    }\n\n}\n", "/** @ignore */\n/** @internal */\n\n/* tslint:disable */\n/*\n * Ported to TypeScript 2.4.2 (https://github.com/Microsoft/TypeScript/issues/18158) 09/02/17.\n * Ported to JavaScript from Java 07/01/14.\n * Ported from C to Java by Dmitry Skiba [sahn0], 23/02/08.\n * Original: http://cds.xs4all.nl:8081/ecdh/\n */\n/*\n * Generic 64-bit integer implementation of Curve25519 ECDH\n * Written by Matthijs van Duin, 200608242056\n * Public domain.\n *\n * Based on work by Daniel J Bernstein, http://cr.yp.to/ecdh.html\n */\n\nexport class Curve25519 {\n\n    //region Constants\n\n    public static readonly KEY_SIZE: number = 32;\n\n    /* array length */\n    public static readonly UNPACKED_SIZE: number = 16;\n\n    /* group order (a prime near 2^252+2^124) */\n    public static readonly ORDER: number[] = [\n        237, 211, 245, 92,\n        26, 99, 18, 88,\n        214, 156, 247, 162,\n        222, 249, 222, 20,\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 16\n    ];\n\n    /* smallest multiple of the order that's >= 2^255 */\n    public static readonly ORDER_TIMES_8: number[] = [\n        104, 159, 174, 231,\n        210, 24, 147, 192,\n        178, 230, 188, 23,\n        245, 206, 247, 166,\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 128\n    ];\n\n    /* constants 2Gy and 1/(2Gy) */\n    public static readonly BASE_2Y: number[] = [\n        22587, 610, 29883, 44076,\n        15515, 9479, 25859, 56197,\n        23910, 4462, 17831, 16322,\n        62102, 36542, 52412, 16035\n    ];\n\n    public static readonly BASE_R2Y: number[] = [\n        5744, 16384, 61977, 54121,\n        8776, 18501, 26522, 34893,\n        23833, 5823, 55924, 58749,\n        24147, 14085, 13606, 6080\n    ];\n\n    public static readonly C1: number[] = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    public static readonly C9: number[] = [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    public static readonly C486671 = [0x6D0F, 0x0007, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    public static readonly C39420360 = [0x81C8, 0x0259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n    public static readonly P25: number = 33554431; /* (1 << 25) - 1 */\n    public static readonly P26: number = 67108863; /* (1 << 26) - 1 */\n\n    //#endregion\n\n    //region Key Agreement\n\n    /* Private key clamping\n     *   k [out] your private key for key agreement\n     *   k  [in]  32 random bytes\n     */\n    public static clamp(k) {\n        k[31] &= 0x7F;\n        k[31] |= 0x40;\n        k[ 0] &= 0xF8;\n    }\n\n    //endregion\n\n    //region radix 2^8 math\n\n    public static cpy32(d, s) {\n        for (let i = 0; i < 32; i++)\n            d[i] = s[i];\n    }\n\n    /* p[m..n+m-1] = q[m..n+m-1] + z * x */\n    /* n is the size of x */\n    /* n+m is the size of p and q */\n    public static mula_small(p, q, m, x, n, z) {\n        m = m | 0;\n        n = n | 0;\n        z = z | 0;\n\n        let v = 0;\n        for (let i = 0; i < n; ++i) {\n            v += (q[i + m] & 0xFF) + z * (x[i] & 0xFF);\n            p[i + m] = (v & 0xFF);\n            v >>= 8;\n        }\n\n        return v;\n    }\n\n    /* p += x * y * z  where z is a small integer\n     * x is size 32, y is size t, p is size 32+t\n     * y is allowed to overlap with p+32 if you don't care about the upper half  */\n    public static mula32(p, x, y, t, z) {\n        t = t | 0;\n        z = z | 0;\n\n        let n = 31;\n        let w = 0;\n        let i = 0;\n        for (; i < t; i++) {\n            let zy = z * (y[i] & 0xFF);\n            w += Curve25519.mula_small(p, p, i, x, n, zy) + (p[i+n] & 0xFF) + zy * (x[n] & 0xFF);\n            p[i + n] = w & 0xFF;\n            w >>= 8;\n        }\n        p[i + n] = (w + (p[i + n] & 0xFF)) & 0xFF;\n        return w >> 8;\n    }\n\n    /* divide r (size n) by d (size t), returning quotient q and remainder r\n     * quotient is size n-t+1, remainder is size t\n     * requires t > 0 && d[t-1] !== 0\n     * requires that r[-1] and d[-1] are valid memory locations\n     * q may overlap with r+t */\n    public static divmod(q, r, n, d, t) {\n        n = n | 0;\n        t = t | 0;\n\n        let rn = 0;\n        let dt = (d[t - 1] & 0xFF) << 8;\n        if (t > 1)\n            dt |= (d[t - 2] & 0xFF);\n\n        while (n-- >= t) {\n            let z = (rn << 16) | ((r[n] & 0xFF) << 8);\n            if (n > 0)\n                z |= (r[n - 1] & 0xFF);\n\n            let i = n - t + 1;\n            z /= dt;\n            rn += Curve25519.mula_small(r, r, i, d, t, -z);\n            q[i] = (z + rn) & 0xFF;\n            /* rn is 0 or -1 (underflow) */\n            Curve25519.mula_small(r, r, i, d, t, -rn);\n            rn = r[n] & 0xFF;\n            r[n] = 0;\n        }\n\n        r[t-1] = rn & 0xFF;\n    }\n\n    public static numsize(x, n) {\n        while (n-- !== 0 && x[n] === 0) { }\n        return n + 1;\n    }\n\n    /* Returns x if a contains the gcd, y if b.\n     * Also, the returned buffer contains the inverse of a mod b,\n     * as 32-byte signed.\n     * x and y must have 64 bytes space for temporary use.\n     * requires that a[-1] and b[-1] are valid memory locations  */\n    public static egcd32(x, y, a, b) {\n        let an, bn = 32, qn, i;\n        for (i = 0; i < 32; i++)\n            x[i] = y[i] = 0;\n        x[0] = 1;\n        an = Curve25519.numsize(a, 32);\n        if (an === 0)\n            return y; /* division by zero */\n        let temp = new Array(32);\n        while (true) {\n            qn = bn - an + 1;\n            Curve25519.divmod(temp, b, bn, a, an);\n            bn = Curve25519.numsize(b, bn);\n            if (bn === 0)\n                return x;\n            Curve25519.mula32(y, x, temp, qn, -1);\n\n            qn = an - bn + 1;\n            Curve25519.divmod(temp, a, an, b, bn);\n            an = Curve25519.numsize(a, an);\n            if (an === 0)\n                return y;\n            Curve25519.mula32(x, y, temp, qn, -1);\n        }\n    }\n\n    //endregion\n\n    //region radix 2^25.5 GF(2^255-19) math\n\n    //region pack / unpack\n\n    /* Convert to internal format from little-endian byte format */\n    public static unpack(x, m) {\n        for (let i = 0; i < Curve25519.KEY_SIZE; i += 2)\n            x[i / 2] = m[i] & 0xFF | ((m[i + 1] & 0xFF) << 8);\n    }\n\n    /* Check if reduced-form input >= 2^255-19 */\n    public static is_overflow(x) {\n        return (\n            ((x[0] > Curve25519.P26 - 19)) &&\n                ((x[1] & x[3] & x[5] & x[7] & x[9]) === Curve25519.P25) &&\n                ((x[2] & x[4] & x[6] & x[8]) === Curve25519.P26)\n            ) || (x[9] > Curve25519.P25);\n    }\n\n    /* Convert from internal format to little-endian byte format.  The\n     * number must be in a reduced form which is output by the following ops:\n     *     unpack, mul, sqr\n     *     set --  if input in range 0 .. P25\n     * If you're unsure if the number is reduced, first multiply it by 1.  */\n    public static pack(x, m) {\n        for (let i = 0; i < Curve25519.UNPACKED_SIZE; ++i) {\n            m[2 * i] = x[i] & 0x00FF;\n            m[2 * i + 1] = (x[i] & 0xFF00) >> 8;\n        }\n    }\n\n    //endregion\n\n    public static createUnpackedArray() {\n        return new Uint16Array(Curve25519.UNPACKED_SIZE);\n    }\n\n    /* Copy a number */\n    public static cpy(d, s) {\n        for (let i = 0; i < Curve25519.UNPACKED_SIZE; ++i)\n            d[i] = s[i];\n    }\n\n    /* Set a number to value, which must be in range -185861411 .. 185861411 */\n    public static set(d, s) {\n        d[0] = s;\n        for (let i = 1; i < Curve25519.UNPACKED_SIZE; ++i)\n            d[i] = 0;\n    }\n\n    /* Calculates a reciprocal.  The output is in reduced form, the inputs need not\n     * be.  Simply calculates  y = x^(p-2)  so it's not too fast. */\n    /* When sqrtassist is true, it instead calculates y = x^((p-5)/8) */\n    public static recip(y, x, sqrtassist) {\n        let t0 = Curve25519.createUnpackedArray();\n        let t1 = Curve25519.createUnpackedArray();\n        let t2 = Curve25519.createUnpackedArray();\n        let t3 = Curve25519.createUnpackedArray();\n        let t4 = Curve25519.createUnpackedArray();\n\n        /* the chain for x^(2^255-21) is straight from djb's implementation */\n        let i;\n        Curve25519.sqr(t1, x); /*  2 === 2 * 1\t*/\n        Curve25519.sqr(t2, t1); /*  4 === 2 * 2\t*/\n        Curve25519.sqr(t0, t2); /*  8 === 2 * 4\t*/\n        Curve25519.mul(t2, t0, x); /*  9 === 8 + 1\t*/\n        Curve25519.mul(t0, t2, t1); /* 11 === 9 + 2\t*/\n        Curve25519.sqr(t1, t0); /* 22 === 2 * 11\t*/\n        Curve25519.mul(t3, t1, t2); /* 31 === 22 + 9 === 2^5   - 2^0\t*/\n        Curve25519.sqr(t1, t3); /* 2^6   - 2^1\t*/\n        Curve25519.sqr(t2, t1); /* 2^7   - 2^2\t*/\n        Curve25519.sqr(t1, t2); /* 2^8   - 2^3\t*/\n        Curve25519.sqr(t2, t1); /* 2^9   - 2^4\t*/\n        Curve25519.sqr(t1, t2); /* 2^10  - 2^5\t*/\n        Curve25519.mul(t2, t1, t3); /* 2^10  - 2^0\t*/\n        Curve25519.sqr(t1, t2); /* 2^11  - 2^1\t*/\n        Curve25519.sqr(t3, t1); /* 2^12  - 2^2\t*/\n        for (i = 1; i < 5; i++) {\n            Curve25519.sqr(t1, t3);\n            Curve25519.sqr(t3, t1);\n        } /* t3 */ /* 2^20  - 2^10\t*/\n        Curve25519.mul(t1, t3, t2); /* 2^20  - 2^0\t*/\n        Curve25519.sqr(t3, t1); /* 2^21  - 2^1\t*/\n        Curve25519.sqr(t4, t3); /* 2^22  - 2^2\t*/\n        for (i = 1; i < 10; i++) {\n            Curve25519.sqr(t3, t4);\n            Curve25519.sqr(t4, t3);\n        } /* t4 */ /* 2^40  - 2^20\t*/\n        Curve25519.mul(t3, t4, t1); /* 2^40  - 2^0\t*/\n        for (i = 0; i < 5; i++) {\n            Curve25519.sqr(t1, t3);\n            Curve25519.sqr(t3, t1);\n        } /* t3 */ /* 2^50  - 2^10\t*/\n        Curve25519.mul(t1, t3, t2); /* 2^50  - 2^0\t*/\n        Curve25519.sqr(t2, t1); /* 2^51  - 2^1\t*/\n        Curve25519.sqr(t3, t2); /* 2^52  - 2^2\t*/\n        for (i = 1; i < 25; i++) {\n            Curve25519.sqr(t2, t3);\n            Curve25519.sqr(t3, t2);\n        } /* t3 */ /* 2^100 - 2^50 */\n        Curve25519.mul(t2, t3, t1); /* 2^100 - 2^0\t*/\n        Curve25519.sqr(t3, t2); /* 2^101 - 2^1\t*/\n        Curve25519.sqr(t4, t3); /* 2^102 - 2^2\t*/\n        for (i = 1; i < 50; i++) {\n            Curve25519.sqr(t3, t4);\n            Curve25519.sqr(t4, t3);\n        } /* t4 */ /* 2^200 - 2^100 */\n        Curve25519.mul(t3, t4, t2); /* 2^200 - 2^0\t*/\n        for (i = 0; i < 25; i++) {\n            Curve25519.sqr(t4, t3);\n            Curve25519.sqr(t3, t4);\n        } /* t3 */ /* 2^250 - 2^50\t*/\n        Curve25519.mul(t2, t3, t1); /* 2^250 - 2^0\t*/\n        Curve25519.sqr(t1, t2); /* 2^251 - 2^1\t*/\n        Curve25519.sqr(t2, t1); /* 2^252 - 2^2\t*/\n        if (sqrtassist !== 0) {\n            Curve25519.mul(y, x, t2); /* 2^252 - 3 */\n        } else {\n            Curve25519.sqr(t1, t2); /* 2^253 - 2^3\t*/\n            Curve25519.sqr(t2, t1); /* 2^254 - 2^4\t*/\n            Curve25519.sqr(t1, t2); /* 2^255 - 2^5\t*/\n            Curve25519.mul(y, t1, t0); /* 2^255 - 21\t*/\n        }\n    }\n\n    /* checks if x is \"negative\", requires reduced input */\n    public static is_negative(x) {\n        let isOverflowOrNegative = Curve25519.is_overflow(x) || x[9] < 0;\n        let leastSignificantBit = x[0] & 1;\n        return ((isOverflowOrNegative ? 1 : 0) ^ leastSignificantBit) & 0xFFFFFFFF;\n    }\n\n    /* a square root */\n    public static sqrt(x, u) {\n        let v = Curve25519.createUnpackedArray();\n        let t1 = Curve25519.createUnpackedArray();\n        let t2 = Curve25519.createUnpackedArray();\n\n        Curve25519.add(t1, u, u); /* t1 = 2u\t\t*/\n        Curve25519.recip(v, t1, 1); /* v = (2u)^((p-5)/8)\t*/\n        Curve25519.sqr(x, v); /* x = v^2\t\t*/\n        Curve25519.mul(t2, t1, x); /* t2 = 2uv^2\t\t*/\n        Curve25519.sub(t2, t2, Curve25519.C1); /* t2 = 2uv^2-1\t\t*/\n        Curve25519.mul(t1, v, t2); /* t1 = v(2uv^2-1)\t*/\n        Curve25519.mul(x, u, t1); /* x = uv(2uv^2-1)\t*/\n    }\n\n    //endregion\n\n    //region JavaScript Fast Math\n\n    public static c255lsqr8h(a7, a6, a5, a4, a3, a2, a1, a0) {\n        let r = [];\n        let v;\n        v = a0*a0;\n        r[0] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a0*a1;\n        r[1] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a0*a2 + a1*a1;\n        r[2] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a0*a3 + 2*a1*a2;\n        r[3] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a0*a4 + 2*a1*a3 + a2*a2;\n        r[4] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a0*a5 + 2*a1*a4 + 2*a2*a3;\n        r[5] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a0*a6 + 2*a1*a5 + 2*a2*a4 + a3*a3;\n        r[6] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a0*a7 + 2*a1*a6 + 2*a2*a5 + 2*a3*a4;\n        r[7] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a1*a7 + 2*a2*a6 + 2*a3*a5 + a4*a4;\n        r[8] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a2*a7 + 2*a3*a6 + 2*a4*a5;\n        r[9] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a3*a7 + 2*a4*a6 + a5*a5;\n        r[10] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a4*a7 + 2*a5*a6;\n        r[11] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a5*a7 + a6*a6;\n        r[12] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + 2*a6*a7;\n        r[13] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a7*a7;\n        r[14] = v & 0xFFFF;\n\n        r[15] = ((v / 0x10000) | 0);\n        return r;\n    }\n\n    /* Square a number.  Optimization of  mul25519(x2, x, x)  c255lsqrmodp*/\n    public static sqr(r, a) {\n        let x = Curve25519.c255lsqr8h(a[15], a[14], a[13], a[12], a[11], a[10], a[9], a[8]);\n        let z = Curve25519.c255lsqr8h(a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]);\n        let y = Curve25519.c255lsqr8h(a[15] + a[7], a[14] + a[6], a[13] + a[5], a[12] + a[4], a[11] + a[3], a[10] + a[2], a[9] + a[1], a[8] + a[0]);\n\n        let v;\n        v = 0x800000 + z[0] + (y[8] -x[8] -z[8] + x[0] -0x80) * 38;\n        r[0] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[1] + (y[9] -x[9] -z[9] + x[1]) * 38;\n        r[1] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[2] + (y[10] -x[10] -z[10] + x[2]) * 38;\n        r[2] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[3] + (y[11] -x[11] -z[11] + x[3]) * 38;\n        r[3] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[4] + (y[12] -x[12] -z[12] + x[4]) * 38;\n        r[4] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[5] + (y[13] -x[13] -z[13] + x[5]) * 38;\n        r[5] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[6] + (y[14] -x[14] -z[14] + x[6]) * 38;\n        r[6] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[7] + (y[15] -x[15] -z[15] + x[7]) * 38;\n        r[7] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[8] + y[0] -x[0] -z[0] + x[8] * 38;\n        r[8] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[9] + y[1] -x[1] -z[1] + x[9] * 38;\n        r[9] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[10] + y[2] -x[2] -z[2] + x[10] * 38;\n        r[10] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[11] + y[3] -x[3] -z[3] + x[11] * 38;\n        r[11] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[12] + y[4] -x[4] -z[4] + x[12] * 38;\n        r[12] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[13] + y[5] -x[5] -z[5] + x[13] * 38;\n        r[13] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[14] + y[6] -x[6] -z[6] + x[14] * 38;\n        r[14] = v & 0xFFFF;\n\n        let r15 = 0x7fff80 + ((v / 0x10000) | 0) + z[15] + y[7] -x[7] -z[7] + x[15] * 38;\n        Curve25519.c255lreduce(r, r15);\n    }\n\n    public static c255lmul8h(a7, a6, a5, a4, a3, a2, a1, a0, b7, b6, b5, b4, b3, b2, b1, b0) {\n        let r = [];\n        let v;\n        v = a0*b0;\n        r[0] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a0*b1 + a1*b0;\n        r[1] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a0*b2 + a1*b1 + a2*b0;\n        r[2] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a0*b3 + a1*b2 + a2*b1 + a3*b0;\n        r[3] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a0*b4 + a1*b3 + a2*b2 + a3*b1 + a4*b0;\n        r[4] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a0*b5 + a1*b4 + a2*b3 + a3*b2 + a4*b1 + a5*b0;\n        r[5] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a0*b6 + a1*b5 + a2*b4 + a3*b3 + a4*b2 + a5*b1 + a6*b0;\n        r[6] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a0*b7 + a1*b6 + a2*b5 + a3*b4 + a4*b3 + a5*b2 + a6*b1 + a7*b0;\n        r[7] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a1*b7 + a2*b6 + a3*b5 + a4*b4 + a5*b3 + a6*b2 + a7*b1;\n        r[8] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a2*b7 + a3*b6 + a4*b5 + a5*b4 + a6*b3 + a7*b2;\n        r[9] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a3*b7 + a4*b6 + a5*b5 + a6*b4 + a7*b3;\n        r[10] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a4*b7 + a5*b6 + a6*b5 + a7*b4;\n        r[11] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a5*b7 + a6*b6 + a7*b5;\n        r[12] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a6*b7 + a7*b6;\n        r[13] = v & 0xFFFF;\n\n        v = ((v / 0x10000) | 0) + a7*b7;\n        r[14] = v & 0xFFFF;\n\n        r[15] = ((v / 0x10000) | 0);\n        return r;\n    }\n\n    /* Multiply two numbers.  The output is in reduced form, the inputs need not be. c255lmulmodp*/\n    public static mul(r, a, b) {\n        // Karatsuba multiplication scheme: x*y = (b^2+b)*x1*y1 - b*(x1-x0)*(y1-y0) + (b+1)*x0*y0\n        let x = Curve25519.c255lmul8h(a[15], a[14], a[13], a[12], a[11], a[10], a[9], a[8], b[15], b[14], b[13], b[12], b[11], b[10], b[9], b[8]);\n        let z = Curve25519.c255lmul8h(a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0], b[7], b[6], b[5], b[4], b[3], b[2], b[1], b[0]);\n        let y = Curve25519.c255lmul8h(a[15] + a[7], a[14] + a[6], a[13] + a[5], a[12] + a[4], a[11] + a[3], a[10] + a[2], a[9] + a[1], a[8] + a[0],\n            b[15] + b[7], b[14] + b[6], b[13] + b[5], b[12] + b[4], b[11] + b[3], b[10] + b[2], b[9] + b[1], b[8] + b[0]);\n\n        let v;\n        v = 0x800000 + z[0] + (y[8] -x[8] -z[8] + x[0] -0x80) * 38;\n        r[0] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[1] + (y[9] -x[9] -z[9] + x[1]) * 38;\n        r[1] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[2] + (y[10] -x[10] -z[10] + x[2]) * 38;\n        r[2] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[3] + (y[11] -x[11] -z[11] + x[3]) * 38;\n        r[3] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[4] + (y[12] -x[12] -z[12] + x[4]) * 38;\n        r[4] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[5] + (y[13] -x[13] -z[13] + x[5]) * 38;\n        r[5] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[6] + (y[14] -x[14] -z[14] + x[6]) * 38;\n        r[6] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[7] + (y[15] -x[15] -z[15] + x[7]) * 38;\n        r[7] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[8] + y[0] -x[0] -z[0] + x[8] * 38;\n        r[8] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[9] + y[1] -x[1] -z[1] + x[9] * 38;\n        r[9] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[10] + y[2] -x[2] -z[2] + x[10] * 38;\n        r[10] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[11] + y[3] -x[3] -z[3] + x[11] * 38;\n        r[11] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[12] + y[4] -x[4] -z[4] + x[12] * 38;\n        r[12] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[13] + y[5] -x[5] -z[5] + x[13] * 38;\n        r[13] = v & 0xFFFF;\n\n        v = 0x7fff80 + ((v / 0x10000) | 0) + z[14] + y[6] -x[6] -z[6] + x[14] * 38;\n        r[14] = v & 0xFFFF;\n\n        let r15 = 0x7fff80 + ((v / 0x10000) | 0) + z[15] + y[7] -x[7] -z[7] + x[15] * 38;\n        Curve25519.c255lreduce(r, r15);\n    }\n\n    public static c255lreduce(a, a15) {\n        let v = a15;\n        a[15] = v & 0x7FFF;\n        v = ((v / 0x8000) | 0) * 19;\n        for (let i = 0; i <= 14; ++i) {\n            v += a[i];\n            a[i] = v & 0xFFFF;\n            v = ((v / 0x10000) | 0);\n        }\n\n        a[15] += v;\n    }\n\n    /* Add/subtract two numbers.  The inputs must be in reduced form, and the\n     * output isn't, so to do another addition or subtraction on the output,\n     * first multiply it by one to reduce it. c255laddmodp*/\n    public static add(r, a, b) {\n        let v;\n        v = (((a[15] / 0x8000) | 0) + ((b[15] / 0x8000) | 0)) * 19 + a[0] + b[0];\n        r[0] = v & 0xFFFF;\n        for (let i = 1; i <= 14; ++i) {\n            v = ((v / 0x10000) | 0) + a[i] + b[i];\n            r[i] = v & 0xFFFF;\n        }\n\n        r[15] = ((v / 0x10000) | 0) + (a[15] & 0x7FFF) + (b[15] & 0x7FFF);\n    }\n\n    /* Add/subtract two numbers.  The inputs must be in reduced form, and the\n     * output isn't, so to do another addition or subtraction on the output,\n     * first multiply it by one to reduce it. c255lsubmodp*/\n    public static sub(r, a, b) {\n        let v;\n        v = 0x80000 + (((a[15] / 0x8000) | 0) - ((b[15] / 0x8000) | 0) - 1) * 19 + a[0] - b[0];\n        r[0] = v & 0xFFFF;\n        for (let i = 1; i <= 14; ++i) {\n            v = ((v / 0x10000) | 0) + 0x7fff8 + a[i] - b[i];\n            r[i] = v & 0xFFFF;\n        }\n        r[15] = ((v / 0x10000) | 0) + 0x7ff8 + (a[15] & 0x7FFF) - (b[15] & 0x7FFF);\n    }\n\n    /* Multiply a number by a small integer in range -185861411 .. 185861411.\n     * The output is in reduced form, the input x need not be.  x and xy may point\n     * to the same buffer. c255lmulasmall*/\n    public static mul_small(r, a, m) {\n        let v;\n        v = a[0] * m;\n        r[0] = v & 0xFFFF;\n        for (let i = 1; i <= 14; ++i) {\n            v = ((v / 0x10000) | 0) + a[i]*m;\n            r[i] = v & 0xFFFF;\n        }\n\n        let r15 = ((v / 0x10000) | 0) + a[15]*m;\n        Curve25519.c255lreduce(r, r15);\n    }\n\n    //endregion\n\n    /********************* Elliptic curve *********************/\n\n    /* y^2 = x^3 + 486662 x^2 + x  over GF(2^255-19) */\n\n    /* t1 = ax + az\n     * t2 = ax - az  */\n    public static mont_prep(t1, t2, ax, az) {\n        Curve25519.add(t1, ax, az);\n        Curve25519.sub(t2, ax, az);\n    }\n\n    /* A = P + Q   where\n     *  X(A) = ax/az\n     *  X(P) = (t1+t2)/(t1-t2)\n     *  X(Q) = (t3+t4)/(t3-t4)\n     *  X(P-Q) = dx\n     * clobbers t1 and t2, preserves t3 and t4  */\n    public static mont_add(t1, t2, t3, t4, ax, az, dx) {\n        Curve25519.mul(ax, t2, t3);\n        Curve25519.mul(az, t1, t4);\n        Curve25519.add(t1, ax, az);\n        Curve25519.sub(t2, ax, az);\n        Curve25519.sqr(ax, t1);\n        Curve25519.sqr(t1, t2);\n        Curve25519.mul(az, t1, dx);\n    }\n\n    /* B = 2 * Q   where\n     *  X(B) = bx/bz\n     *  X(Q) = (t3+t4)/(t3-t4)\n     * clobbers t1 and t2, preserves t3 and t4  */\n    public static mont_dbl(t1, t2, t3, t4, bx, bz) {\n        Curve25519.sqr(t1, t3);\n        Curve25519.sqr(t2, t4);\n        Curve25519.mul(bx, t1, t2);\n        Curve25519.sub(t2, t1, t2);\n        Curve25519.mul_small(bz, t2, 121665);\n        Curve25519.add(t1, t1, bz);\n        Curve25519.mul(bz, t1, t2);\n    }\n\n    /* Y^2 = X^3 + 486662 X^2 + X\n     * t is a temporary  */\n    public static x_to_y2(t, y2, x) {\n        Curve25519.sqr(t, x);\n        Curve25519.mul_small(y2, x, 486662);\n        Curve25519.add(t, t, y2);\n        Curve25519.add(t, t, Curve25519.C1);\n        Curve25519.mul(y2, t, x);\n    }\n\n    /* P = kG   and  s = sign(P)/k  */\n    public static core(Px, s, k, Gx) {\n        let dx = Curve25519.createUnpackedArray();\n        let t1 = Curve25519.createUnpackedArray();\n        let t2 = Curve25519.createUnpackedArray();\n        let t3 = Curve25519.createUnpackedArray();\n        let t4 = Curve25519.createUnpackedArray();\n        let x = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n        let z = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n        let i, j;\n\n        /* unpack the base */\n        if (Gx !== null)\n            Curve25519.unpack(dx, Gx);\n        else\n            Curve25519.set(dx, 9);\n\n        /* 0G = point-at-infinity */\n        Curve25519.set(x[0], 1);\n        Curve25519.set(z[0], 0);\n\n        /* 1G = G */\n        Curve25519.cpy(x[1], dx);\n        Curve25519.set(z[1], 1);\n\n        for (i = 32; i-- !== 0;) {\n            for (j = 8; j-- !== 0;) {\n                /* swap arguments depending on bit */\n                let bit1 = (k[i] & 0xFF) >> j & 1;\n                let bit0 = ~(k[i] & 0xFF) >> j & 1;\n                let ax = x[bit0];\n                let az = z[bit0];\n                let bx = x[bit1];\n                let bz = z[bit1];\n\n                /* a' = a + b\t*/\n                /* b' = 2 b\t*/\n                Curve25519.mont_prep(t1, t2, ax, az);\n                Curve25519.mont_prep(t3, t4, bx, bz);\n                Curve25519.mont_add(t1, t2, t3, t4, ax, az, dx);\n                Curve25519.mont_dbl(t1, t2, t3, t4, bx, bz);\n            }\n        }\n\n        Curve25519.recip(t1, z[0], 0);\n        Curve25519.mul(dx, x[0], t1);\n\n        Curve25519.pack(dx, Px);\n\n        /* calculate s such that s abs(P) = G  .. assumes G is std base point */\n        if (s !== null) {\n            Curve25519.x_to_y2(t2, t1, dx); /* t1 = Py^2  */\n            Curve25519.recip(t3, z[1], 0); /* where Q=P+G ... */\n            Curve25519.mul(t2, x[1], t3); /* t2 = Qx  */\n            Curve25519.add(t2, t2, dx); /* t2 = Qx + Px  */\n            Curve25519.add(t2, t2, Curve25519.C486671); /* t2 = Qx + Px + Gx + 486662  */\n            Curve25519.sub(dx, dx, Curve25519.C9); /* dx = Px - Gx  */\n            Curve25519.sqr(t3, dx); /* t3 = (Px - Gx)^2  */\n            Curve25519.mul(dx, t2, t3); /* dx = t2 (Px - Gx)^2  */\n            Curve25519.sub(dx, dx, t1); /* dx = t2 (Px - Gx)^2 - Py^2  */\n            Curve25519.sub(dx, dx, Curve25519.C39420360); /* dx = t2 (Px - Gx)^2 - Py^2 - Gy^2  */\n            Curve25519.mul(t1, dx, Curve25519.BASE_R2Y); /* t1 = -Py  */\n\n            if (Curve25519.is_negative(t1) !== 0)    /* sign is 1, so just copy  */\n                Curve25519.cpy32(s, k);\n            else            /* sign is -1, so negate  */\n                Curve25519.mula_small(s, Curve25519.ORDER_TIMES_8, 0, k, 32, -1);\n\n            /* reduce s mod q\n             * (is this needed?  do it just in case, it's fast anyway) */\n            //divmod((dstptr) t1, s, 32, order25519, 32);\n\n            /* take reciprocal of s mod q */\n            let temp1 = new Array(32);\n            let temp2 = new Array(64);\n            let temp3 = new Array(64);\n            Curve25519.cpy32(temp1, Curve25519.ORDER);\n            Curve25519.cpy32(s, Curve25519.egcd32(temp2, temp3, s, temp1));\n            if ((s[31] & 0x80) !== 0)\n                Curve25519.mula_small(s, s, 0, Curve25519.ORDER, 32, 1);\n\n        }\n    }\n\n}\n", "/** @ignore */\n/** @internal*/\n/* tslint:disable */\n\n/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n/********* DIGITAL SIGNATURES *********/\n\n/* deterministic EC-KCDSA\n *\n *    s is the private key for signing\n *    P is the corresponding public key\n *    Z is the context data (signer public key or certificate, etc)\n *\n * signing:\n *\n *    m = hash(Z, message)\n *    x = hash(m, s)\n *    keygen25519(Y, NULL, x);\n *    r = hash(Y);\n *    h = m XOR r\n *    sign25519(v, h, x, s);\n *\n *    output (v,r) as the signature\n *\n * verification:\n *\n *    m = hash(Z, message);\n *    h = m XOR r\n *    verify25519(Y, v, h, P)\n *\n *    confirm  r === hash(Y)\n *\n * It would seem to me that it would be simpler to have the signer directly do\n * h = hash(m, Y) and send that to the recipient instead of r, who can verify\n * the signature by checking h === hash(m, Y).  If there are any problems with\n * such a scheme, please let me know.\n *\n * Also, EC-KCDSA (like most DS algorithms) picks x random, which is a waste of\n * perfectly good entropy, but does allow Y to be calculated in advance of (or\n * parallel to) hashing the message.\n */\n\n/* Signature generation primitive, calculates (x-h)s mod q\n *   h  [in]  signature hash (of message, signature pub key, and context data)\n *   x  [in]  signature private key\n *   s  [in]  private key for signing\n * returns signature value on success, undefined on failure (use different x or h)\n */\n\nimport { Curve25519 } from \"./curve25519\";\n\nexport class ECKCDSA {\n\n    public static sign(h, x, s) {\n        // v = (x - h) s  mod q\n        let w, i;\n        let h1 = new Array(32);\n        let x1 = new Array(32);\n        let tmp1 = new Array(64);\n        let tmp2 = new Array(64);\n\n        // Don't clobber the arguments, be nice!\n        Curve25519.cpy32(h1, h);\n        Curve25519.cpy32(x1, x);\n\n        // Reduce modulo group order\n        let tmp3 = new Array(32);\n        Curve25519.divmod(tmp3, h1, 32, Curve25519.ORDER, 32);\n        Curve25519.divmod(tmp3, x1, 32, Curve25519.ORDER, 32);\n\n        // v = x1 - h1\n        // If v is negative, add the group order to it to become positive.\n        // If v was already positive we don't have to worry about overflow\n        // when adding the order because v < ORDER and 2*ORDER < 2^256\n        let v = new Array(32);\n        Curve25519.mula_small(v, x1, 0, h1, 32, -1);\n        Curve25519.mula_small(v, v , 0, Curve25519.ORDER, 32, 1);\n\n        // tmp1 = (x-h)*s mod q\n        Curve25519.mula32(tmp1, v, s, 32, 1);\n        Curve25519.divmod(tmp2, tmp1, 64, Curve25519.ORDER, 32);\n\n        for (w = 0, i = 0; i < 32; i++)\n            w |= v[i] = tmp1[i];\n\n        return w !== 0 ? v : undefined;\n    }\n\n    /* Signature verification primitive, calculates Y = vP + hG\n     *   v  [in]  signature value\n     *   h  [in]  signature hash\n     *   P  [in]  public key\n     *   Returns signature public key\n     */\n    public static verify(v, h, P) {\n        /* Y = v abs(P) + h G  */\n        let d = new Array(32);\n        let p = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n        let s = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n        let yx = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n        let yz = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n        let t1 = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n        let t2 = [Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray(), Curve25519.createUnpackedArray()];\n\n        let vi = 0, hi = 0, di = 0, nvh = 0, i, j, k;\n\n        /* set p[0] to G and p[1] to P  */\n\n        Curve25519.set(p[0], 9);\n        Curve25519.unpack(p[1], P);\n\n        /* set s[0] to P+G and s[1] to P-G  */\n\n        /* s[0] = (Py^2 + Gy^2 - 2 Py Gy)/(Px - Gx)^2 - Px - Gx - 486662  */\n        /* s[1] = (Py^2 + Gy^2 + 2 Py Gy)/(Px - Gx)^2 - Px - Gx - 486662  */\n\n        Curve25519.x_to_y2(t1[0], t2[0], p[1]); /* t2[0] = Py^2  */\n        Curve25519.sqrt(t1[0], t2[0]); /* t1[0] = Py or -Py  */\n        j = Curve25519.is_negative(t1[0]); /*      ... check which  */\n        Curve25519.add(t2[0], t2[0], Curve25519.C39420360); /* t2[0] = Py^2 + Gy^2  */\n        Curve25519.mul(t2[1], Curve25519.BASE_2Y, t1[0]); /* t2[1] = 2 Py Gy or -2 Py Gy  */\n        Curve25519.sub(t1[j], t2[0], t2[1]); /* t1[0] = Py^2 + Gy^2 - 2 Py Gy  */\n        Curve25519.add(t1[1 - j], t2[0], t2[1]); /* t1[1] = Py^2 + Gy^2 + 2 Py Gy  */\n        Curve25519.cpy(t2[0], p[1]); /* t2[0] = Px  */\n        Curve25519.sub(t2[0], t2[0], Curve25519.C9); /* t2[0] = Px - Gx  */\n        Curve25519.sqr(t2[1], t2[0]); /* t2[1] = (Px - Gx)^2  */\n        Curve25519.recip(t2[0], t2[1], 0); /* t2[0] = 1/(Px - Gx)^2  */\n        Curve25519.mul(s[0], t1[0], t2[0]); /* s[0] = t1[0]/(Px - Gx)^2  */\n        Curve25519.sub(s[0], s[0], p[1]); /* s[0] = t1[0]/(Px - Gx)^2 - Px  */\n        Curve25519.sub(s[0], s[0], Curve25519.C486671); /* s[0] = X(P+G)  */\n        Curve25519.mul(s[1], t1[1], t2[0]); /* s[1] = t1[1]/(Px - Gx)^2  */\n        Curve25519.sub(s[1], s[1], p[1]); /* s[1] = t1[1]/(Px - Gx)^2 - Px  */\n        Curve25519.sub(s[1], s[1], Curve25519.C486671); /* s[1] = X(P-G)  */\n        Curve25519.mul_small(s[0], s[0], 1); /* reduce s[0] */\n        Curve25519.mul_small(s[1], s[1], 1); /* reduce s[1] */\n\n        /* prepare the chain  */\n        for (i = 0; i < 32; i++) {\n            vi = (vi >> 8) ^ (v[i] & 0xFF) ^ ((v[i] & 0xFF) << 1);\n            hi = (hi >> 8) ^ (h[i] & 0xFF) ^ ((h[i] & 0xFF) << 1);\n            nvh = ~(vi ^ hi);\n            di = (nvh & (di & 0x80) >> 7) ^ vi;\n            di ^= nvh & (di & 0x01) << 1;\n            di ^= nvh & (di & 0x02) << 1;\n            di ^= nvh & (di & 0x04) << 1;\n            di ^= nvh & (di & 0x08) << 1;\n            di ^= nvh & (di & 0x10) << 1;\n            di ^= nvh & (di & 0x20) << 1;\n            di ^= nvh & (di & 0x40) << 1;\n            d[i] = di & 0xFF;\n        }\n\n        di = ((nvh & (di & 0x80) << 1) ^ vi) >> 8;\n\n        /* initialize state */\n        Curve25519.set(yx[0], 1);\n        Curve25519.cpy(yx[1], p[di]);\n        Curve25519.cpy(yx[2], s[0]);\n        Curve25519.set(yz[0], 0);\n        Curve25519.set(yz[1], 1);\n        Curve25519.set(yz[2], 1);\n\n        /* y[0] is (even)P + (even)G\n         * y[1] is (even)P + (odd)G  if current d-bit is 0\n         * y[1] is (odd)P + (even)G  if current d-bit is 1\n         * y[2] is (odd)P + (odd)G\n         */\n\n        vi = 0;\n        hi = 0;\n\n        /* and go for it! */\n        for (i = 32; i-- !== 0;) {\n            vi = (vi << 8) | (v[i] & 0xFF);\n            hi = (hi << 8) | (h[i] & 0xFF);\n            di = (di << 8) | (d[i] & 0xFF);\n\n            for (j = 8; j-- !== 0;) {\n                Curve25519.mont_prep(t1[0], t2[0], yx[0], yz[0]);\n                Curve25519.mont_prep(t1[1], t2[1], yx[1], yz[1]);\n                Curve25519.mont_prep(t1[2], t2[2], yx[2], yz[2]);\n\n                k = ((vi ^ vi >> 1) >> j & 1)\n                    + ((hi ^ hi >> 1) >> j & 1);\n                Curve25519.mont_dbl(yx[2], yz[2], t1[k], t2[k], yx[0], yz[0]);\n\n                k = (di >> j & 2) ^ ((di >> j & 1) << 1);\n                Curve25519.mont_add(t1[1], t2[1], t1[k], t2[k], yx[1], yz[1],\n                    p[di >> j & 1]);\n\n                Curve25519.mont_add(t1[2], t2[2], t1[0], t2[0], yx[2], yz[2],\n                    s[((vi ^ hi) >> j & 2) >> 1]);\n            }\n        }\n\n        k = (vi & 1) + (hi & 1);\n        Curve25519.recip(t1[0], yz[k], 0);\n        Curve25519.mul(t1[1], yx[k], t1[0]);\n\n        let Y = [];\n        Curve25519.pack(t1[1], Y);\n        return Y;\n    }\n\n    /* Key-pair generation\n     *   P  [out] your public key\n     *   s  [out] your private key for signing\n     *   k  [out] your private key for key agreement\n     *   k  [in]  32 random bytes\n     * s may be NULL if you don't care\n     *\n     * WARNING: if s is not NULL, this function has data-dependent timing */\n    public static keygen(k) {\n        let P = [];\n        let s = [];\n        k = k || [];\n        Curve25519.clamp(k);\n        Curve25519.core(P, s, k, null);\n        return { p: P, s: s, k: k };\n    }\n\n\n    /*\n    * Get private key for encryption\n    */\n    public static clamp(k) {\n        Curve25519.clamp(k);\n        return k;\n    }\n\n    /*\n    * Get shared key for encryption\n    */\n    public static sharedkey(privateKey, publicKey) {\n        let P = [];\n        Curve25519.core(P, null, privateKey, publicKey);\n        return P;\n    }\n\n}\n", "/**\n \n * @internal\n * @ignore\n */\nexport const CryptoParams = {\n    IvLength: 16,\n    SharedKeyLength: 32\n};\n", "import {Buffer} from 'buffer';\nimport {Crypto} from './crypto';\n\nexport * from './ec-kcdsa';\nexport * from './curve25519';\nexport * from './cryptoParams';\nexport {\n    Crypto,\n    Buffer\n};\n\n// browser polyfill!\n// @ts-ignore\nglobalThis.Buffer = Buffer;\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2024 Signum Network\n */\n\nimport {inflate} from 'pako/lib/inflate';\nimport {ECKCDSA, Crypto, Buffer, CryptoParams} from './base';\nimport {EncryptedData} from './typings/encryptedData';\nimport {EncryptedMessage} from './typings/encryptedMessage';\nimport {CryptoError} from './typings/cryptoError';\n\n/**\n *\n * @ignore\n * @internal\n *\n */\nasync function decrypt(ivCiphertext: Uint8Array, nonce: Uint8Array, sharedKeyOrig: any[]) {\n    if (ivCiphertext.length < CryptoParams.IvLength || ivCiphertext.length % CryptoParams.IvLength !== 0) {\n        throw new CryptoError('Invalid Ciphertext');\n    }\n    const sharedKey = new Uint8Array(sharedKeyOrig.slice(0));\n    for (let i = 0; i < CryptoParams.SharedKeyLength; i++) {\n        sharedKey[i] ^= nonce[i];\n    }\n    try {\n        const adapter = Crypto.adapter;\n        const key = adapter.sha256(sharedKey);\n        return await adapter.decryptAes256Cbc(ivCiphertext, key);\n    } catch (e) {\n        // @ts-ignore\n        throw new CryptoError(e.message);\n    }\n}\n\n/**\n * Decrypts an encrypted cipher text\n * @param encryptedData The encrypted data\n * @param senderPublicKeyHex The senders public key in hex format\n * @param recipientPrivateKeyHex The recipients private (agreement) key in hex format\n * @return The original plain text\n *\n * @category en/decryption\n */\nexport async function decryptData(\n    encryptedData: EncryptedData,\n    senderPublicKeyHex: string,\n    recipientPrivateKeyHex: string): Promise<Uint8Array> {\n    try {\n        const sharedKey =\n            ECKCDSA.sharedkey(\n                Buffer.from(recipientPrivateKeyHex, 'hex'),\n                Buffer.from(senderPublicKeyHex, 'hex'),\n            );\n\n        const compressedPlaintext = await decrypt(encryptedData.data, encryptedData.nonce, sharedKey);\n        return inflate(compressedPlaintext);\n    } catch (e) {\n        // @ts-ignore\n        throw new CryptoError(e.message);\n    }\n}\n\n\n/**\n * Decrypts an encrypted Message\n * @param encryptedMessage The encrypted message\n * @param senderPublicKeyHex The senders public key in hex format\n * @param recipientPrivateKeyHex The recipients private (agreement) key in hex format\n * @return The original message\n *\n * @category en/decryption\n */\nexport async function decryptMessage(\n    encryptedMessage: EncryptedMessage,\n    senderPublicKeyHex: string,\n    recipientPrivateKeyHex: string): Promise<string> {\n\n    if (!encryptedMessage.isText) {\n        throw new CryptoError('Encrypted message is marked as non-text. Use decryptData instead');\n    }\n\n    const encryptedData = {\n        data: new Uint8Array(Buffer.from(encryptedMessage.data, 'hex')),\n        nonce: new Uint8Array(Buffer.from(encryptedMessage.nonce, 'hex'))\n    };\n\n    const decryptedBytes = await decryptData(encryptedData, senderPublicKeyHex, recipientPrivateKeyHex);\n    return Buffer.from(decryptedBytes).toString('utf-8');\n}\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n", "'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n", "/**\n * Original work Copyright (c) 2024 Signum Network\n */\n\nimport {Crypto, Buffer} from './base';\n\n/**\n * Gets am Array of random bytes\n *\n * This random function used is based on what kind of entropy the User Agent (Browser, OS) returns.\n * Depending on its runtime environment, it may use https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n * or https://nodejs.org/api/webcrypto.html#cryptogetrandomvaluestypedarray\n *\n * This means for that for browsers a secure context, i.e. https is required to make it work!\n *\n * @param length Length of array\n *\n * @return An array of bytes of given length\n *\n *\n * @category random\n */\nexport function getRandomBytes(length: number): Uint8Array {\n    return Crypto.adapter.getRandomValues(new Uint8Array(length));\n}\n\n/**\n * Gets an array of random words from a dictionary\n *\n * > Usually 2048 words are sufficient. This method does not support dictionaries with more than 65536 words\n *\n * @param count The number of words generated\n * @param dictionary An array of strings from where the random words are picked\n *\n * @return An array with _count_ words\n * @throws An error if dictionary's length is smaller than _count_\n *\n * @category random\n */\nexport function getRandomWords(count: number, dictionary: string[]): string[] {\n    if (count > dictionary.length) {\n        throw new Error('Too few words in dictionary');\n    }\n    if (dictionary.length > 2 ** 32) {\n        throw new Error('Dictionary must have less than 65536 words');\n    }\n\n    const indices = new Set<number>();\n    const mask = 2 ** 32 - (2 ** 32 % dictionary.length);\n    const randomBytes = new Uint8Array(4);\n    const cp = Crypto.adapter;\n    while (indices.size < count) {\n        cp.getRandomValues(randomBytes);\n        const randomUint32 = ((randomBytes[0] << 24) | (randomBytes[1] << 16) | (randomBytes[2] << 8) | randomBytes[3]) >>> 0;\n        const randomIndex = randomUint32 % dictionary.length;\n        // avoid random bias\n        if (randomUint32 < mask) {\n            indices.add(randomUint32 % dictionary.length);\n        }\n    }\n    return Array.from(indices).map(index => dictionary[index]);\n}\n\n/**\n * Default Alphabet\n * @see {@link getRandomString}\n *\n * @category random\n */\nexport const DefaultAlphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' as string;\n\n/**\n * Gets a string of random characters from a given alphabet\n *\n * @param length The length of the resulting string\n * @param alphabet An string with characters used for random picks. Default Alphabet is alphanumeric without special chars\n *\n * @return A string with random characters of given length\n * @throws An error if alphabet is empty or too large (2^16 chars is limit)\n *\n * @category random\n */\nexport function getRandomString(length: number, alphabet: string = DefaultAlphabet): string {\n    if (alphabet.length === 0) {\n        throw new Error('Alphabet must not be empty.');\n    }\n    const MaxLength = 65536; // 2**16\n    if (alphabet.length >= MaxLength) { // just supporting UInt16\n        throw new Error(`Alphabet is too large. Alphabet must be less than ${MaxLength} characters long.`);\n    }\n    const maxNonBiasedValue = Math.floor(MaxLength / alphabet.length) * alphabet.length;\n\n    const indices = Crypto.adapter.getRandomValues(new Uint8Array(length * 2));\n    const uint16View = new Uint16Array(indices.buffer);\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        let value = uint16View[i];\n        // Reject values that would create bias\n        while (value >= maxNonBiasedValue) {\n            const newBytes = Crypto.adapter.getRandomValues(new Uint8Array(2));\n            value = new Uint16Array(newBytes.buffer)[0];\n        }\n        result += alphabet[value % alphabet.length];\n    }\n    return result;\n}\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2024 Signum Network\n */\n\nimport {ECKCDSA, Crypto, Buffer,CryptoParams} from './base';\nimport {EncryptedData} from './typings/encryptedData';\nimport {deflate} from 'pako/lib/deflate';\nimport {getRandomBytes} from './random';\nimport {EncryptedMessage} from './typings/encryptedMessage';\nimport {CryptoError} from './typings/cryptoError';\n\n/**\n *\n * @ignore\n * @internal\n */\nasync function encrypt(plaintext: Uint8Array, nonce: Uint8Array, sharedKeyOrig: any[]) {\n    try {\n        const sharedKey = new Uint8Array(sharedKeyOrig.slice(0));\n        for (let i = 0; i < CryptoParams.SharedKeyLength; i++) {\n            sharedKey[i] ^= nonce[i];\n        }\n        const adapter = Crypto.adapter;\n        const key = adapter.sha256(sharedKey);\n        return await adapter.encryptAes256Cbc(plaintext, key);\n    } catch (e) {\n        // @ts-ignore\n        throw new CryptoError(e.message);\n    }\n}\n\n/**\n * Encrypts arbitrary data for P2P message/data exchange using asymmetric encryption\n *\n * @see {@link decryptData}\n * @param plaintext Data to be encrypted\n * @param recipientPublicKeyHex The recipients public key in hexadecimal format\n * @param senderPrivateKeyHex The senders private (agreement) key hexadecimal format\n * @return The encrypted Data\n *\n * @category en/decryption\n */\nexport async function encryptData(\n    plaintext: Uint8Array,\n    recipientPublicKeyHex: string,\n    senderPrivateKeyHex: string): Promise<EncryptedData> {\n\n    try {\n\n        const sharedKey =\n            ECKCDSA.sharedkey(\n                Buffer.from(senderPrivateKeyHex, 'hex'),\n                Buffer.from(recipientPublicKeyHex, 'hex'),\n            );\n\n        const compressedData = deflate(plaintext);\n        const nonce = getRandomBytes(CryptoParams.SharedKeyLength);\n        const data = await encrypt(compressedData, nonce, sharedKey);\n        return {\n            nonce,\n            data\n        };\n    } catch (e) {\n        // @ts-ignore\n        throw new CryptoError(e.message);\n    }\n}\n\n\n/**\n * Encrypts arbitrary message (UTF-8 compatible) for P2P message/data exchange using asymmetric encryption\n * @see {@link decryptMessage}\n * @param plaintext Message to be encrypted\n * @param recipientPublicKeyHex The recipients public key hexadecimal format\n * @param senderPrivateKeyHex The senders private (agreement) key hexadecimal format\n * @return The encrypted Message\n *\n * @category en/decryption\n */\nexport async function encryptMessage(plaintext: string, recipientPublicKeyHex: string, senderPrivateKeyHex: string)\n    : Promise<EncryptedMessage> {\n\n    const data = new Uint8Array(Buffer.from(plaintext, 'utf-8'));\n    const encryptedData = await encryptData(data, recipientPublicKeyHex, senderPrivateKeyHex);\n\n    return {\n        data: Buffer.from(encryptedData.data).toString('hex'),\n        nonce: Buffer.from(encryptedData.nonce).toString('hex'),\n        isText: true,\n    };\n}\n", "/** @ignore */\n/* */\n\n// taken from https://raw.githubusercontent.com/bitcoin/bips/master/bip-0039/english.txt\nexport const words: string[] = [\n    'abandon',\n    'ability',\n    'able',\n    'about',\n    'above',\n    'absent',\n    'absorb',\n    'abstract',\n    'absurd',\n    'abuse',\n    'access',\n    'accident',\n    'account',\n    'accuse',\n    'achieve',\n    'acid',\n    'acoustic',\n    'acquire',\n    'across',\n    'act',\n    'action',\n    'actor',\n    'actress',\n    'actual',\n    'adapt',\n    'add',\n    'addict',\n    'address',\n    'adjust',\n    'admit',\n    'adult',\n    'advance',\n    'advice',\n    'aerobic',\n    'affair',\n    'afford',\n    'afraid',\n    'again',\n    'age',\n    'agent',\n    'agree',\n    'ahead',\n    'aim',\n    'air',\n    'airport',\n    'aisle',\n    'alarm',\n    'album',\n    'alcohol',\n    'alert',\n    'alien',\n    'all',\n    'alley',\n    'allow',\n    'almost',\n    'alone',\n    'alpha',\n    'already',\n    'also',\n    'alter',\n    'always',\n    'amateur',\n    'amazing',\n    'among',\n    'amount',\n    'amused',\n    'analyst',\n    'anchor',\n    'ancient',\n    'anger',\n    'angle',\n    'angry',\n    'animal',\n    'ankle',\n    'announce',\n    'annual',\n    'another',\n    'answer',\n    'antenna',\n    'antique',\n    'anxiety',\n    'any',\n    'apart',\n    'apology',\n    'appear',\n    'apple',\n    'approve',\n    'april',\n    'arch',\n    'arctic',\n    'area',\n    'arena',\n    'argue',\n    'arm',\n    'armed',\n    'armor',\n    'army',\n    'around',\n    'arrange',\n    'arrest',\n    'arrive',\n    'arrow',\n    'art',\n    'artefact',\n    'artist',\n    'artwork',\n    'ask',\n    'aspect',\n    'assault',\n    'asset',\n    'assist',\n    'assume',\n    'asthma',\n    'athlete',\n    'atom',\n    'attack',\n    'attend',\n    'attitude',\n    'attract',\n    'auction',\n    'audit',\n    'august',\n    'aunt',\n    'author',\n    'auto',\n    'autumn',\n    'average',\n    'avocado',\n    'avoid',\n    'awake',\n    'aware',\n    'away',\n    'awesome',\n    'awful',\n    'awkward',\n    'axis',\n    'baby',\n    'bachelor',\n    'bacon',\n    'badge',\n    'bag',\n    'balance',\n    'balcony',\n    'ball',\n    'bamboo',\n    'banana',\n    'banner',\n    'bar',\n    'barely',\n    'bargain',\n    'barrel',\n    'base',\n    'basic',\n    'basket',\n    'battle',\n    'beach',\n    'bean',\n    'beauty',\n    'because',\n    'become',\n    'beef',\n    'before',\n    'begin',\n    'behave',\n    'behind',\n    'believe',\n    'below',\n    'belt',\n    'bench',\n    'benefit',\n    'best',\n    'betray',\n    'better',\n    'between',\n    'beyond',\n    'bicycle',\n    'bid',\n    'bike',\n    'bind',\n    'biology',\n    'bird',\n    'birth',\n    'bitter',\n    'black',\n    'blade',\n    'blame',\n    'blanket',\n    'blast',\n    'bleak',\n    'bless',\n    'blind',\n    'blood',\n    'blossom',\n    'blouse',\n    'blue',\n    'blur',\n    'blush',\n    'board',\n    'boat',\n    'body',\n    'boil',\n    'bomb',\n    'bone',\n    'bonus',\n    'book',\n    'boost',\n    'border',\n    'boring',\n    'borrow',\n    'boss',\n    'bottom',\n    'bounce',\n    'box',\n    'boy',\n    'bracket',\n    'brain',\n    'brand',\n    'brass',\n    'brave',\n    'bread',\n    'breeze',\n    'brick',\n    'bridge',\n    'brief',\n    'bright',\n    'bring',\n    'brisk',\n    'broccoli',\n    'broken',\n    'bronze',\n    'broom',\n    'brother',\n    'brown',\n    'brush',\n    'bubble',\n    'buddy',\n    'budget',\n    'buffalo',\n    'build',\n    'bulb',\n    'bulk',\n    'bullet',\n    'bundle',\n    'bunker',\n    'burden',\n    'burger',\n    'burst',\n    'bus',\n    'business',\n    'busy',\n    'butter',\n    'buyer',\n    'buzz',\n    'cabbage',\n    'cabin',\n    'cable',\n    'cactus',\n    'cage',\n    'cake',\n    'call',\n    'calm',\n    'camera',\n    'camp',\n    'can',\n    'canal',\n    'cancel',\n    'candy',\n    'cannon',\n    'canoe',\n    'canvas',\n    'canyon',\n    'capable',\n    'capital',\n    'captain',\n    'car',\n    'carbon',\n    'card',\n    'cargo',\n    'carpet',\n    'carry',\n    'cart',\n    'case',\n    'cash',\n    'casino',\n    'castle',\n    'casual',\n    'cat',\n    'catalog',\n    'catch',\n    'category',\n    'cattle',\n    'caught',\n    'cause',\n    'caution',\n    'cave',\n    'ceiling',\n    'celery',\n    'cement',\n    'census',\n    'century',\n    'cereal',\n    'certain',\n    'chair',\n    'chalk',\n    'champion',\n    'change',\n    'chaos',\n    'chapter',\n    'charge',\n    'chase',\n    'chat',\n    'cheap',\n    'check',\n    'cheese',\n    'chef',\n    'cherry',\n    'chest',\n    'chicken',\n    'chief',\n    'child',\n    'chimney',\n    'choice',\n    'choose',\n    'chronic',\n    'chuckle',\n    'chunk',\n    'churn',\n    'cigar',\n    'cinnamon',\n    'circle',\n    'citizen',\n    'city',\n    'civil',\n    'claim',\n    'clap',\n    'clarify',\n    'claw',\n    'clay',\n    'clean',\n    'clerk',\n    'clever',\n    'click',\n    'client',\n    'cliff',\n    'climb',\n    'clinic',\n    'clip',\n    'clock',\n    'clog',\n    'close',\n    'cloth',\n    'cloud',\n    'clown',\n    'club',\n    'clump',\n    'cluster',\n    'clutch',\n    'coach',\n    'coast',\n    'coconut',\n    'code',\n    'coffee',\n    'coil',\n    'coin',\n    'collect',\n    'color',\n    'column',\n    'combine',\n    'come',\n    'comfort',\n    'comic',\n    'common',\n    'company',\n    'concert',\n    'conduct',\n    'confirm',\n    'congress',\n    'connect',\n    'consider',\n    'control',\n    'convince',\n    'cook',\n    'cool',\n    'copper',\n    'copy',\n    'coral',\n    'core',\n    'corn',\n    'correct',\n    'cost',\n    'cotton',\n    'couch',\n    'country',\n    'couple',\n    'course',\n    'cousin',\n    'cover',\n    'coyote',\n    'crack',\n    'cradle',\n    'craft',\n    'cram',\n    'crane',\n    'crash',\n    'crater',\n    'crawl',\n    'crazy',\n    'cream',\n    'credit',\n    'creek',\n    'crew',\n    'cricket',\n    'crime',\n    'crisp',\n    'critic',\n    'crop',\n    'cross',\n    'crouch',\n    'crowd',\n    'crucial',\n    'cruel',\n    'cruise',\n    'crumble',\n    'crunch',\n    'crush',\n    'cry',\n    'crystal',\n    'cube',\n    'culture',\n    'cup',\n    'cupboard',\n    'curious',\n    'current',\n    'curtain',\n    'curve',\n    'cushion',\n    'custom',\n    'cute',\n    'cycle',\n    'dad',\n    'damage',\n    'damp',\n    'dance',\n    'danger',\n    'daring',\n    'dash',\n    'daughter',\n    'dawn',\n    'day',\n    'deal',\n    'debate',\n    'debris',\n    'decade',\n    'december',\n    'decide',\n    'decline',\n    'decorate',\n    'decrease',\n    'deer',\n    'defense',\n    'define',\n    'defy',\n    'degree',\n    'delay',\n    'deliver',\n    'demand',\n    'demise',\n    'denial',\n    'dentist',\n    'deny',\n    'depart',\n    'depend',\n    'deposit',\n    'depth',\n    'deputy',\n    'derive',\n    'describe',\n    'desert',\n    'design',\n    'desk',\n    'despair',\n    'destroy',\n    'detail',\n    'detect',\n    'develop',\n    'device',\n    'devote',\n    'diagram',\n    'dial',\n    'diamond',\n    'diary',\n    'dice',\n    'diesel',\n    'diet',\n    'differ',\n    'digital',\n    'dignity',\n    'dilemma',\n    'dinner',\n    'dinosaur',\n    'direct',\n    'dirt',\n    'disagree',\n    'discover',\n    'disease',\n    'dish',\n    'dismiss',\n    'disorder',\n    'display',\n    'distance',\n    'divert',\n    'divide',\n    'divorce',\n    'dizzy',\n    'doctor',\n    'document',\n    'dog',\n    'doll',\n    'dolphin',\n    'domain',\n    'donate',\n    'donkey',\n    'donor',\n    'door',\n    'dose',\n    'double',\n    'dove',\n    'draft',\n    'dragon',\n    'drama',\n    'drastic',\n    'draw',\n    'dream',\n    'dress',\n    'drift',\n    'drill',\n    'drink',\n    'drip',\n    'drive',\n    'drop',\n    'drum',\n    'dry',\n    'duck',\n    'dumb',\n    'dune',\n    'during',\n    'dust',\n    'dutch',\n    'duty',\n    'dwarf',\n    'dynamic',\n    'eager',\n    'eagle',\n    'early',\n    'earn',\n    'earth',\n    'easily',\n    'east',\n    'easy',\n    'echo',\n    'ecology',\n    'economy',\n    'edge',\n    'edit',\n    'educate',\n    'effort',\n    'egg',\n    'eight',\n    'either',\n    'elbow',\n    'elder',\n    'electric',\n    'elegant',\n    'element',\n    'elephant',\n    'elevator',\n    'elite',\n    'else',\n    'embark',\n    'embody',\n    'embrace',\n    'emerge',\n    'emotion',\n    'employ',\n    'empower',\n    'empty',\n    'enable',\n    'enact',\n    'end',\n    'endless',\n    'endorse',\n    'enemy',\n    'energy',\n    'enforce',\n    'engage',\n    'engine',\n    'enhance',\n    'enjoy',\n    'enlist',\n    'enough',\n    'enrich',\n    'enroll',\n    'ensure',\n    'enter',\n    'entire',\n    'entry',\n    'envelope',\n    'episode',\n    'equal',\n    'equip',\n    'era',\n    'erase',\n    'erode',\n    'erosion',\n    'error',\n    'erupt',\n    'escape',\n    'essay',\n    'essence',\n    'estate',\n    'eternal',\n    'ethics',\n    'evidence',\n    'evil',\n    'evoke',\n    'evolve',\n    'exact',\n    'example',\n    'excess',\n    'exchange',\n    'excite',\n    'exclude',\n    'excuse',\n    'execute',\n    'exercise',\n    'exhaust',\n    'exhibit',\n    'exile',\n    'exist',\n    'exit',\n    'exotic',\n    'expand',\n    'expect',\n    'expire',\n    'explain',\n    'expose',\n    'express',\n    'extend',\n    'extra',\n    'eye',\n    'eyebrow',\n    'fabric',\n    'face',\n    'faculty',\n    'fade',\n    'faint',\n    'faith',\n    'fall',\n    'false',\n    'fame',\n    'family',\n    'famous',\n    'fan',\n    'fancy',\n    'fantasy',\n    'farm',\n    'fashion',\n    'fat',\n    'fatal',\n    'father',\n    'fatigue',\n    'fault',\n    'favorite',\n    'feature',\n    'february',\n    'federal',\n    'fee',\n    'feed',\n    'feel',\n    'female',\n    'fence',\n    'festival',\n    'fetch',\n    'fever',\n    'few',\n    'fiber',\n    'fiction',\n    'field',\n    'figure',\n    'file',\n    'film',\n    'filter',\n    'final',\n    'find',\n    'fine',\n    'finger',\n    'finish',\n    'fire',\n    'firm',\n    'first',\n    'fiscal',\n    'fish',\n    'fit',\n    'fitness',\n    'fix',\n    'flag',\n    'flame',\n    'flash',\n    'flat',\n    'flavor',\n    'flee',\n    'flight',\n    'flip',\n    'float',\n    'flock',\n    'floor',\n    'flower',\n    'fluid',\n    'flush',\n    'fly',\n    'foam',\n    'focus',\n    'fog',\n    'foil',\n    'fold',\n    'follow',\n    'food',\n    'foot',\n    'force',\n    'forest',\n    'forget',\n    'fork',\n    'fortune',\n    'forum',\n    'forward',\n    'fossil',\n    'foster',\n    'found',\n    'fox',\n    'fragile',\n    'frame',\n    'frequent',\n    'fresh',\n    'friend',\n    'fringe',\n    'frog',\n    'front',\n    'frost',\n    'frown',\n    'frozen',\n    'fruit',\n    'fuel',\n    'fun',\n    'funny',\n    'furnace',\n    'fury',\n    'future',\n    'gadget',\n    'gain',\n    'galaxy',\n    'gallery',\n    'game',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'garlic',\n    'garment',\n    'gas',\n    'gasp',\n    'gate',\n    'gather',\n    'gauge',\n    'gaze',\n    'general',\n    'genius',\n    'genre',\n    'gentle',\n    'genuine',\n    'gesture',\n    'ghost',\n    'giant',\n    'gift',\n    'giggle',\n    'ginger',\n    'giraffe',\n    'girl',\n    'give',\n    'glad',\n    'glance',\n    'glare',\n    'glass',\n    'glide',\n    'glimpse',\n    'globe',\n    'gloom',\n    'glory',\n    'glove',\n    'glow',\n    'glue',\n    'goat',\n    'goddess',\n    'gold',\n    'good',\n    'goose',\n    'gorilla',\n    'gospel',\n    'gossip',\n    'govern',\n    'gown',\n    'grab',\n    'grace',\n    'grain',\n    'grant',\n    'grape',\n    'grass',\n    'gravity',\n    'great',\n    'green',\n    'grid',\n    'grief',\n    'grit',\n    'grocery',\n    'group',\n    'grow',\n    'grunt',\n    'guard',\n    'guess',\n    'guide',\n    'guilt',\n    'guitar',\n    'gun',\n    'gym',\n    'habit',\n    'hair',\n    'half',\n    'hammer',\n    'hamster',\n    'hand',\n    'happy',\n    'harbor',\n    'hard',\n    'harsh',\n    'harvest',\n    'hat',\n    'have',\n    'hawk',\n    'hazard',\n    'head',\n    'health',\n    'heart',\n    'heavy',\n    'hedgehog',\n    'height',\n    'hello',\n    'helmet',\n    'help',\n    'hen',\n    'hero',\n    'hidden',\n    'high',\n    'hill',\n    'hint',\n    'hip',\n    'hire',\n    'history',\n    'hobby',\n    'hockey',\n    'hold',\n    'hole',\n    'holiday',\n    'hollow',\n    'home',\n    'honey',\n    'hood',\n    'hope',\n    'horn',\n    'horror',\n    'horse',\n    'hospital',\n    'host',\n    'hotel',\n    'hour',\n    'hover',\n    'hub',\n    'huge',\n    'human',\n    'humble',\n    'humor',\n    'hundred',\n    'hungry',\n    'hunt',\n    'hurdle',\n    'hurry',\n    'hurt',\n    'husband',\n    'hybrid',\n    'ice',\n    'icon',\n    'idea',\n    'identify',\n    'idle',\n    'ignore',\n    'ill',\n    'illegal',\n    'illness',\n    'image',\n    'imitate',\n    'immense',\n    'immune',\n    'impact',\n    'impose',\n    'improve',\n    'impulse',\n    'inch',\n    'include',\n    'income',\n    'increase',\n    'index',\n    'indicate',\n    'indoor',\n    'industry',\n    'infant',\n    'inflict',\n    'inform',\n    'inhale',\n    'inherit',\n    'initial',\n    'inject',\n    'injury',\n    'inmate',\n    'inner',\n    'innocent',\n    'input',\n    'inquiry',\n    'insane',\n    'insect',\n    'inside',\n    'inspire',\n    'install',\n    'intact',\n    'interest',\n    'into',\n    'invest',\n    'invite',\n    'involve',\n    'iron',\n    'island',\n    'isolate',\n    'issue',\n    'item',\n    'ivory',\n    'jacket',\n    'jaguar',\n    'jar',\n    'jazz',\n    'jealous',\n    'jeans',\n    'jelly',\n    'jewel',\n    'job',\n    'join',\n    'joke',\n    'journey',\n    'joy',\n    'judge',\n    'juice',\n    'jump',\n    'jungle',\n    'junior',\n    'junk',\n    'just',\n    'kangaroo',\n    'keen',\n    'keep',\n    'ketchup',\n    'key',\n    'kick',\n    'kid',\n    'kidney',\n    'kind',\n    'kingdom',\n    'kiss',\n    'kit',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kiwi',\n    'knee',\n    'knife',\n    'knock',\n    'know',\n    'lab',\n    'label',\n    'labor',\n    'ladder',\n    'lady',\n    'lake',\n    'lamp',\n    'language',\n    'laptop',\n    'large',\n    'later',\n    'latin',\n    'laugh',\n    'laundry',\n    'lava',\n    'law',\n    'lawn',\n    'lawsuit',\n    'layer',\n    'lazy',\n    'leader',\n    'leaf',\n    'learn',\n    'leave',\n    'lecture',\n    'left',\n    'leg',\n    'legal',\n    'legend',\n    'leisure',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'leopard',\n    'lesson',\n    'letter',\n    'level',\n    'liar',\n    'liberty',\n    'library',\n    'license',\n    'life',\n    'lift',\n    'light',\n    'like',\n    'limb',\n    'limit',\n    'link',\n    'lion',\n    'liquid',\n    'list',\n    'little',\n    'live',\n    'lizard',\n    'load',\n    'loan',\n    'lobster',\n    'local',\n    'lock',\n    'logic',\n    'lonely',\n    'long',\n    'loop',\n    'lottery',\n    'loud',\n    'lounge',\n    'love',\n    'loyal',\n    'lucky',\n    'luggage',\n    'lumber',\n    'lunar',\n    'lunch',\n    'luxury',\n    'lyrics',\n    'machine',\n    'mad',\n    'magic',\n    'magnet',\n    'maid',\n    'mail',\n    'main',\n    'major',\n    'make',\n    'mammal',\n    'man',\n    'manage',\n    'mandate',\n    'mango',\n    'mansion',\n    'manual',\n    'maple',\n    'marble',\n    'march',\n    'margin',\n    'marine',\n    'market',\n    'marriage',\n    'mask',\n    'mass',\n    'master',\n    'match',\n    'material',\n    'math',\n    'matrix',\n    'matter',\n    'maximum',\n    'maze',\n    'meadow',\n    'mean',\n    'measure',\n    'meat',\n    'mechanic',\n    'medal',\n    'media',\n    'melody',\n    'melt',\n    'member',\n    'memory',\n    'mention',\n    'menu',\n    'mercy',\n    'merge',\n    'merit',\n    'merry',\n    'mesh',\n    'message',\n    'metal',\n    'method',\n    'middle',\n    'midnight',\n    'milk',\n    'million',\n    'mimic',\n    'mind',\n    'minimum',\n    'minor',\n    'minute',\n    'miracle',\n    'mirror',\n    'misery',\n    'miss',\n    'mistake',\n    'mix',\n    'mixed',\n    'mixture',\n    'mobile',\n    'model',\n    'modify',\n    'mom',\n    'moment',\n    'monitor',\n    'monkey',\n    'monster',\n    'month',\n    'moon',\n    'moral',\n    'more',\n    'morning',\n    'mosquito',\n    'mother',\n    'motion',\n    'motor',\n    'mountain',\n    'mouse',\n    'move',\n    'movie',\n    'much',\n    'muffin',\n    'mule',\n    'multiply',\n    'muscle',\n    'museum',\n    'mushroom',\n    'music',\n    'must',\n    'mutual',\n    'myself',\n    'mystery',\n    'myth',\n    'naive',\n    'name',\n    'napkin',\n    'narrow',\n    'nasty',\n    'nation',\n    'nature',\n    'near',\n    'neck',\n    'need',\n    'negative',\n    'neglect',\n    'neither',\n    'nephew',\n    'nerve',\n    'nest',\n    'net',\n    'network',\n    'neutral',\n    'never',\n    'news',\n    'next',\n    'nice',\n    'night',\n    'noble',\n    'noise',\n    'nominee',\n    'noodle',\n    'normal',\n    'north',\n    'nose',\n    'notable',\n    'note',\n    'nothing',\n    'notice',\n    'novel',\n    'now',\n    'nuclear',\n    'number',\n    'nurse',\n    'nut',\n    'oak',\n    'obey',\n    'object',\n    'oblige',\n    'obscure',\n    'observe',\n    'obtain',\n    'obvious',\n    'occur',\n    'ocean',\n    'october',\n    'odor',\n    'off',\n    'offer',\n    'office',\n    'often',\n    'oil',\n    'okay',\n    'old',\n    'olive',\n    'olympic',\n    'omit',\n    'once',\n    'one',\n    'onion',\n    'online',\n    'only',\n    'open',\n    'opera',\n    'opinion',\n    'oppose',\n    'option',\n    'orange',\n    'orbit',\n    'orchard',\n    'order',\n    'ordinary',\n    'organ',\n    'orient',\n    'original',\n    'orphan',\n    'ostrich',\n    'other',\n    'outdoor',\n    'outer',\n    'output',\n    'outside',\n    'oval',\n    'oven',\n    'over',\n    'own',\n    'owner',\n    'oxygen',\n    'oyster',\n    'ozone',\n    'pact',\n    'paddle',\n    'page',\n    'pair',\n    'palace',\n    'palm',\n    'panda',\n    'panel',\n    'panic',\n    'panther',\n    'paper',\n    'parade',\n    'parent',\n    'park',\n    'parrot',\n    'party',\n    'pass',\n    'patch',\n    'path',\n    'patient',\n    'patrol',\n    'pattern',\n    'pause',\n    'pave',\n    'payment',\n    'peace',\n    'peanut',\n    'pear',\n    'peasant',\n    'pelican',\n    'pen',\n    'penalty',\n    'pencil',\n    'people',\n    'pepper',\n    'perfect',\n    'permit',\n    'person',\n    'pet',\n    'phone',\n    'photo',\n    'phrase',\n    'physical',\n    'piano',\n    'picnic',\n    'picture',\n    'piece',\n    'pig',\n    'pigeon',\n    'pill',\n    'pilot',\n    'pink',\n    'pioneer',\n    'pipe',\n    'pistol',\n    'pitch',\n    'pizza',\n    'place',\n    'planet',\n    'plastic',\n    'plate',\n    'play',\n    'please',\n    'pledge',\n    'pluck',\n    'plug',\n    'plunge',\n    'poem',\n    'poet',\n    'point',\n    'polar',\n    'pole',\n    'police',\n    'pond',\n    'pony',\n    'pool',\n    'popular',\n    'portion',\n    'position',\n    'possible',\n    'post',\n    'potato',\n    'pottery',\n    'poverty',\n    'powder',\n    'power',\n    'practice',\n    'praise',\n    'predict',\n    'prefer',\n    'prepare',\n    'present',\n    'pretty',\n    'prevent',\n    'price',\n    'pride',\n    'primary',\n    'print',\n    'priority',\n    'prison',\n    'private',\n    'prize',\n    'problem',\n    'process',\n    'produce',\n    'profit',\n    'program',\n    'project',\n    'promote',\n    'proof',\n    'property',\n    'prosper',\n    'protect',\n    'proud',\n    'provide',\n    'public',\n    'pudding',\n    'pull',\n    'pulp',\n    'pulse',\n    'pumpkin',\n    'punch',\n    'pupil',\n    'puppy',\n    'purchase',\n    'purity',\n    'purpose',\n    'purse',\n    'push',\n    'put',\n    'puzzle',\n    'pyramid',\n    'quality',\n    'quantum',\n    'quarter',\n    'question',\n    'quick',\n    'quit',\n    'quiz',\n    'quote',\n    'rabbit',\n    'raccoon',\n    'race',\n    'rack',\n    'radar',\n    'radio',\n    'rail',\n    'rain',\n    'raise',\n    'rally',\n    'ramp',\n    'ranch',\n    'random',\n    'range',\n    'rapid',\n    'rare',\n    'rate',\n    'rather',\n    'raven',\n    'raw',\n    'razor',\n    'ready',\n    'real',\n    'reason',\n    'rebel',\n    'rebuild',\n    'recall',\n    'receive',\n    'recipe',\n    'record',\n    'recycle',\n    'reduce',\n    'reflect',\n    'reform',\n    'refuse',\n    'region',\n    'regret',\n    'regular',\n    'reject',\n    'relax',\n    'release',\n    'relief',\n    'rely',\n    'remain',\n    'remember',\n    'remind',\n    'remove',\n    'render',\n    'renew',\n    'rent',\n    'reopen',\n    'repair',\n    'repeat',\n    'replace',\n    'report',\n    'require',\n    'rescue',\n    'resemble',\n    'resist',\n    'resource',\n    'response',\n    'result',\n    'retire',\n    'retreat',\n    'return',\n    'reunion',\n    'reveal',\n    'review',\n    'reward',\n    'rhythm',\n    'rib',\n    'ribbon',\n    'rice',\n    'rich',\n    'ride',\n    'ridge',\n    'rifle',\n    'right',\n    'rigid',\n    'ring',\n    'riot',\n    'ripple',\n    'risk',\n    'ritual',\n    'rival',\n    'river',\n    'road',\n    'roast',\n    'robot',\n    'robust',\n    'rocket',\n    'romance',\n    'roof',\n    'rookie',\n    'room',\n    'rose',\n    'rotate',\n    'rough',\n    'round',\n    'route',\n    'royal',\n    'rubber',\n    'rude',\n    'rug',\n    'rule',\n    'run',\n    'runway',\n    'rural',\n    'sad',\n    'saddle',\n    'sadness',\n    'safe',\n    'sail',\n    'salad',\n    'salmon',\n    'salon',\n    'salt',\n    'salute',\n    'same',\n    'sample',\n    'sand',\n    'satisfy',\n    'satoshi',\n    'sauce',\n    'sausage',\n    'save',\n    'say',\n    'scale',\n    'scan',\n    'scare',\n    'scatter',\n    'scene',\n    'scheme',\n    'school',\n    'science',\n    'scissors',\n    'scorpion',\n    'scout',\n    'scrap',\n    'screen',\n    'script',\n    'scrub',\n    'sea',\n    'search',\n    'season',\n    'seat',\n    'second',\n    'secret',\n    'section',\n    'security',\n    'seed',\n    'seek',\n    'segment',\n    'select',\n    'sell',\n    'seminar',\n    'senior',\n    'sense',\n    'sentence',\n    'series',\n    'service',\n    'session',\n    'settle',\n    'setup',\n    'seven',\n    'shadow',\n    'shaft',\n    'shallow',\n    'share',\n    'shed',\n    'shell',\n    'sheriff',\n    'shield',\n    'shift',\n    'shine',\n    'ship',\n    'shiver',\n    'shock',\n    'shoe',\n    'shoot',\n    'shop',\n    'short',\n    'shoulder',\n    'shove',\n    'shrimp',\n    'shrug',\n    'shuffle',\n    'shy',\n    'sibling',\n    'sick',\n    'side',\n    'siege',\n    'sight',\n    'sign',\n    'silent',\n    'silk',\n    'silly',\n    'silver',\n    'similar',\n    'simple',\n    'since',\n    'sing',\n    'siren',\n    'sister',\n    'situate',\n    'six',\n    'size',\n    'skate',\n    'sketch',\n    'ski',\n    'skill',\n    'skin',\n    'skirt',\n    'skull',\n    'slab',\n    'slam',\n    'sleep',\n    'slender',\n    'slice',\n    'slide',\n    'slight',\n    'slim',\n    'slogan',\n    'slot',\n    'slow',\n    'slush',\n    'small',\n    'smart',\n    'smile',\n    'smoke',\n    'smooth',\n    'snack',\n    'snake',\n    'snap',\n    'sniff',\n    'snow',\n    'soap',\n    'soccer',\n    'social',\n    'sock',\n    'soda',\n    'soft',\n    'solar',\n    'soldier',\n    'solid',\n    'solution',\n    'solve',\n    'someone',\n    'song',\n    'soon',\n    'sorry',\n    'sort',\n    'soul',\n    'sound',\n    'soup',\n    'source',\n    'south',\n    'space',\n    'spare',\n    'spatial',\n    'spawn',\n    'speak',\n    'special',\n    'speed',\n    'spell',\n    'spend',\n    'sphere',\n    'spice',\n    'spider',\n    'spike',\n    'spin',\n    'spirit',\n    'split',\n    'spoil',\n    'sponsor',\n    'spoon',\n    'sport',\n    'spot',\n    'spray',\n    'spread',\n    'spring',\n    'spy',\n    'square',\n    'squeeze',\n    'squirrel',\n    'stable',\n    'stadium',\n    'staff',\n    'stage',\n    'stairs',\n    'stamp',\n    'stand',\n    'start',\n    'state',\n    'stay',\n    'steak',\n    'steel',\n    'stem',\n    'step',\n    'stereo',\n    'stick',\n    'still',\n    'sting',\n    'stock',\n    'stomach',\n    'stone',\n    'stool',\n    'story',\n    'stove',\n    'strategy',\n    'street',\n    'strike',\n    'strong',\n    'struggle',\n    'student',\n    'stuff',\n    'stumble',\n    'style',\n    'subject',\n    'submit',\n    'subway',\n    'success',\n    'such',\n    'sudden',\n    'suffer',\n    'sugar',\n    'suggest',\n    'suit',\n    'summer',\n    'sun',\n    'sunny',\n    'sunset',\n    'super',\n    'supply',\n    'supreme',\n    'sure',\n    'surface',\n    'surge',\n    'surprise',\n    'surround',\n    'survey',\n    'suspect',\n    'sustain',\n    'swallow',\n    'swamp',\n    'swap',\n    'swarm',\n    'swear',\n    'sweet',\n    'swift',\n    'swim',\n    'swing',\n    'switch',\n    'sword',\n    'symbol',\n    'symptom',\n    'syrup',\n    'system',\n    'table',\n    'tackle',\n    'tag',\n    'tail',\n    'talent',\n    'talk',\n    'tank',\n    'tape',\n    'target',\n    'task',\n    'taste',\n    'tattoo',\n    'taxi',\n    'teach',\n    'team',\n    'tell',\n    'ten',\n    'tenant',\n    'tennis',\n    'tent',\n    'term',\n    'test',\n    'text',\n    'thank',\n    'that',\n    'theme',\n    'then',\n    'theory',\n    'there',\n    'they',\n    'thing',\n    'this',\n    'thought',\n    'three',\n    'thrive',\n    'throw',\n    'thumb',\n    'thunder',\n    'ticket',\n    'tide',\n    'tiger',\n    'tilt',\n    'timber',\n    'time',\n    'tiny',\n    'tip',\n    'tired',\n    'tissue',\n    'title',\n    'toast',\n    'tobacco',\n    'today',\n    'toddler',\n    'toe',\n    'together',\n    'toilet',\n    'token',\n    'tomato',\n    'tomorrow',\n    'tone',\n    'tongue',\n    'tonight',\n    'tool',\n    'tooth',\n    'top',\n    'topic',\n    'topple',\n    'torch',\n    'tornado',\n    'tortoise',\n    'toss',\n    'total',\n    'tourist',\n    'toward',\n    'tower',\n    'town',\n    'toy',\n    'track',\n    'trade',\n    'traffic',\n    'tragic',\n    'train',\n    'transfer',\n    'trap',\n    'trash',\n    'travel',\n    'tray',\n    'treat',\n    'tree',\n    'trend',\n    'trial',\n    'tribe',\n    'trick',\n    'trigger',\n    'trim',\n    'trip',\n    'trophy',\n    'trouble',\n    'truck',\n    'true',\n    'truly',\n    'trumpet',\n    'trust',\n    'truth',\n    'try',\n    'tube',\n    'tuition',\n    'tumble',\n    'tuna',\n    'tunnel',\n    'turkey',\n    'turn',\n    'turtle',\n    'twelve',\n    'twenty',\n    'twice',\n    'twin',\n    'twist',\n    'two',\n    'type',\n    'typical',\n    'ugly',\n    'umbrella',\n    'unable',\n    'unaware',\n    'uncle',\n    'uncover',\n    'under',\n    'undo',\n    'unfair',\n    'unfold',\n    'unhappy',\n    'uniform',\n    'unique',\n    'unit',\n    'universe',\n    'unknown',\n    'unlock',\n    'until',\n    'unusual',\n    'unveil',\n    'update',\n    'upgrade',\n    'uphold',\n    'upon',\n    'upper',\n    'upset',\n    'urban',\n    'urge',\n    'usage',\n    'use',\n    'used',\n    'useful',\n    'useless',\n    'usual',\n    'utility',\n    'vacant',\n    'vacuum',\n    'vague',\n    'valid',\n    'valley',\n    'valve',\n    'van',\n    'vanish',\n    'vapor',\n    'various',\n    'vast',\n    'vault',\n    'vehicle',\n    'velvet',\n    'vendor',\n    'venture',\n    'venue',\n    'verb',\n    'verify',\n    'version',\n    'very',\n    'vessel',\n    'veteran',\n    'viable',\n    'vibrant',\n    'vicious',\n    'victory',\n    'video',\n    'view',\n    'village',\n    'vintage',\n    'violin',\n    'virtual',\n    'virus',\n    'visa',\n    'visit',\n    'visual',\n    'vital',\n    'vivid',\n    'vocal',\n    'voice',\n    'void',\n    'volcano',\n    'volume',\n    'vote',\n    'voyage',\n    'wage',\n    'wagon',\n    'wait',\n    'walk',\n    'wall',\n    'walnut',\n    'want',\n    'warfare',\n    'warm',\n    'warrior',\n    'wash',\n    'wasp',\n    'waste',\n    'water',\n    'wave',\n    'way',\n    'wealth',\n    'weapon',\n    'wear',\n    'weasel',\n    'weather',\n    'web',\n    'wedding',\n    'weekend',\n    'weird',\n    'welcome',\n    'west',\n    'wet',\n    'whale',\n    'what',\n    'wheat',\n    'wheel',\n    'when',\n    'where',\n    'whip',\n    'whisper',\n    'wide',\n    'width',\n    'wife',\n    'wild',\n    'will',\n    'win',\n    'window',\n    'wine',\n    'wing',\n    'wink',\n    'winner',\n    'winter',\n    'wire',\n    'wisdom',\n    'wise',\n    'wish',\n    'witness',\n    'wolf',\n    'woman',\n    'wonder',\n    'wood',\n    'wool',\n    'word',\n    'work',\n    'world',\n    'worry',\n    'worth',\n    'wrap',\n    'wreck',\n    'wrestle',\n    'wrist',\n    'write',\n    'wrong',\n    'yard',\n    'year',\n    'yellow',\n    'you',\n    'young',\n    'youth',\n    'zebra',\n    'zero',\n    'zone',\n    'zoo'\n];\n", "/**\n * Original work Copyright (c) 2024 Signum Network\n */\n\nimport {words} from './dictionaries/en';\nimport {getRandomWords} from './random';\n\n/**\n * The Strength of the generated mnemonic\n * Ranging from 128 bit (12 Words) to 256 bit (24 Words)\n *\n * @see {@link generateMnemonic}\n *\n * @category signing\n */\nexport enum Strength {\n    Bits_128 = 12,\n    Bits_160 = 15,\n    Bits_192 = 18,\n    Bits_224 = 21,\n    Bits_256 = 24,\n}\n\nexport type GenerateMnemonicArgs = {\n    /**\n     * The strength of the resulting passphrase given in bits. Ranging from 128 bit (12 Words) to 256 bit (24 Words)\n     */\n    strength?: Strength,\n    /**\n     * An array of words (at least 1024 words) to be used for generation. Default is the official BIP39 English Word List\n     */\n    dictionary?: string[]\n}\n\n/**\n * Generates a passphrase aka mnemonic aka recovery phrase based on given dictionary, and strength\n * @category signing\n */\nexport function generateMnemonic(args : Partial<GenerateMnemonicArgs> = {strength: Strength.Bits_192, dictionary: words}) {\n    const {strength = Strength.Bits_192, dictionary = words} = args\n\n    if (dictionary.length < 1024) {\n        throw new Error('Dictionary too weak');\n    }\n    const randomWords = getRandomWords(strength.valueOf(), dictionary);\n    return randomWords.join(' ');\n}\n", "/**\n * Original work Copyright (c) 2024 Signum Network\n */\n\nimport {Crypto, Buffer} from './base';\n\nexport type InputEncoding = 'utf8' | 'hex' | 'base64';\n/**\n * Hash string into raw array buffer\n * @param input An arbitrary text\n * @param encoding The encoding of input type (default: 'utf8')\n * @return the hash for that string in ArrayBuffer\n *\n * @category sha256\n */\nexport function sha256Raw(input: string, encoding: InputEncoding ): ArrayBuffer {\n    return Crypto.adapter.sha256(Buffer.from(input, encoding));\n}\n\n\n/**\n * Hash string into byte array\n * @param input An arbitrary text\n * @param encoding The encoding of input type (default: 'utf8')\n * @return the hash for that string in Uint8Array\n *\n *\n * @category sha256\n */\nexport function sha256AsBytes(input: string, encoding: InputEncoding = 'utf8' ): Uint8Array {\n    return new Uint8Array(sha256Raw(input, encoding));\n}\n\n/**\n * Hash string into hex string\n * @param input An arbitrary text (utf-8)\n * @param encoding The encoding of input type (default: 'utf8')\n * @return the hash for that string in hex format\n *\n * @category sha256\n */\nexport function sha256AsHex(input: string, encoding: InputEncoding = 'utf8'): string {\n    return Buffer.from(sha256Raw(input, encoding)).toString('hex');\n}\n\n/**\n * Hash string into base64 string\n * @param input An arbitrary text (utf-8)\n * @param encoding The encoding of input type (default: 'utf8')\n * @return the hash for that string in base64 format\n *\n * @category sha256\n */\nexport function sha256AsBase64(input: string, encoding: InputEncoding = 'utf8'): string {\n    return Buffer.from(sha256Raw(input, encoding)).toString('base64');\n}\n\n/**\n * Hashes binary data into byte array\n * @param data A hex data string or byte array\n * @return the hash for that as byte array\n *\n * @category sha256\n */\nexport function sha256Binary(data: string | Uint8Array): Uint8Array {\n    const b: Uint8Array = typeof data === 'string' ? Buffer.from(data, 'hex') : data;\n    return Crypto.adapter.sha256(b);\n}\n", "/**\n * Original work Copyright (c) 2024 Signum Network\n */\n\nimport {sha256AsBytes, sha256Binary} from './sha256';\nimport {SignKeys} from './typings/signKeys';\nimport {ECKCDSA} from './base';\n\nfunction hexToDec(s: string): string {\n    const digits = [0];\n    for (let i = 0; i < s.length; i += 1) {\n        let carry = parseInt(s.charAt(i), 16);\n        for (let j = 0; j < digits.length; j += 1) {\n            digits[j] = digits[j] * 16 + carry;\n            carry = digits[j] / 10 | 0;\n            digits[j] %= 10;\n        }\n        while (carry > 0) {\n            digits.push(carry % 10);\n            carry = carry / 10 | 0;\n        }\n    }\n    return digits.reverse().join('');\n}\n\nfunction toBytes(hex: string): Uint8Array {\n    return new Uint8Array(Buffer.from(hex, 'hex'));\n}\n\nfunction mergeArrays(a: Uint8Array, b: Uint8Array): Uint8Array {\n    const merged = new Uint8Array(a.length + b.length);\n    merged.set(a);\n    merged.set(b, a.length);\n    return merged;\n}\n\n/**\n * Generate the Signum Sign Keys from an initial Passphrase.\n * @param passPhrase The passphrase\n * @return EC-KCDSA sign key pair + agreement key\n *\n * @category signing\n */\nexport function generateSignKeys(passPhrase: string): SignKeys {\n    const hashedPassPhrase = sha256AsBytes(passPhrase);\n    const keys = ECKCDSA.keygen(hashedPassPhrase);\n    return {\n        publicKey: Buffer.from(keys.p).toString('hex'),\n        signPrivateKey: Buffer.from(keys.s).toString('hex'),\n        agreementPrivateKey: Buffer.from(keys.k).toString('hex')\n    };\n}\n\n/**\n * Computes the Account ID from Public Key\n * @param publicKey The public Key generated with {@link generateSignKeys}\n * @return A numeric string - The Account ID\n */\nexport function getAccountIdFromPublicKey(publicKey: string): string {\n    const hashedArray = sha256Binary(publicKey);\n    const slicedArray = hashedArray.slice(0, 8).reverse();\n    return hexToDec(Buffer.from(slicedArray).toString('hex'));\n}\n\n/**\n * Generate a signature for a transaction\n *\n * Method:\n * ```\n *  s = sign(sha256(sha256(transactionHex)_keygen(sha256(sha256(transactionHex)_privateKey)).publicKey),\n *          sha256(sha256(transactionHex)_privateKey),\n *          privateKey)\n *  p = sha256(sha256(transactionHex)_keygen(sha256(transactionHex_privateKey)).publicKey)\n * ```\n * @see {@link verifySignature}\n * @param messageHex The data in hexadecimal representation\n * @param privateKeyHex The private key for signing in hexadecimal representation\n * @return The signature in hexadecimal format\n *\n * @category signing\n */\nexport function generateSignature(messageHex: string, privateKeyHex: string): string {\n    const m = sha256Binary(messageHex);\n    const s = toBytes(privateKeyHex);\n    const m_s = mergeArrays(m, s);\n    const x = sha256Binary(m_s);\n    const y = Buffer.from(ECKCDSA.keygen(x).p);\n    const m_y = mergeArrays(m, y);\n    const h = sha256Binary(m_y);\n    const v = Buffer.from(ECKCDSA.sign(h, x, s));\n    return Buffer.from(mergeArrays(v, h)).toString('hex');\n}\n\n\n/**\n * Verify a signature for given message\n *\n *  * Method:\n * ```\n * * h1 = sha256(sha256(transactionHex)_keygen(sha256(transactionHex_privateKey)).publicKey)\n * ==\n * sha256(sha256(transactionHex)_verify(v, h1, publickey)) = h2\n * ```\n * @see {@link generateSignature}\n * @param signature The signature to be verified\n * @param messageHex The message data in hexadecimal representation\n * @param publicKeyHex The public key\n * @return _true_, if signature is valid, otherwise _false_\n *\n * @category signing\n */\nexport function verifySignature(signature: string, messageHex: string, publicKeyHex: string): boolean {\n    const signatureBytes = toBytes(signature);\n    const publicKeyBytes = toBytes(publicKeyHex);\n    const v = signatureBytes.slice(0, 32);\n    const h1 = signatureBytes.slice(32);\n    const y = Buffer.from(ECKCDSA.verify(v, h1, publicKeyBytes));\n\n    const m = sha256Binary(messageHex);\n    const m_y = mergeArrays(m, y);\n    const h2 = sha256Binary(m_y);\n\n    // fast comparison\n    if (h1.length !== h2.length) {\n        return false;\n    }\n    for (let i = 0; i < h1.length; i++) {\n        if (h1[i] !== h2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n/**\n * Generates a signed message digest, which can be sent to Signum Node API then\n *\n * @see {@link generateSignature}\n * @param unsignedTransactionHex The unsigned message\n * @param signature The signature\n * @return The signed message digest\n *\n * @category signing\n */\nexport const generateSignedTransactionBytes = (unsignedTransactionHex: string, signature: string): string =>\n    unsignedTransactionHex.substr(0, 192) + signature + unsignedTransactionHex.substr(320);\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=cryptoAdapter.js.map", "/**\n * This package contains all cryptographic functions\n * needed for Burstcoin/Signum.\n *\n * @module crypto\n * */\nexport * from './decrypt';\nexport * from './encrypt';\nexport * from './random';\nexport * from './mnemonic';\nexport * from './sha256';\nexport * from './sign';\nexport * from './typings/cryptoError';\nexport * from './typings/signKeys';\nexport * from './typings/encryptedMessage';\nexport * from './typings/encryptedData';\nexport * from './typings/cryptoAdapter';\nexport {Buffer, Crypto} from './base'; // export as very useful!\n", "/**\n * Original work Copyright (c) 2021 Burst Apps Team\n */\nimport {AsyncRetryArgs} from './typings';\n\n/**\n * Utility function to retry async functions.\n *\n * @param args The argument object*\n * \n */\nexport async function asyncRetry<T>(args: AsyncRetryArgs<T>): Promise<T> {\n    const {asyncFn, onFailureAsync, retryCount = 1, maxRetrials = 20} = args;\n    try {\n        return await asyncFn();\n    // @ts-ignore\n    } catch (e: any) {\n        if (retryCount > maxRetrials) {\n            throw e; // cannot recover\n        }\n        const shouldRetry = await onFailureAsync(e, retryCount);\n        if (shouldRetry) {\n            await asyncRetry({asyncFn, onFailureAsync, retryCount: retryCount + 1});\n        } else {\n            throw e; // rethrow most recent error\n        }\n    }\n}\n\n", "/**\n * Original work Copyright (c) 2020 Burst Apps Team\n * Modfied work Copyright (c) 2021 Signum Network\n */\n\n\nconst GenesisBlockTime = Date.UTC(2014, 7, 11, 2, 0, 0, 0) / 1000;\n\n/**\n * A Value Object to facilitate Chain Timestamp conversions.\n *\n * @category value-objects\n */\nexport class ChainTime {\n\n    private _chainTimestamp: number;\n\n    private constructor(blockTimestamp: number) {\n        this._chainTimestamp = blockTimestamp;\n    }\n\n    /**\n     * Creates a Block Time object from Chain Time Stamp\n     * @param timestamp The timestamp from Chain\n     */\n    public static fromChainTimestamp(timestamp: number): ChainTime {\n        return new ChainTime(timestamp);\n    }\n\n    /**\n     * Creates a Block Time object from Date\n     * @param date Any Date object\n     */\n    public static fromDate(date: Date): ChainTime {\n        const blockTime = new ChainTime(0);\n        blockTime.setDate(date);\n        return blockTime;\n    }\n\n    /**\n     * @return Gets Chain Timestamp representation\n     */\n    getChainTimestamp(): number {\n        return this._chainTimestamp;\n    }\n\n    /**\n     * Sets ChainTime using Chain Timestamp\n     */\n    setChainTimestamp(blockTimestamp: number): void {\n        this._chainTimestamp = blockTimestamp;\n    }\n\n    /**\n     * @return Time in seconds since 01.01.1970\n     */\n    getEpoch(): number {\n        return (GenesisBlockTime + this._chainTimestamp) * 1000;\n    }\n\n    /**\n     * @return real Date representation\n     */\n    getDate(): Date {\n        return new Date(this.getEpoch());\n    }\n\n    /**\n     * Sets blockTime using native Date\n     * @param date Any Date object\n     */\n    setDate(date: Date): void {\n        this._chainTimestamp = Math.round(date.getTime() / 1000) - GenesisBlockTime;\n    }\n\n    /**\n     * Checks for equality\n     * @param chainTime The other value to be compared\n     * @return true if equal, otherwise false\n     */\n    public equals(chainTime: ChainTime): boolean {\n        return this._chainTimestamp === chainTime._chainTimestamp;\n    }\n\n    /**\n     * Checks if a chainTime is before a given one\n     * @param chainTime The other value to be compared\n     * @return true if _before_ a given chainTime, otherwise false\n     */\n    public before(chainTime: ChainTime): boolean {\n        return this._chainTimestamp < chainTime._chainTimestamp;\n    }\n\n    /**\n     * Checks if a chainTime is after a given one\n     * @param chainTime The other value to be compared\n     * @return true if _after_ a given chainTime, otherwise false\n     */\n    public after(chainTime: ChainTime): boolean {\n        return this._chainTimestamp > chainTime._chainTimestamp;\n    }\n\n}\n", ";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return \u00B10 if x is \u00B10 or y is \u00B1Infinity, or return \u00B1Infinity as y is \u00B10.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on \u00B1Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and \u00B1Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, \u00B1Infinity, \u00B10 or \u00B11, or n is \u00B1Infinity, NaN or \u00B10.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to \u00B1Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to \u00B1Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to \u00B10: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = \u00B1Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return \u00B10, else return \u00B1Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, \u00B1Infinity or \u00B10?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return \u00B1Infinity if either is \u00B1Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return \u00B10 if either is \u00B10.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return \u00B1Infinity if either \u00B1Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport BigNumber from 'bignumber.js';\n\nBigNumber.config({\n    EXPONENTIAL_AT: [-9, 20],\n    DECIMAL_PLACES: 8\n});\n\n/**\n * Structure to determine the representation format of [ChainValue] string\n *\n * @category value-objects\n */\nexport interface ChainValueFormat {\n    /**\n     * Decimal separator, Default: '.'\n     */\n    decimalSeparator: string;\n    /**\n     * grouping separator of the integer part, Default: ','\n     */\n    groupSeparator: string;\n    /**\n     * Primary grouping size of the integer part, Default: 3\n     */\n    groupSize: number;\n    /**\n     * Secondary grouping size of the integer part, Default 0\n     */\n    secondaryGroupSize: number;\n    /**\n     * Grouping separator of the fraction part, Default: ''\n     */\n    fractionGroupSeparator: string;\n    /**\n     * Grouping size of the fraction part, Default: 0\n     */\n    fractionGroupSize: number;\n    /**\n     * String to append, Default: ''\n     */\n    suffix: string;\n}\n\n\n/**\n * Amount formatting preset for dot decimal formatting '1,000,000.123456'\n * \n */\nconst FormatDotDecimal: ChainValueFormat = {\n    decimalSeparator: '.',\n    groupSeparator: ',',\n    groupSize: 3,\n    secondaryGroupSize: 0,\n    fractionGroupSeparator: '',\n    fractionGroupSize: 0,\n    suffix: ''\n};\n\n/**\n * Amount formatting preset for comma decimal formatting '1.000.000,123456'\n * \n */\nconst FormatCommaDecimal: ChainValueFormat = {\n    decimalSeparator: ',',\n    groupSeparator: '.',\n    groupSize: 3,\n    secondaryGroupSize: 0,\n    fractionGroupSeparator: '',\n    fractionGroupSize: 0,\n    suffix: ''\n};\n\n/**\n * Amount formatting presets, see {@link ChainValue.toFormat}\n *\n * @category value-objects\n */\nexport const ChainValueFormats = {\n    /**\n     * 1,000,000.123456\n     */\n    DotDecimal: FormatDotDecimal,\n    /**\n     * 1.000.000,123456\n     */\n    CommaDecimal: FormatCommaDecimal\n};\n\nfunction assureValidValue(v: string): void {\n    if (!(v && /^-?\\d*(\\.\\d+)?$/.test(v))) {\n        throw new Error(`Invalid value: ${v}`);\n    }\n}\n\n/**\n * A Value Object to facilitate calculations for token and coin values (QNT/NQT).\n *\n *\n * For efficiency reasons, the monetary values/quantities are stored as integers with a prefined set of decimals,\n * e.g. Signa has 8 decimals and stores the values as Planck that is 1 Signa = 100_000_000 Planck (NQT)\n * and tokens have configurable decimals (0 to 8), so that a custom FooCoin can hav 2 decimals only where 1 FOO = 100 FOOQNT\n *\n * In this context integer quantities are denominates as __atomic_ values and\n * fractional values considering the decimals are denominated as _compound_ values.\n *\n *\n * Note: This class uses a big number representation (ES5 compatible) under the hood, so\n * number limits and numeric calculations are much more precise than JS number type\n *\n * @category value-objects\n */\nexport class ChainValue {\n\n    private _big: BigNumber;\n    private readonly _decimals: number;\n\n    /**\n     * Constructs a value object instance for calculations. The initial value is 0;\n     * @param decimals The number of decimals of the amount. Must be between 0 and 8\n     */\n    public constructor(decimals: number) {\n        if (decimals < 0 || decimals > 8) {\n            throw new Error('Decimals must be between 0 and 8');\n        }\n        this._big = new BigNumber(0);\n        this._decimals = decimals;\n    }\n\n    /**\n     * Constructs a value object instance for calculations. The initial value is 0;\n     * @param decimals The number of decimals of the amount. Must be between 0 and 8\n     */\n    public static create(decimals: number) {\n        return new ChainValue(decimals);\n    }\n\n    /**\n     * @return The set decimals amount\n     */\n    getDecimals(): number {\n        return this._decimals;\n    }\n\n    /**\n     * Leaky value getter\n     * @return the underlying value in its big number representation (immutable)\n     */\n    getRaw(): BigNumber {\n        return this._big;\n    }\n\n    /**\n     * @return Gets Atomic representation\n     */\n    getAtomic(): string {\n        return this._big.dp(0).toString();\n    }\n\n    /**\n     * Sets value as atomic value, i.e. overwrites current hold value\n     * @param a The atomic value. Float numbers are floored to first lower integer, i.e. `1.23` -> `1`\n     * @return the updated value object\n     */\n    setAtomic(a: number | string): ChainValue {\n        if (typeof (a) === 'number') {\n            this._big = new BigNumber(Math.floor(a));\n        } else {\n            assureValidValue(a);\n            this._big = new BigNumber(a);\n        }\n        return this;\n    }\n\n    /**\n     * Gets the _'compound'_ representation\n     * @return value in decimal related representation, i.e. 100 QNT with 3 decimals results in `'0.3'`\n     */\n    getCompound(): string {\n        return this._big.dividedBy(10 ** this._decimals).dp(this._decimals).toString();\n    }\n\n    /**\n     * Sets as _'compound'_ representation\n     * @param c compound value\n     * @return the updated value object\n     */\n    setCompound(c: string | number): ChainValue {\n        if (typeof (c) === 'string') {\n            assureValidValue(c);\n        }\n        this._big = new BigNumber(c || 0).multipliedBy(10 ** this._decimals);\n        return this;\n    }\n\n    /**\n     * Checks for equality\n     * @param value The other value to be compared\n     * @return true if equal, otherwise false\n     */\n    public equals(value: ChainValue): boolean {\n        return this._big.eq(value._big);\n    }\n\n    /**\n     * Checks for lesser or equality\n     * @param chainValue The other value to be compared\n     * @return true if less or equal, otherwise false\n     */\n    public lessOrEqual(chainValue: ChainValue): boolean {\n        return this._big.lte(chainValue._big);\n    }\n\n    /**\n     * Checks for lesser value\n     * @param chainValue The other value to be compared\n     * @return true if less, otherwise false\n     */\n    public less(chainValue: ChainValue): boolean {\n        return this._big.lt(chainValue._big);\n    }\n\n    /**\n     * Checks for greater or equality value\n     * @param chainValue The other value to be compared\n     * @return true if greater or equal, otherwise false\n     */\n    public greaterOrEqual(chainValue: ChainValue): boolean {\n        return this._big.gte(chainValue._big);\n    }\n\n    /**\n     * Checks for greater value\n     * @param chainValue The other value to be compared\n     * @return true if greater, otherwise false\n     */\n    public greater(chainValue: ChainValue): boolean {\n        return this._big.gt(chainValue._big);\n    }\n\n    /**\n     * Adds another value to this value\n     * @param chainValue The other value to be added\n     * @return the _mutated_ value object\n     */\n    public add(chainValue: ChainValue): ChainValue {\n        this._big = this._big.plus(chainValue._big);\n        return this;\n    }\n\n    /**\n     * Subtracts another value from this value\n     * @param chainValue The other value to be subtracted\n     * @return the _mutated_ value object\n     */\n    public subtract(chainValue: ChainValue): ChainValue {\n        this._big = this._big.minus(chainValue._big);\n        return this;\n    }\n\n    /**\n     * Multiplies this value object with a _numeric_ value (not ChainValue!)\n     * @param value A numeric value to be multiplied with\n     * @return the _mutated_ value object\n     */\n    public multiply(value: number | string): ChainValue {\n        let v = value;\n        if (typeof (value) === 'string') {\n            assureValidValue(value);\n            v = parseFloat(value);\n        }\n        this._big = this._big.multipliedBy(v);\n        return this;\n    }\n\n    /**\n     * Divides this value object with a _numeric_ value (not ChainValue!)\n     * @param value A numeric value to be divided by\n     * @return the _mutated_ value object\n     */\n    public divide(value: number | string): ChainValue {\n        let v = value;\n        if (typeof (value) === 'string') {\n            assureValidValue(value);\n            v = parseFloat(value);\n        }\n        if (v === 0) {\n            throw new Error('Division by zero');\n        }\n        this._big = this._big.div(v);\n        return this;\n    }\n\n    /**\n     * Gets a string representation according to {@link ChainValueFormat}\n     * @param prefix The prefix for value\n     * @param format The format object, Default: {@link ChainValueFormats.DotDecimal}\n     * @return The formatted string\n     */\n    public toFormat(prefix: string, format: ChainValueFormat = ChainValueFormats.DotDecimal): string {\n        return this._big.dividedBy(10 ** this._decimals).toFormat({...format, prefix});\n    }\n\n    /**\n     * Clones/Copies the current ChainValue to a new object\n     * @return new ChainValue instance\n     */\n    public clone(): ChainValue {\n        const newValue = new ChainValue(this._decimals);\n        newValue._big = this._big;\n        return newValue;\n    }\n}\n", "/**\n * Symbol/Character for currency unit\n * @deprecated Due to Multiverse feature it's not recommended to use this hard coded stuff.\n *\n * */\nexport const CurrencySymbol = '\uA7A8';\n\n/**\n * The smallest possible fee\n * \n */\nexport const FeeQuantPlanck = 1000000;\n\n/**\n * One SIGNA expressed in Planck\n * \n */\nexport const OneSignaPlanck = 100000000;\n", "/**\n * Original work Copyright (c) 2020 Burst Apps Team\n * Modified work Copyright (c) 2022 Signum Network\n */\nimport BigNumber from 'bignumber.js';\nimport {CurrencySymbol} from './constants';\nimport {ChainValue} from './chainValue';\n\n/**\n * Structure to determine the representation format of [Amount] string\n *\n * @category value-objects\n */\nexport interface AmountFormat {\n    /**\n     * string to prepend, Default: CurrencySymbol\n     */\n    prefix: string;\n    /**\n     * Decimal separator, Default: '.'\n     */\n    decimalSeparator: string;\n    /**\n     * grouping separator of the integer part, Default: ','\n     */\n    groupSeparator: string;\n    /**\n     * Primary grouping size of the integer part, Default: 3\n     */\n    groupSize: number;\n    /**\n     * Secondary grouping size of the integer part, Default 0\n     */\n    secondaryGroupSize: number;\n    /**\n     * Grouping separator of the fraction part, Default: ''\n     */\n    fractionGroupSeparator: string;\n    /**\n     * Grouping size of the fraction part, Default: 0\n     */\n    fractionGroupSize: number;\n    /**\n     * String to append, Default: ''\n     */\n    suffix: string;\n}\n\n\n/**\n * Amount formatting preset for dot decimal formatting '\uA7A8 1,000,000.123456'\n *\n * @category value-objects\n */\nexport const FormatDotDecimal: AmountFormat = {\n    prefix: CurrencySymbol + ' ',\n    decimalSeparator: '.',\n    groupSeparator: ',',\n    groupSize: 3,\n    secondaryGroupSize: 0,\n    fractionGroupSeparator: '',\n    fractionGroupSize: 0,\n    suffix: ''\n};\n\n/**\n * Amount formatting preset for comma decimal formatting '\uA7A8 1.000.000,123456'\n *\n * @category value-objects\n */\nexport const FormatCommaDecimal: AmountFormat = {\n    prefix: CurrencySymbol + ' ',\n    decimalSeparator: ',',\n    groupSeparator: '.',\n    groupSize: 3,\n    secondaryGroupSize: 0,\n    fractionGroupSeparator: '',\n    fractionGroupSize: 0,\n    suffix: ''\n};\n\n/**\n * Amount formatting presets, see {@link Amount.toString}\n *\n * @category value-objects\n */\nexport const AmountFormats = {\n    /**\n     * 1,000,000.123456\n     */\n    DotDecimal: FormatDotDecimal,\n    /**\n     * 1.000.000,123456\n     */\n    CommaDecimal: FormatCommaDecimal\n};\n\n/**\n * A Value Object to facilitate SIGNA and Planck conversions/calculations.\n *\n * This class is a convenient wrapper around {@link ChainValue} with `decimals = 8`\n *\n * Note: This class uses a big number representation (ES5 compatible) under the hood, so\n * number limits and numeric calculations are much more precise than JS number type\n *\n * @category value-objects\n */\nexport class Amount {\n    private readonly _value: ChainValue;\n\n    private constructor(planck: number | string) {\n        this._value = new ChainValue(8).setAtomic(planck);\n    }\n\n    /**\n     * @return The Signa Currency Symbol\n     * @deprecated Due to Multiverse feature it's not recommended to use this hard coded stuff.\n     * \n     */\n    public static CurrencySymbol(): string {\n        return CurrencySymbol;\n    }\n\n    /**\n     * Same as `Amount.fromPlanck(0)` or `Amount.fromSigna(0)`\n     */\n    public static Zero(): Amount {\n        return new Amount(0);\n    }\n\n    /**\n     * Creates a Burst Value object from Planck\n     * @param planck The value in Planck\n     */\n    public static fromPlanck(planck: number | string): Amount {\n        return new Amount(planck);\n    }\n\n    /**\n     * Creates a Value object from SIGNA\n     * @param signa The value in SIGNA\n     */\n    public static fromSigna(signa: number | string): Amount {\n        const b = new Amount('0');\n        b.setSigna(typeof signa === 'number' ? signa.toString(10) : signa);\n        return b;\n    }\n\n    /**\n     * Leaky value getter\n     * @return the underlying value in its big number representation (immutable)\n     */\n    getRaw(): BigNumber {\n        return this._value.getRaw();\n    }\n\n    /**\n     * @return Gets Planck representation\n     */\n    getPlanck(): string {\n        return this._value.getAtomic();\n    }\n\n    /**\n     * Sets value as Planck, i.e. overwrites current hold value\n     * @param p The planck value\n     * @return This value object\n     */\n    setPlanck(p: string): Amount {\n        this._value.setAtomic(p);\n        return this;\n    }\n\n    /**\n     * Gets SIGNA representation\n     * @return value in SIGNA\n     */\n    getSigna(): string {\n        return this._value.getCompound();\n    }\n\n    /**\n     * Sets value as SIGNA, i.e. overwrites current hold value\n     * @param b value in SIGNA\n     * @return This value object\n     */\n    setSigna(b: string): Amount {\n        this._value.setCompound(b);\n        return this;\n    }\n\n    /**\n     * Checks for equality\n     * @param amount The other value to be compared\n     * @return true if equal, otherwise false\n     */\n    public equals(amount: Amount): boolean {\n        return this._value.equals(amount._value);\n    }\n\n    /**\n     * Checks for lesser or equality\n     * @param amount The other value to be compared\n     * @return true if less or equal, otherwise false\n     */\n    public lessOrEqual(amount: Amount): boolean {\n        return this._value.lessOrEqual(amount._value);\n    }\n\n    /**\n     * Checks for lesser value\n     * @param amount The other value to be compared\n     * @return true if less, otherwise false\n     */\n    public less(amount: Amount): boolean {\n        return this._value.less(amount._value);\n    }\n\n    /**\n     * Checks for greater or equality value\n     * @param amount The other value to be compared\n     * @return true if greater or equal, otherwise false\n     */\n    public greaterOrEqual(amount: Amount): boolean {\n        return this._value.greaterOrEqual(amount._value);\n    }\n\n    /**\n     * Checks for greater value\n     * @param amount The other value to be compared\n     * @return true if greater, otherwise false\n     */\n    public greater(amount: Amount): boolean {\n        return this._value.greater(amount._value);\n    }\n\n    /**\n     * Adds two values\n     * @param amount The other value to be added\n     * @return the _mutated_ Amount object\n     */\n    public add(amount: Amount): Amount {\n        this._value.add(amount._value);\n        return this;\n    }\n\n    /**\n     * Subtracts from value\n     * @param amount The other value to be subtracted\n     * @return the _mutated_ Amount object\n     */\n    public subtract(amount: Amount): Amount {\n        this._value.subtract(amount._value);\n        return this;\n    }\n\n    /**\n     * Multiplies with a _numeric_ value (not Amount)\n     * @param value A numeric value to be multiplied with\n     * @return the _mutated_ Amount object\n     */\n    public multiply(value: number): Amount {\n        this._value.multiply(value);\n        return this;\n    }\n\n    /**\n     * Divides by a _numeric_ value (not Amount)\n     * @param value A numeric value to be divided by\n     * @return the _mutated_ Amount object\n     */\n    public divide(value: number): Amount {\n        this._value.divide(value);\n        return this;\n    }\n\n    /**\n     * Gets a string representation in form `\uA7A8 100`\n     * @param format The format object, Default: {@link AmountFormats.DotDecimal}\n     * @return The formatted string\n     */\n    public toString(format: AmountFormat = AmountFormats.DotDecimal): string {\n        return this._value.toFormat(format.prefix, format);\n    }\n\n    /**\n     * Clones/Copies the current Amount to a new object\n     * @return new Amount instance\n     */\n    public clone(): Amount {\n        return Amount.fromPlanck(this.getPlanck());\n    }\n}\n", "/**\n * Original work Copyright (c) 2021 Burst Apps Team\n */\n\nimport BigNumber from 'bignumber.js';\n\n/**\n * Converts/Decodes a Base36 encoded string into hex string. UTF-8 is supported\n * Inverse function {@link convertHexStringToBase36String}\n * @param b36 The string to be decoded (either URI encoded or not)\n * @return {string} The hex representation of input string\n *\n * @category conversion\n */\nexport const convertBase36StringToHexString = (b36: string): string => {\n    return new BigNumber(b36, 36).toString(16);\n};\n", "//\n// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!\n//\n;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory()\n        : typeof define === 'function' && define.amd\n            ? define(factory) :\n            // cf. https://github.com/dankogai/js-base64/issues/119\n            (function () {\n                // existing version for noConflict()\n                var _Base64 = global.Base64;\n                var gBase64 = factory();\n                gBase64.noConflict = function () {\n                    global.Base64 = _Base64;\n                    return gBase64;\n                };\n                if (global.Meteor) { // Meteor.js\n                    Base64 = gBase64;\n                }\n                global.Base64 = gBase64;\n            })();\n}((typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n            : this), function () {\n    'use strict';\n    /**\n     *  base64.ts\n     *\n     *  Licensed under the BSD 3-Clause License.\n     *    http://opensource.org/licenses/BSD-3-Clause\n     *\n     *  References:\n     *    http://en.wikipedia.org/wiki/Base64\n     *\n     * @author Dan Kogai (https://github.com/dankogai)\n     */\n    var version = '3.7.7';\n    /**\n     * @deprecated use lowercase `version`.\n     */\n    var VERSION = version;\n    var _hasBuffer = typeof Buffer === 'function';\n    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var b64chs = Array.prototype.slice.call(b64ch);\n    var b64tab = (function (a) {\n        var tab = {};\n        a.forEach(function (c, i) { return tab[c] = i; });\n        return tab;\n    })(b64chs);\n    var b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n    var _fromCC = String.fromCharCode.bind(String);\n    var _U8Afrom = typeof Uint8Array.from === 'function'\n        ? Uint8Array.from.bind(Uint8Array)\n        : function (it) { return new Uint8Array(Array.prototype.slice.call(it, 0)); };\n    var _mkUriSafe = function (src) { return src\n        .replace(/=/g, '').replace(/[+\\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };\n    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\\+\\/]/g, ''); };\n    /**\n     * polyfill version of `btoa`\n     */\n    var btoaPolyfill = function (bin) {\n        // console.log('polyfilled');\n        var u32, c0, c1, c2, asc = '';\n        var pad = bin.length % 3;\n        for (var i = 0; i < bin.length;) {\n            if ((c0 = bin.charCodeAt(i++)) > 255 ||\n                (c1 = bin.charCodeAt(i++)) > 255 ||\n                (c2 = bin.charCodeAt(i++)) > 255)\n                throw new TypeError('invalid character found');\n            u32 = (c0 << 16) | (c1 << 8) | c2;\n            asc += b64chs[u32 >> 18 & 63]\n                + b64chs[u32 >> 12 & 63]\n                + b64chs[u32 >> 6 & 63]\n                + b64chs[u32 & 63];\n        }\n        return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n    };\n    /**\n     * does what `window.btoa` of web browsers do.\n     * @param {String} bin binary string\n     * @returns {string} Base64-encoded string\n     */\n    var _btoa = typeof btoa === 'function' ? function (bin) { return btoa(bin); }\n        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }\n            : btoaPolyfill;\n    var _fromUint8Array = _hasBuffer\n        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }\n        : function (u8a) {\n            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n            var maxargs = 0x1000;\n            var strs = [];\n            for (var i = 0, l = u8a.length; i < l; i += maxargs) {\n                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n            }\n            return _btoa(strs.join(''));\n        };\n    /**\n     * converts a Uint8Array to a Base64 string.\n     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n     * @returns {string} Base64 string\n     */\n    var fromUint8Array = function (u8a, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n    };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const utob = (src: string) => unescape(encodeURIComponent(src));\n    // reverting good old fationed regexp\n    var cb_utob = function (c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                    + _fromCC(0x80 | (cc & 0x3f)))\n                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                        + _fromCC(0x80 | (cc & 0x3f)));\n        }\n        else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                + _fromCC(0x80 | (cc & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-8 string\n     * @returns {string} UTF-16 string\n     */\n    var utob = function (u) { return u.replace(re_utob, cb_utob); };\n    //\n    var _encode = _hasBuffer\n        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }\n        : _TE\n            ? function (s) { return _fromUint8Array(_TE.encode(s)); }\n            : function (s) { return _btoa(utob(s)); };\n    /**\n     * converts a UTF-8-encoded string to a Base64 string.\n     * @param {boolean} [urlsafe] if `true` make the result URL-safe\n     * @returns {string} Base64 string\n     */\n    var encode = function (src, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe\n            ? _mkUriSafe(_encode(src))\n            : _encode(src);\n    };\n    /**\n     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n     * @returns {string} Base64 string\n     */\n    var encodeURI = function (src) { return encode(src, true); };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const btou = (src: string) => decodeURIComponent(escape(src));\n    // reverting good old fationed regexp\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function (cccc) {\n        switch (cccc.length) {\n            case 4:\n                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\n                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n                return (_fromCC((offset >>> 10) + 0xD800)\n                    + _fromCC((offset & 0x3FF) + 0xDC00));\n            case 3:\n                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    | (0x3f & cccc.charCodeAt(2)));\n            default:\n                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                    | (0x3f & cccc.charCodeAt(1)));\n        }\n    };\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-16 string\n     * @returns {string} UTF-8 string\n     */\n    var btou = function (b) { return b.replace(re_btou, cb_btou); };\n    /**\n     * polyfill version of `atob`\n     */\n    var atobPolyfill = function (asc) {\n        // console.log('polyfilled');\n        asc = asc.replace(/\\s+/g, '');\n        if (!b64re.test(asc))\n            throw new TypeError('malformed base64.');\n        asc += '=='.slice(2 - (asc.length & 3));\n        var u24, bin = '', r1, r2;\n        for (var i = 0; i < asc.length;) {\n            u24 = b64tab[asc.charAt(i++)] << 18\n                | b64tab[asc.charAt(i++)] << 12\n                | (r1 = b64tab[asc.charAt(i++)]) << 6\n                | (r2 = b64tab[asc.charAt(i++)]);\n            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n        }\n        return bin;\n    };\n    /**\n     * does what `window.atob` of web browsers do.\n     * @param {String} asc Base64-encoded string\n     * @returns {string} binary string\n     */\n    var _atob = typeof atob === 'function' ? function (asc) { return atob(_tidyB64(asc)); }\n        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }\n            : atobPolyfill;\n    //\n    var _toUint8Array = _hasBuffer\n        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }\n        : function (a) { return _U8Afrom(_atob(a).split('').map(function (c) { return c.charCodeAt(0); })); };\n    /**\n     * converts a Base64 string to a Uint8Array.\n     */\n    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };\n    //\n    var _decode = _hasBuffer\n        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }\n        : _TD\n            ? function (a) { return _TD.decode(_toUint8Array(a)); }\n            : function (a) { return btou(_atob(a)); };\n    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };\n    /**\n     * converts a Base64 string to a UTF-8 string.\n     * @param {String} src Base64 string.  Both normal and URL-safe are supported\n     * @returns {string} UTF-8 string\n     */\n    var decode = function (src) { return _decode(_unURI(src)); };\n    /**\n     * check if a value is a valid Base64 string\n     * @param {String} src a value to check\n      */\n    var isValid = function (src) {\n        if (typeof src !== 'string')\n            return false;\n        var s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n        return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n    };\n    //\n    var _noEnum = function (v) {\n        return {\n            value: v, enumerable: false, writable: true, configurable: true\n        };\n    };\n    /**\n     * extend String.prototype with relevant methods\n     */\n    var extendString = function () {\n        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };\n        _add('fromBase64', function () { return decode(this); });\n        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n        _add('toBase64URI', function () { return encode(this, true); });\n        _add('toBase64URL', function () { return encode(this, true); });\n        _add('toUint8Array', function () { return toUint8Array(this); });\n    };\n    /**\n     * extend Uint8Array.prototype with relevant methods\n     */\n    var extendUint8Array = function () {\n        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };\n        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n        _add('toBase64URI', function () { return fromUint8Array(this, true); });\n        _add('toBase64URL', function () { return fromUint8Array(this, true); });\n    };\n    /**\n     * extend Builtin prototypes with relevant methods\n     */\n    var extendBuiltins = function () {\n        extendString();\n        extendUint8Array();\n    };\n    var gBase64 = {\n        version: version,\n        VERSION: VERSION,\n        atob: _atob,\n        atobPolyfill: atobPolyfill,\n        btoa: _btoa,\n        btoaPolyfill: btoaPolyfill,\n        fromBase64: decode,\n        toBase64: encode,\n        encode: encode,\n        encodeURI: encodeURI,\n        encodeURL: encodeURI,\n        utob: utob,\n        btou: btou,\n        decode: decode,\n        isValid: isValid,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array,\n        extendString: extendString,\n        extendUint8Array: extendUint8Array,\n        extendBuiltins: extendBuiltins\n    };\n    //\n    // export Base64 to the namespace\n    //\n    // ES5 is yet to have Object.assign() that may make transpilers unhappy.\n    // gBase64.Base64 = Object.assign({}, gBase64);\n    gBase64.Base64 = {};\n    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });\n    return gBase64;\n}));\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\nimport {Base64} from 'js-base64';\n\n/**\n * Converts/Decodes a Base64 encoded string to string. UTF-8 is supported\n * Inverse function {@link convertStringToBase64String}\n * @param b64 The string to be decoded (either URI encoded or not)\n * @return {string} The original string\n *\n * @category conversion\n */\nexport const convertBase64StringToString = (b64: string): string => {\n    return Base64.decode(b64);\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Converts byte array to hexadecimal string\n * Inverse operation of {@link convertHexStringToByteArray}\n * @param bytes The (unsigned) byte array to be converted\n * @param uppercase If _true_, converts hex string with uppercase characters (Default: false)\n * @return {string} A hex string representing the byte array input\n *\n * @category conversion\n */\nexport const convertByteArrayToHexString = (bytes: Uint8Array, uppercase = false): string => {\n    const hex = [];\n    for (const byte of bytes) {\n        hex.push((byte >>> 4).toString(16));\n        hex.push((byte & 0xF).toString(16));\n    }\n    return uppercase ? hex.join('').toUpperCase() : hex.join('');\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Converts a byte array into string\n * Inverse function {@link convertStringToByteArray}\n * @param byteArray The byte array to be converted\n * @param startIndex The starting index of array to be converted (Default: 0)\n * @param length The number of bytes to be considered, _iff_ startIndex is given. If _null_ the byte array's length is considered\n * @return {string} The converted string\n *\n * @category conversion\n */\nexport const convertByteArrayToString = (byteArray: Uint8Array, startIndex: number = 0, length: number = null): string => {\n    if (length === 0) {\n        return '';\n    }\n\n    let bytes = byteArray;\n    if (startIndex !== 0) {\n        const len = length === null ? byteArray.length - startIndex : length;\n        checkBytesToIntInput(bytes, len, startIndex);\n        bytes = byteArray.slice(startIndex, startIndex + len);\n    }\n\n    const escapedUTF8 = escape(String.fromCharCode.apply(null, Array.from(bytes)));\n    try {\n        return decodeURIComponent(escapedUTF8)\n    } catch (e) {\n        throw new Error('Error decoding utf-8 data');\n    }\n};\n\n\nfunction checkBytesToIntInput(bytes: Uint8Array, numBytes: number, startIndex: number = 0) {\n    if (startIndex < 0) {\n        throw new Error('Start index should not be negative');\n    }\n\n    if (bytes.length < startIndex + numBytes) {\n        throw new Error('Need at least ' + (numBytes) + ' bytes to convert to an integer');\n    }\n    return startIndex;\n}\n", "/** @ignore */\n/** @internal */\n/**  */\n\n// https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\n\n// @ts-ignore\nif (!String.prototype.padStart) {\n    // @ts-ignore\n    String.prototype.padStart = function padStart(targetLength, padString) {\n        targetLength = targetLength >> 0;\n        padString = String(padString !== undefined ? padString : ' ');\n        if (this.length >= targetLength) {\n            return String(this);\n        } else {\n            targetLength = targetLength - this.length;\n            if (targetLength > padString.length) {\n                padString += padString.repeat(targetLength / padString.length);\n            }\n            return padString.slice(0, targetLength) + String(this);\n        }\n    };\n}\n", "/** @ignore */\n/** @internal */\n/**  */\nimport BigNumber from 'bignumber.js';\n\nexport const twosComplementBinary = (bn: BigNumber) => {\n    // we manually implement our own two's complement (flip bits, add one)\n    let bin = bn.multipliedBy(-1).toString(2);\n    while (bin.length % 8) {\n        bin = '0' + bin;\n    }\n    const prefix = ('1' === bin[0] && -1 !== bin.slice(1).indexOf('1')) ? '11111111' : '';\n    bin = bin.split('').map(i => '0' === i ? '1' : '0').join('');\n    return new BigNumber(prefix + bin, 2).plus(1);\n};\n", "/**\n Original work Copyright (c) 2020 Burst Apps Team\n */\nimport './internal/padStartPolyfill';\nimport BigNumber from 'bignumber.js';\nimport {twosComplementBinary} from './internal/twosComplementBinary';\n\n\n\n/**\n * Arbitrary length decimal to hexadecimal conversion\n *\n * >  Negative numbers are expressed as Two's Complement (https://en.wikipedia.org/wiki/Two%27s_complement)\n *\n * Credits to AJ ONeal for the two's complements stuff\n * https://coolaj86.com/articles/convert-decimal-to-hex-with-js-bigints/\n *\n * @param decimal A decimal string or BigNumber representation\n * @param padding If set the hex string will be padded to given number, 8 or 16 or more\n * @return A hexadecimal string\n *\n * @category conversion\n */\nexport const convertDecStringToHexString = (decimal: BigNumber | string, padding: number = 2 ): string => {\n    let bn = typeof decimal === 'string' ? new BigNumber(decimal) : decimal;\n\n    if (bn.isNaN()) {\n        throw new Error(`Invalid decimal argument: [${decimal}] - Expected a valid decimal value`);\n    }\n\n    if (padding < 0) {\n        throw new Error(`Invalid padding argument: [${padding}] - Expected a positive value`);\n    }\n\n    const isNegative = bn.lt(0);\n    if (isNegative) {\n        bn = twosComplementBinary(bn);\n    }\n    const hex = bn.toString(16);\n    const padSize = Math.ceil(hex.length / padding);\n    // @ts-ignore\n    return hex.padStart(padSize * padding, isNegative ? 'f' : '0');\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Toggles the endianess of a hex string.\n * `0xBEEF` > `0xEFBE`\n * If string is little Endianess it turns into Big Endianess, and vice versa\n *\n * > This method is mainly used for Smart Contract messaging and data inspection\n *\n * @param hexString The hex string to be converted\n * @return The converted string as hex string\n *\n * @category conversion\n */\nexport const convertHexEndianess = (hexString): string => {\n    let result = '';\n    const rawData = hexString;\n    for (let i = rawData.length - 1; i >= 0; i -= 2) {\n        result += rawData[i - 1] + rawData[i];\n    }\n    return result;\n};\n", "/**\n Original work Copyright (c) 2021 Burst Apps Team\n */\n\nimport BigNumber from 'bignumber.js';\n\n/**\n * Converts/Decodes a Hex encoded string into Base36 string. UTF-8 is supported\n * Inverse function {@link convertBase36StringToHexString}\n * @param hex The string to be decoded (either URI encoded or not)\n * @return {string} The hex representation of input string\n *\n * @category conversion\n */\nexport  const convertHexStringToBase36String = (hex: string): string => {\n    return new BigNumber(hex, 16).toString(36);\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Converts an hexadecimal string to byte array\n * @param hex The hexadecimal string to be converted\n * @return {number[]} An byte array representing the hexadecimal input\n *\n * @category conversion\n */\nexport const convertHexStringToByteArray = (hex: string): Uint8Array => {\n    if (hex.length % 2) {\n        throw new Error(`Invalid Hex String: ${hex}`);\n    }\n\n    const bytes = new Uint8Array(hex.length / 2);\n    for (let c = 0; c < hex.length; c += 2) {\n        const byte = parseInt(hex.substr(c, 2), 16);\n        if (Number.isNaN(byte)) {\n            throw new Error(`Invalid Hex String: ${hex}`);\n        }\n        bytes[c / 2] = byte;\n    }\n\n    return bytes;\n};\n", "/**\n Original work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Arbitrary length hexadecimal to decimal conversion\n * https://stackoverflow.com/questions/21667377/javascript-hexadecimal-string-to-decimal-string\n * @param hexStr A hexadecimal string\n * @return A decimal string\n *\n * @category conversion\n */\nexport const convertHexStringToDecString = (hexStr: string): string => {\n    const digits = [0];\n    let i, j, carry;\n    for (i = 0; i < hexStr.length; i += 1) {\n        carry = parseInt(hexStr.charAt(i), 16);\n        for (j = 0; j < digits.length; j += 1) {\n            digits[j] = digits[j] * 16 + carry;\n            // tslint:disable-next-line:no-bitwise\n            carry = digits[j] / 10 | 0;\n            digits[j] %= 10;\n        }\n        while (carry > 0) {\n            digits.push(carry % 10);\n            // tslint:disable-next-line:no-bitwise\n            carry = carry / 10 | 0;\n        }\n    }\n    return digits.reverse().join('');\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\nimport {convertByteArrayToString} from './convertByteArrayToString';\nimport {convertHexStringToByteArray} from './convertHexStringToByteArray';\n\n/**\n * Converts a Hexadecimally encoded string into String\n * Inverse function {@link convertStringToHexString}\n * @param hex The Hex string to be converted\n * @return {string} The string represented by the Hex String\n *\n * @category conversion\n */\nexport const convertHexStringToString = (hex: string): string => {\n    return convertByteArrayToString(convertHexStringToByteArray(hex));\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n// FIXME: This implementation has security warnings!\nimport {Base64} from 'js-base64';\n\n/**\n * Converts/Encodes a String into Base64 (URI) encoded string. UTF-8 is supported.\n * Inverse function {@link convertBase64StringToString}\n * @param str The string to be converted\n * @param isURICompatible Determine whether the resulting string shall be URI compatible, or not. Default is `true`\n * @return {string} The Base64 String representing the input string. The string is already URI encoded, i.e. can be used directly in browsers\n *\n * @category conversion\n */\nexport const convertStringToBase64String = (str: string, isURICompatible = true): string => {\n    return isURICompatible ? Base64.encodeURI(str) : Base64.encode(str);\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Converts a string into byte array\n * Inverse function {@link convertByteArrayToString}\n * @param str The string  to be converted\n * @return {number[]} A byte array representing the string input\n *\n * @category conversion\n */\nexport const convertStringToByteArray = (str: string): Uint8Array => {\n    const s = unescape(encodeURIComponent(str));\n    const bytes = new Uint8Array(s.length);\n    for (let i = 0; i < s.length; ++i) {\n        bytes[i] = s.charCodeAt(i);\n    }\n\n    return bytes;\n};\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\nimport {convertStringToByteArray} from './convertStringToByteArray';\nimport {convertByteArrayToHexString} from './convertByteArrayToHexString';\n\n/**\n * Converts/Encode a String into Hexadecimally encoded\n * Inverse function {@link convertHexStringToString}\n * @param str The Hex string to be converted\n * @return {string} The Hex String representing the input string\n *\n * @category conversion\n */\nexport const convertStringToHexString = (str: string): string => {\n    return convertByteArrayToHexString(convertStringToByteArray(str));\n};\n", "/**\n Original work Copyright (c) 2022 Signum Network\n */\nimport {Amount} from './amount';\n\n/**\n * Converts an Asset Price (priceNQT) into Planck returned in Trade and/or Order objects from node\n * @param assetPrice The priceNQT from asset queries\n * @param decimals The decimals of that asset\n *\n * @category conversion\n */\nexport function convertAssetPriceToPlanck(assetPrice: string, decimals: number): string {\n    // I'm \"abusing\" the Amount with its bignumber calculations here...Signa allows 8 decimals...\n    return Amount.fromSigna(assetPrice).multiply(10 ** (decimals - 8)).getPlanck();\n}\n", "/**\n Original work Copyright (c) 2022 Signum Network\n */\nimport {Amount} from './amount';\n\n/**\n * Converts planck into a `priceNQT` used by Node method `placeOrder`.\n *\n * Usually, you don't need this. {@link core.AssetApi.placeAskOrder} and {@link core.AssetApi.placeBidOrder} convert planck into\n * correct value already. This helper is just for those who interact with the Node Http API directly\n *\n * @see {@link convertAssetPriceToPlanck}\n *\n * @param planck the amount in planck per token\n * @param decimals the number of decimals for targeted asset\n * @return the Price in _planck per one token quantity_\n *\n * @category conversion\n */\nexport function convertPlanckToAssetPrice(planck: string, decimals: number): string {\n    return Amount.fromSigna(planck).divide(10 ** decimals).getSigna();\n}\n", "export * from './args/asyncRetryArgs';\n", "/**\n * The utility package for SignumJS, with loads of convenience and conversion methods\n *\n * @module util\n */\nexport * from './asyncRetry';\nexport * from './chainTime';\nexport * from './chainValue';\nexport * from './amount';\nexport * from './constants';\nexport * from './convertBase36StringToHexString';\nexport * from './convertBase64StringToString';\nexport * from './convertByteArrayToHexString';\nexport * from './convertByteArrayToString';\nexport * from './convertDecStringToHexString';\nexport * from './convertHexEndianess';\nexport * from './convertHexStringToBase36String';\nexport * from './convertHexStringToByteArray';\nexport * from './convertHexStringToDecString';\nexport * from './convertHexStringToString';\nexport * from './convertStringToBase64String';\nexport * from './convertStringToByteArray';\nexport * from './convertStringToHexString';\nexport * from './convertAssetPriceToPlanck';\nexport * from './convertPlanckToAssetPrice';\nexport * from './typings';\n", "\n/**\n *\n * */\nexport enum ApiVersion {\n    /**\n     * Currently, the only version.\n     */\n    V1 = 0,\n}\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Constants for transaction types\n *\n * The transaction type is part of every {@link Transaction} object\n * and used to distinguish block data. Additionally, to the transaction type\n * a subtype is sent, that specifies the kind of transaction more detailly.\n *\n * @category transaction-types\n */\nexport enum TransactionType {\n    /**\n     * {@link TransactionPaymentSubtype}\n     */\n    Payment = 0,\n    /**\n     * {@link TransactionArbitrarySubtype}\n     */\n    Arbitrary = 1,\n    /**\n     * {@link TransactionAssetSubtype}\n     */\n    Asset = 2,\n    /**\n     * {@link TransactionMarketplaceSubtype}\n     */\n    Marketplace= 3,\n    /**\n     * {@link TransactionLeasingSubtype}\n     */\n    Leasing = 4,\n    /**\n     * {@link TransactionMiningSubtype}\n     */\n    Mining = 20,\n    /**\n     * {@link TransactionAdvancedPaymentSubtype}\n     */\n    AdvancedPayment = 21,\n    /**\n     * {@link TransactionSmartContractSubtype}\n     */\n    SmartContract = 22,\n}\n\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Constants for arbitrary subtypes\n *\n * @category transaction-types\n */\nexport enum TransactionArbitrarySubtype {\n    Message = 0,\n    AliasAssignment,\n    PollCreation,\n    VoteCasting,\n    HubAnnouncement,\n    AccountInfo,\n    AliasSale,\n    AliasBuy,\n    TopLevelDomainAssignment\n}\n\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2023 Signum Network\n */\n\n/**\n * Constants for asset/token subtypes\n * \n * @category transaction-types\n */\nexport enum TransactionAssetSubtype {\n    AssetIssuance = 0,\n    AssetTransfer,\n    AskOrderPlacement,\n    BidOrderPlacement,\n    AskOrderCancellation,\n    BidOrderCancellation,\n    AssetMint,\n    AssetAddTreasureyAccount,\n    AssetDistributeToHolders,\n    AssetMultiTransfer,\n    AssetTransferOwnership\n}\n\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Constants for leasing subtypes\n *\n * @category transaction-types\n */\nexport enum TransactionLeasingSubtype {\n    Ordinary = 0\n}\n\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Constants for marketplace subtypes\n *\n * @category transaction-types\n */\nexport enum TransactionMarketplaceSubtype {\n    MarketplaceListing = 0,\n    MarketplaceRemoval,\n    MarketplaceItemPriceChange,\n    MarketplaceItemQuantityChange,\n    MarketplacePurchase,\n    MarketplaceDelivery,\n    MarketplaceFeedback,\n    MarketplaceRefund\n}\n\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Constants for payment subtypes\n *\n * @category transaction-types\n */\nexport enum TransactionPaymentSubtype {\n    Ordinary = 0,\n    MultiOut,\n    MultiOutSameAmount,\n}\n\n", "/**\n * Original work Copyright (c) 2021 Burst Apps Team\n */\n\n/**\n * Constants for mining subtypes\n *\n * @category transaction-types\n */\nexport enum TransactionMiningSubtype {\n    RewardRecipientAssignment = 0,\n    AddCommitment = 1,\n    RemoveCommitment = 2,\n}\n\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n * Modified 2024, Signum Network\n */\n\n/**\n * Constants for advanced payment subtypes\n *\n * @category transaction-types\n */\nexport enum TransactionAdvancedPaymentSubtype {\n    EscrowCreation = 0,\n    EscrowSigning,\n    EscrowResult,\n    SubscriptionSubscribe,\n    SubscriptionCancel,\n    SubscriptionPayment,\n}\n\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Constants for smart contract (aka AT) subtypes\n *\n * @category transaction-types\n */\nexport enum TransactionSmartContractSubtype {\n    SmartContractCreation = 0,\n    SmartContractPayment\n}\n\n", "import {ApiVersion} from './apiVersion';\nimport {TransactionType} from './transactionType';\nimport {TransactionArbitrarySubtype} from './transactionArbitrarySubtype';\nimport {TransactionAssetSubtype} from './transactionAssetSubtype';\nimport {TransactionLeasingSubtype} from './transactionLeasingSubtype';\nimport {TransactionMarketplaceSubtype} from './transactionMarketplaceSubtype';\nimport {TransactionPaymentSubtype} from './transactionPaymentSubtype';\nimport {TransactionMiningSubtype} from './transactionMiningSubtype';\nimport {TransactionAdvancedPaymentSubtype} from './transactionAdvancedPaymentSubtype';\nimport {TransactionSmartContractSubtype} from './transactionSmartContractSubtype';\n\n/**\n * The default deadline (in minutes) for Transactions\n * \n */\nconst DefaultDeadline = 1440;\n\n/**\n * The default endpoint for {@link ApiSettings}\n * \n */\nconst DefaultApiEndpoint = '/api';\n\n\n/**\n *\n * Address prefixes used in {@link Address}\n * \n * */\nenum AddressPrefix {\n    MainNet = 'S',\n    TestNet = 'TS',\n}\n\nexport {\n    ApiVersion,\n    AddressPrefix,\n    DefaultDeadline,\n    DefaultApiEndpoint,\n    TransactionType,\n    TransactionPaymentSubtype,\n    TransactionMarketplaceSubtype,\n    TransactionLeasingSubtype,\n    TransactionAssetSubtype,\n    TransactionArbitrarySubtype,\n    TransactionMiningSubtype,\n    TransactionAdvancedPaymentSubtype,\n    TransactionSmartContractSubtype\n};\n", "/**\n *Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * Http Response\n *\n * Returned by Http request\n * @module http\n */\nexport class HttpResponse {\n    constructor(public status: number, public response: any) {}\n}\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * HttpError class\n *\n * Thrown on HTTP errors\n * @module http\n */\nexport class HttpError extends Error {\n    public timestamp: number = Date.now();\n\n    constructor(public requestUrl: string,\n                public status: number,\n                public message: string,\n                public data: any) {\n        super(message);\n    }\n}\n", "import {Http} from './http';\nimport {HttpResponse} from './httpResponse';\nimport {HttpError} from './httpError';\n\nclass HttpMock implements Http {\n\n    public static ForAll = '__all';\n\n    constructor() {\n        this.reset();\n    }\n\n    _replyFunctions: object = HttpMock.initialReplyFunctions();\n\n    private static initialReplyFunctions(): object {\n        return {\n            get: {},\n            post: {},\n            put: {},\n            delete: {}\n        };\n    }\n\n    private createReplyFn(status: number, data: any): () => Promise<HttpResponse> {\n        return () => Promise.resolve(new HttpResponse(status, data));\n    }\n\n    private createErrorFn(requestUrl: string, status: number, message: string, data: any = null): () => {} {\n        return () => {\n            throw new HttpError(requestUrl, status, message, data);\n        };\n    }\n\n    public reset(): void {\n        this._replyFunctions = HttpMock.initialReplyFunctions();\n    }\n\n    public registerResponse(method: string, url: string, status: number, data: any) : void {\n        // @ts-ignore\n        this._replyFunctions[method][url] = this.createReplyFn(status, data);\n    }\n\n    public registerError(method: string, url: string, status: number, message: string, data: any) : void {\n        // @ts-ignore\n        this._replyFunctions[method][url] = this.createErrorFn(url, status, message, data);\n    }\n\n    public get(url: string): Promise<HttpResponse> {\n        return this.request('get', url);\n    }\n\n    public delete(url: string): Promise<HttpResponse> {\n        return this.request('delete', url);\n    }\n\n    public post(url: string, payload: any): Promise<HttpResponse> {\n        return this.request('post', url); // ignore payload...\n    }\n\n    public put(url: string, payload: any): Promise<HttpResponse> {\n        return this.request('put', url); // ignore payload...\n    }\n\n    private request(method: string, url: string): Promise<HttpResponse> {\n        // @ts-ignore\n        const replyFn = this._replyFunctions[method][url] || this._replyFunctions[method][HttpMock.ForAll];\n        if (!replyFn) {\n            throw new Error(`Could not find any mocked function for method ${method.toUpperCase()} url ${url}`);\n        }\n        return replyFn();\n    }\n\n}\n\n/**\n * Http Mocker Builder for easy to http testing\n *\n * Example:\n * ```\n const mockedHttp = HttpMockBuilder\n .create()\n .onGetReply(200, {foo: 'get'})\n .onPostThrowError(500, 'Post Error', {e: 'post'})\n .onPutThrowError(404, 'Put Error', {e: 'put'})\n .onDeleteThrowError(403, 'Delete Error', {e: 'delete'})\n .build();\n\n const response = await mockedHttp.get('/url');\n\n await mockedHttp.post('/url/post', {faz: 'post'}); // will throw exception\n\n * ```\n *\n * @module http\n */\nexport class HttpMockBuilder {\n\n    private readonly _httpMock: HttpMock;\n\n    private constructor() {\n        this._httpMock = new HttpMock();\n    }\n\n    /**\n     * Creates a builder instance\n     * @return {HttpMockBuilder} the builder\n     */\n    public static create(): HttpMockBuilder {\n        return new HttpMockBuilder();\n    }\n\n    private onReply(method: string, status: number, data: any, url: string = HttpMock.ForAll): HttpMockBuilder {\n        this._httpMock.registerResponse(method, url, status, data);\n        return this;\n    }\n\n    private onThrowError(method: string, status: number, errorMessage: string, data: any, url: string = HttpMock.ForAll): HttpMockBuilder {\n        this._httpMock.registerError(method, url, status, errorMessage, data);\n        return this;\n    }\n\n    /**\n     * Mocks responses for get methods\n     * You may pass a specific endpoint as parameter to mock only selected endpoints.\n     * This is very useful, when having methods that do several Http requests,\n     * so you can mock them one on one.\n     *\n     * The following code returns the same content on _every_ get call\n     * ```\n     *   HttpMockBuilder\n     *   .create()\n     *   .onGetReply(200, {response: 'foo}) // mocks all get requests\n     *   .onPostReply(201, {response: 'foo}) // mocks all post requests\n     *   .build()\n     * ```\n     *\n     *  The next code returns the different content depending on the passed endpoint\n     * ```\n     *   HttpMockBuilder\n     *   .create()\n     *   .onGetReply(200, {response: 'foo}, '/url/specific') // mocks get request for '/url/specific'\n     *   .build()\n     * ```\n     * @param status {number} The status to be returned\n     * @param data The data to be returned\n     * @param url {string?} If given, the mock applies for that specific url, other for all method calls\n     * @return {HttpMockBuilder} The builder instance (Fluent API)\n     */\n    public onGetReply(status: number, data: any, url?: string): HttpMockBuilder {\n        return this.onReply('get', status, data, url);\n    }\n\n    /**\n     * Mocks response exceptions for get methods. It works like onGetReply(), but throws an HttpError instead\n     * @param status {number} The status to be returned in exception object\n     * @param errorMessage {string} The error message\n     * @param data {any?} Eventual data carried with the error object\n     * @param url {string?} The specific url for which the exception should be thrown\n     * @return {HttpMockBuilder} The builder instance (Fluent API)\n     */\n    public onGetThrowError(status: number, errorMessage: string, data: any = null, url: string = HttpMock.ForAll): HttpMockBuilder {\n        return this.onThrowError('get', status, errorMessage, data, url);\n    }\n\n    /**\n     * Mocks post requests. Works analog to onGetReply().\n     */\n    public onPostReply(status: number, data: any, url?: string): HttpMockBuilder {\n        return this.onReply('post', status, data, url);\n    }\n\n    /**\n     * Mocks response exceptions for post methods. It works like onPostReply(), but throws an HttpError instead\n     */\n    public onPostThrowError(status: number, errorMessage: string, data: any, url: string = HttpMock.ForAll): HttpMockBuilder {\n        return this.onThrowError('post', status, errorMessage, data, url);\n    }\n\n    /**\n     * Mocks put requests. Works analog to onGetReply().\n     */\n    public onPutReply(status: number, data: any, url?: string): HttpMockBuilder {\n        return this.onReply('put', status, data, url);\n    }\n\n    /**\n     * Mocks response exceptions for put methods. It works like onPutReply(), but throws an HttpError instead\n     */\n    public onPutThrowError(status: number, errorMessage: string, data: any, url: string = HttpMock.ForAll): HttpMockBuilder {\n        return this.onThrowError('put', status, errorMessage, data, url);\n    }\n\n    /**\n     * Mocks delete requests. Works analog to onGetReply().\n     */\n    public onDeleteReply(status: number, data: any, url?: string): HttpMockBuilder {\n        return this.onReply('delete', status, data, url);\n    }\n\n    /**\n     * Mocks response exceptions for delete methods. It works like onDeleteReply(), but throws an HttpError instead\n     */\n    public onDeleteThrowError(status: number, errorMessage: string, data: any, url: string = HttpMock.ForAll): HttpMockBuilder {\n        return this.onThrowError('delete', status, errorMessage, data, url);\n    }\n\n    /**\n     * Builds the Http mock.\n     * @return {Http} The mocked Http implementation\n     */\n    public build(): Http {\n        return this._httpMock;\n    }\n}\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "// eslint-disable-next-line strict\nexport default null;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n", "'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n", "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n", "const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n", "import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n", "import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n", "import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n", "import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n", "import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n", "\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n", "import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "export const VERSION = \"1.7.9\";", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "import axios, {AxiosInstance, AxiosRequestConfig} from 'axios';\nimport {HttpResponse} from './httpResponse';\nimport {HttpError} from './httpError';\nimport {Http} from './http';\n\nconst DefaultAxiosOptions = {};\n\n/**\n * Http Implementation of {@link Http} using https://github.com/axios/axios\n *\n * Prefer {@link HttpClientFactory.createHttpClient} to create an instance\n *\n * @module http\n */\nexport class HttpAdapterAxios implements Http {\n\n    private readonly _clientImpl: AxiosInstance;\n\n    /**\n     * Creates your Http client\n     * @param baseURL The baseUrl, i.e host url\n     * @param options [optional] An options/configurations object applied to all requests\n     * The current implementation uses axios, so the options can be found here\n     * [Axios Configuration](https://github.com/axios/axios#request-config)\n     */\n    constructor(baseURL: string, options: AxiosRequestConfig = DefaultAxiosOptions) {\n        // see https://github.com/axios/axios#request-config for more\n        this._clientImpl = axios.create({\n            baseURL,\n            ...options\n        });\n    }\n\n    /**\n     * @internal\n     * @param url The url\n     * @param error The returned error\n     */\n    private static mountError(url: string, error: any): HttpError {\n        if (error.response) {\n            return new HttpError(url, error.response.status, error.response.statusText, error.response.data);\n        } else if (error.message) {\n            return new HttpError(url, 0, 'Request failed', error.message);\n        } else if (error.request) {\n            return new HttpError(url, 0, 'Request failed', error.request);\n        }\n        return new HttpError(url, -1, 'Http Configuration error', null);\n    }\n\n    async get(url: string, options?: any | AxiosRequestConfig): Promise<HttpResponse> {\n        try {\n            const {status, data} = await this._clientImpl.get(url, options);\n            return new HttpResponse(status, data);\n        } catch (error) {\n            throw HttpAdapterAxios.mountError(url, error);\n        }\n    }\n\n    async post(url: string, payload: any, options?: any | AxiosRequestConfig): Promise<HttpResponse> {\n        try {\n            const {status, data} = await this._clientImpl.post(url, payload, options);\n            return new HttpResponse(status, data);\n        } catch (error) {\n            throw HttpAdapterAxios.mountError(url, error);\n        }\n    }\n\n    async put(url: string, payload: any, options?: any | AxiosRequestConfig): Promise<HttpResponse> {\n        try {\n            const {status, data} = await this._clientImpl.put(url, payload, options);\n            return new HttpResponse(status, data);\n        } catch (error) {\n            throw HttpAdapterAxios.mountError(url, error);\n        }\n    }\n\n    async delete(url: string, options?: any | AxiosRequestConfig): Promise<HttpResponse> {\n        try {\n            const {status, data} = await this._clientImpl.delete(url, options);\n            return new HttpResponse(status, data);\n        } catch (error) {\n            throw HttpAdapterAxios.mountError(url, error);\n        }\n    }\n}\n", "import {Http} from './http';\nimport {HttpAdapterAxios} from './httpAdapterAxios';\n\n/**\n * Factory for clients of {@link Http}\n *\n * @module http\n */\nexport class HttpClientFactory {\n    /**\n     * Creates an Http instance\n     *\n     * The current default implementation uses https://github.com/axios/axios\n     *\n     * @param baseUrl The base/root host url for the adapter, i.e. https://contoso.com\n     * @param options An arbitrary options object, depending on the implementation.\n     * As the default implementation uses axios the available options are here: https://axios-http.com/docs/req_config\n     */\n    static createHttpClient(baseUrl: string, options?: any): Http {\n        return new HttpAdapterAxios(baseUrl, options);\n    }\n}\n", "/**\n * The Http Module is a thin wrapper around the isomorhpic Http Implementation [axios](https://github.com/axios/axios)\n * It mainly unifies responses such that its use is consistent\n *\n * @module http\n */\n\nimport {Http} from './http';\nimport {HttpResponse} from './httpResponse';\nimport {HttpError} from './httpError';\nimport {HttpMockBuilder} from './httpMockBuilder';\nimport {HttpClientFactory} from './httpClientFactory';\n\nexport {\n    Http,\n    HttpClientFactory,\n    HttpResponse,\n    HttpMockBuilder,\n    HttpError,\n};\n\n", "/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return \u00B10 if x is \u00B10 or y is \u00B1Infinity, or return \u00B1Infinity as y is \u00B10.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on \u00B1Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and \u00B1Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, \u00B1Infinity, \u00B10 or \u00B11, or n is \u00B1Infinity, NaN or \u00B10.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to \u00B1Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to \u00B1Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to \u00B10: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = \u00B1Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return \u00B10, else return \u00B1Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, \u00B1Infinity or \u00B10?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return \u00B1Infinity if either is \u00B1Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return \u00B10 if either is \u00B10.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return \u00B1Infinity if either \u00B1Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n", "/** @ignore */\n/** @internal */\n\nimport BigNumber from 'bignumber.js';\n\n/**\n * Class to easily implement reading data sequentially. Expects hexstring\n * with big-endian bytes and methods return only positive values. Throws error\n *\n * @internal\n */\nexport default class ByteBuffer {\n    private needle: number;\n    private readonly transactionBytes: number[];\n    private readonly hexTransactionBytes: string;\n\n    constructor(hexString: string) {\n        this.needle = 0;\n        this.transactionBytes = [];\n        this.hexTransactionBytes = hexString.toLowerCase();\n        if (hexString.length % 2) {\n            throw new Error(`Invalid Hex String: ${hexString}`);\n        }\n        this.transactionBytes = [];\n        for (let c = 0; c < hexString.length; c += 2) {\n            const byte = parseInt(hexString.substring(c, c + 2), 16);\n            if (Number.isNaN(byte)) {\n                throw new Error(`Invalid Hex String: ${hexString}`);\n            }\n            this.transactionBytes.push(byte);\n        }\n    }\n\n    /** If setValue is undefined, returns the current needle position.\n     * Else, sets current needle to that value.\n     */\n    position(setValue?: number): number | undefined {\n        if (setValue === undefined) {\n            return this.needle;\n        }\n        this.needle = setValue;\n    }\n\n    length(): number {\n        return this.transactionBytes.length;\n    }\n\n    readByte(): number {\n        if (this.needle + 1 > this.transactionBytes.length) {\n            throw new Error('Unexpected end of input.');\n        }\n        const byteVal = this.transactionBytes[this.needle];\n        this.needle++;\n        return byteVal;\n    }\n\n    readShort(): number {\n        if (this.needle + 2 > this.transactionBytes.length) {\n            throw new Error('Unexpected end of input.');\n        }\n        const shortVal = this.transactionBytes[this.needle] + this.transactionBytes[this.needle + 1] * 256;\n        this.needle += 2;\n        return shortVal;\n    }\n\n    readInt(): number {\n        if (this.needle + 4 > this.transactionBytes.length) {\n            throw new Error('Unexpected end of input.');\n        }\n        const intVal = this.transactionBytes[this.needle] +\n            this.transactionBytes[this.needle + 1] * 256 +\n            this.transactionBytes[this.needle + 2] * 65536 +\n            this.transactionBytes[this.needle + 3] * 16777216;\n        this.needle += 4;\n        return intVal;\n    }\n\n    readLong(): BigNumber {\n        if (this.needle + 8 > this.transactionBytes.length) {\n            throw new Error('Unexpected end of input.');\n        }\n        let longVal = new BigNumber(0);\n        let longBase = new BigNumber(1);\n        for (let i = 0; i < 8; i++) {\n            longVal = longVal.plus(longBase.multipliedBy(this.transactionBytes[this.needle + i]));\n            longBase = longBase.multipliedBy(256);\n        }\n        this.needle += 8;\n        return longVal;\n    }\n\n    readHexString(nBytes: number): string {\n        if (this.needle + nBytes > this.transactionBytes.length) {\n            throw new Error('Unexpected end of input.');\n        }\n        const stringVal = this.hexTransactionBytes.slice(this.needle * 2, (this.needle + nBytes) * 2);\n        this.needle += nBytes;\n        return stringVal;\n    }\n\n    readString(nBytes: number) {\n        if (this.needle + nBytes > this.transactionBytes.length) {\n            throw new Error('Unexpected end of input.');\n        }\n        // keep escape, as this guarantees compatibility with old on-chain data\n        const escapedUTF8 = escape(\n            String.fromCharCode.apply(null, this.transactionBytes.slice(this.needle, this.needle + nBytes))\n        );\n        this.needle += nBytes;\n        return decodeURIComponent(escapedUTF8);\n    }\n}\n", "/** @ignore */\n/** @internal */\n\ninterface AttachmentField {\n    type: string;\n    parameterName?: string;\n}\n\ntype AttachmentSpec = Map<string, AttachmentField[]>;\n\nconst AttachmentSpecV1: AttachmentSpec = new Map<string, AttachmentField[]>([\n    ['sendMoneyMulti', [\n        {type: 'Byte*1'},\n        {type: 'Long:Long*$0', parameterName: 'recipients'},\n        {type: 'Delete*1', parameterName: 'amountNQT'}\n    ]],\n    ['sendMoneyMultiSame', [\n        {type: 'Byte*1'},\n        {type: 'Long*$0', parameterName: 'recipients'},\n    ]],\n    ['setAlias', [\n        {type: 'ByteString*1', parameterName: 'aliasName'},\n        {type: 'ShortString*1', parameterName: 'aliasURI'},\n    ]],\n    ['setAccountInfo', [\n        {type: 'ByteString*1', parameterName: 'name'},\n        {type: 'ShortString*1', parameterName: 'description'},\n    ]],\n    ['sellAlias', [\n        {type: 'ByteString*1', parameterName: 'aliasName'},\n        {type: 'Long*1', parameterName: 'priceNQT'},\n    ]],\n    ['buyAlias', [\n        {type: 'ByteString*1', parameterName: 'aliasName'},\n        {type: 'Delete*1', parameterName: 'recipient'}\n    ]],\n    ['issueAsset', [\n        {type: 'ByteString*1', parameterName: 'name'},\n        {type: 'ShortString*1', parameterName: 'description'},\n        {type: 'Long*1', parameterName: 'quantityQNT'},\n        {type: 'Byte*1', parameterName: 'decimals'},\n    ]],\n    ['transferAsset', [\n        {type: 'Long*1', parameterName: 'asset'},\n        {type: 'Long*1', parameterName: 'quantityQNT'}\n    ]],\n    ['placeAskOrder', [\n        {type: 'Long*1', parameterName: 'asset'},\n        {type: 'Long*1', parameterName: 'quantityQNT'},\n        {type: 'Long*1', parameterName: 'priceNQT'}\n    ]],\n    ['placeBidOrder', [\n        {type: 'Long*1', parameterName: 'asset'},\n        {type: 'Long*1', parameterName: 'quantityQNT'},\n        {type: 'Long*1', parameterName: 'priceNQT'}\n    ]],\n    ['cancelAskOrder', [\n        {type: 'Long*1', parameterName: 'order'}\n    ]],\n    ['cancelBidOrder', [\n        {type: 'Long*1', parameterName: 'order'}\n    ]],\n    ['mintAsset', [\n        {type: 'Long*1', parameterName: 'asset'},\n        {type: 'Long*1', parameterName: 'quantityQNT'},\n    ]],\n    ['distributeToAssetHolders', [\n        {type: 'Long*1', parameterName: 'asset'},\n        {type: 'Long*1', parameterName: 'quantityMinimumQNT'},\n        {type: 'Long*1', parameterName: 'assetToDistribute'},\n        {type: 'Long*1', parameterName: 'quantityQNT'}\n    ]],\n    ['transferAssetMulti', [\n        {type: 'Byte*1'},\n        {type: 'Long:Long*$0', parameterName: 'assetIdsAndQuantities'}\n    ]],\n    ['addCommitment', [\n        {type: 'Long*1', parameterName: 'amountNQT'}\n    ]],\n    ['removeCommitment', [\n        {type: 'Long*1', parameterName: 'amountNQT'}\n    ]],\n    ['sendMoneySubscription', [\n        {type: 'Int*1', parameterName: 'frequency'}\n    ]],\n    ['subscriptionCancel', [\n        {type: 'Long*1', parameterName: 'subscription'}\n    ]],\n    ['createATProgram', [\n        {type: 'ByteString*1', parameterName: 'name'},\n        {type: 'ShortString*1', parameterName: 'description'},\n        {type: 'CreationBytes*1'},\n    ]],\n    ['setTLD', [\n        {type: 'ByteString*1', parameterName: 'tld'},\n    ]],\n]);\n\nconst AttachmentSpecV2: AttachmentSpec = new Map<string, AttachmentField[]>([\n    ['issueAsset', [\n        {type: 'ByteString*1', parameterName: 'name'},\n        {type: 'ShortString*1', parameterName: 'description'},\n        {type: 'Long*1', parameterName: 'quantityQNT'},\n        {type: 'Byte*1', parameterName: 'decimals'},\n        {type: 'Byte*1', parameterName: 'mintable'}\n    ]],\n    ['setAlias', [\n        {type: 'ByteString*1', parameterName: 'aliasName'},\n        {type: 'ShortString*1', parameterName: 'aliasURI'},\n        {type: 'Long*1', parameterName: 'tld'},\n    ]],\n]);\n\n\nconst GetAttachmentFields = {\n    '1': AttachmentSpecV1,\n    '2': AttachmentSpecV2\n};\nexport function getAttachmentFields(version: number, requestType: string): AttachmentField[] {\n    const spec = GetAttachmentFields[version];\n    if (!spec) {\n        throw new Error(`No attachment specification not found version '${version}'.`);\n    }\n\n    const requestSpec = spec.get(requestType);\n    if (!requestSpec) {\n        throw new Error(`Attachment specification not found for transaction type '${requestType}', version '${version}'.`);\n    }\n\n    return requestSpec;\n}\n", "/** @ignore */\n/** @internal */\n\nimport {BaseTransaction} from './baseTransaction';\n\n/** From a transaction type/subtype, returns the original requestType */\nconst DecodeRequestType = [\n    {type: 0, subtype: 0, requestType: 'sendMoney', hasAttachment: false},\n    {type: 0, subtype: 1, requestType: 'sendMoneyMulti', hasAttachment: true},\n    {type: 0, subtype: 2, requestType: 'sendMoneyMultiSame', hasAttachment: true},\n    {type: 1, subtype: 0, requestType: 'sendMessage', hasAttachment: false},\n    {type: 1, subtype: 1, requestType: 'setAlias', hasAttachment: true},\n    {type: 1, subtype: 5, requestType: 'setAccountInfo', hasAttachment: true},\n    {type: 1, subtype: 6, requestType: 'sellAlias', hasAttachment: true},\n    {type: 1, subtype: 7, requestType: 'buyAlias', hasAttachment: true},\n    {type: 1, subtype: 8, requestType: 'setTLD', hasAttachment: true},\n    {type: 2, subtype: 0, requestType: 'issueAsset', hasAttachment: true},\n    {type: 2, subtype: 1, requestType: 'transferAsset', hasAttachment: true},\n    {type: 2, subtype: 2, requestType: 'placeAskOrder', hasAttachment: true},\n    {type: 2, subtype: 3, requestType: 'placeBidOrder', hasAttachment: true},\n    {type: 2, subtype: 4, requestType: 'cancelAskOrder', hasAttachment: true},\n    {type: 2, subtype: 5, requestType: 'cancelBidOrder', hasAttachment: true},\n    {type: 2, subtype: 6, requestType: 'mintAsset', hasAttachment: true},\n    {type: 2, subtype: 7, requestType: 'addAssetTreasuryAccount', hasAttachment: false},\n    {type: 2, subtype: 8, requestType: 'distributeToAssetHolders', hasAttachment: true},\n    {type: 2, subtype: 9, requestType: 'transferAssetMulti', hasAttachment: true},\n    {type: 2, subtype: 10, requestType: 'transferAssetOwnership', hasAttachment: false},\n    {type: 20, subtype: 0, requestType: 'setRewardRecipient', hasAttachment: false},\n    {type: 20, subtype: 1, requestType: 'addCommitment', hasAttachment: true},\n    {type: 20, subtype: 2, requestType: 'removeCommitment', hasAttachment: true},\n    {type: 21, subtype: 0, requestType: 'sendMoneyEscrow', hasAttachment: true},\n    {type: 21, subtype: 1, requestType: 'escrowSign', hasAttachment: true},\n    {type: 21, subtype: 3, requestType: 'sendMoneySubscription', hasAttachment: true},\n    {type: 21, subtype: 4, requestType: 'subscriptionCancel', hasAttachment: true},\n    {type: 22, subtype: 0, requestType: 'createATProgram', hasAttachment: true},\n];\n\nexport function getRequestRebuildInfo(tx: BaseTransaction) {\n    const requestType =  DecodeRequestType.find(t => t.type === tx.type && t.subtype === tx.subtype);\n    if (!requestType) {\n        throw new Error(`Unsupported transaction type '${tx.type}' subtype '${tx.subtype}'.`);\n    }\n    return requestType;\n}\n", "/** @ignore */\n/** @internal */\n\nimport BigNumber from 'bignumber.js';\nimport ByteBuffer from './byteBuffer';\nimport {getAttachmentFields} from './getAttachmentFields';\nimport {getRequestRebuildInfo} from './getRequestRebuildInfo';\nimport {BaseTransaction} from './baseTransaction';\n\n\n/**\n * Try to rebuild the form data based on unsignedBytes in a response.\n * @param hexUnsignedBytes string with unsignedBytes\n * @returns Any object, expected to match the form data\n * @throws Error on failure\n * @internal\n */\nexport function rebuildTransactionPostData(hexUnsignedBytes: string) {\n    const trBytes = new ByteBuffer(hexUnsignedBytes);\n    const transaction = parseBaseTransaction(trBytes);\n    let rebuiltData: any = {};\n\n    rebuiltData.feeNQT = transaction.feeNQT;\n    rebuiltData.publicKey = transaction.senderPublicKey;\n    rebuiltData.deadline = transaction.deadline;\n    if (transaction.amountNQT) {\n        rebuiltData.amountNQT = transaction.amountNQT;\n    }\n    if (transaction.recipient) {\n        rebuiltData.recipient = transaction.recipient;\n    }\n    if (transaction.referencedTransactionFullHash) {\n        rebuiltData['referencedTransactionFullHash'] = transaction.referencedTransactionFullHash;\n    }\n\n    const requestRebuildInfo = getRequestRebuildInfo(transaction);\n    if (requestRebuildInfo.hasAttachment) {\n        rebuiltData = parseAttachment(requestRebuildInfo.requestType, rebuiltData, trBytes);\n    }\n\n    rebuiltData = processSpecialCases(requestRebuildInfo.requestType, rebuiltData);\n    rebuiltData = parseMessage(transaction.flags, rebuiltData, trBytes);\n    rebuiltData = parseEncryptedMessage(transaction.flags, rebuiltData, trBytes);\n    rebuiltData = parseRecipientPublicKey(transaction.flags, rebuiltData, trBytes);\n    rebuiltData = parseEncryptToSelfMessage(transaction.flags, rebuiltData, trBytes);\n\n    return {\n        requestType: requestRebuildInfo.requestType,\n        rebuiltData,\n    };\n}\n\n/**\n * If needed, add here special cases (exceptions) to make further modifications\n * on the rebuiltData properties.\n * @return the updated object.\n */\nfunction processSpecialCases(requestType: string, rebuiltData: any) {\n    switch (requestType) {\n        case 'sendMoney':\n        case 'sendMoneySubscription':\n        case 'transferAsset':\n        case 'transferAssetMulti':\n            // Fixes burning transactions\n            if (!rebuiltData.recipient) {\n                rebuiltData.recipient = '0';\n            }\n            break;\n        case 'sendMoneyMultiSame':\n            rebuiltData.amountNQT = new BigNumber(rebuiltData.amountNQT)\n                .dividedBy(rebuiltData.recipients.split(';').length)\n                .toFixed(0);\n            break;\n        case 'issueAsset':\n            if (rebuiltData.mintable === '1') {\n                rebuiltData.mintable = 'true';\n                if (!rebuiltData.quantityQNT) { // when initial supply is '0'\n                    rebuiltData.quantityQNT = '0';\n                }\n            } else {\n                rebuiltData.mintable = 'false';\n            }\n            if(!rebuiltData.decimals) {\n                rebuiltData.decimals = '0';\n            }\n            break;\n        case 'createATProgram':\n            delete rebuiltData.creationBytes;\n            if (rebuiltData.referencedTransactionFullHash) {\n                delete rebuiltData.code;\n                if (rebuiltData.data === '') {\n                    delete rebuiltData.data;\n                }\n                delete rebuiltData.dpages;\n                delete rebuiltData.cspages;\n                delete rebuiltData.uspages;\n                delete rebuiltData.minActivationAmountNQT;\n            }\n    }\n    return rebuiltData;\n}\n\n/**\n * From a given trByteBuffer, parse the transaction fields common for all\n * kinds of transactions. Returns an incomplete Transaction object\n */\nfunction parseBaseTransaction(trByteBuffer: ByteBuffer): BaseTransaction {\n    const transactionJSON: BaseTransaction = {};\n    transactionJSON.type = trByteBuffer.readByte();\n    const subtypeAndVersion = trByteBuffer.readByte();\n    transactionJSON.subtype = subtypeAndVersion & 0x0F;\n    transactionJSON.version = (subtypeAndVersion & 0xF0) >> 4;\n    if (transactionJSON.version < 2) {\n        throw new Error('Unsupported transaction version.');\n    }\n    transactionJSON.timestamp = trByteBuffer.readInt();\n    transactionJSON.deadline = trByteBuffer.readShort();\n    transactionJSON.senderPublicKey = trByteBuffer.readHexString(32);\n    transactionJSON.recipient = trByteBuffer.readLong().toString();\n    if (transactionJSON.recipient === '0') {\n        delete transactionJSON.recipient;\n    }\n    transactionJSON.amountNQT = trByteBuffer.readLong().toString();\n    if (transactionJSON.amountNQT === '0') {\n        delete transactionJSON.amountNQT;\n    }\n    transactionJSON.feeNQT = trByteBuffer.readLong().toString();\n    transactionJSON.referencedTransactionFullHash = trByteBuffer.readHexString(32);\n    if (/^0+$/.test(transactionJSON.referencedTransactionFullHash)) {\n        delete transactionJSON.referencedTransactionFullHash;\n    }\n    transactionJSON.signature = trByteBuffer.readHexString(64);\n    if (/^0+$/.test(transactionJSON.signature)) {\n        delete transactionJSON.signature;\n    }\n    transactionJSON.flags = trByteBuffer.readInt();\n    transactionJSON.ecBlockHeight = trByteBuffer.readInt();\n    transactionJSON.ecBlockId = trByteBuffer.readLong().toString();\n    transactionJSON.cashBackId = trByteBuffer.readLong().toString();\n    return transactionJSON;\n}\n\n/**\n * Updates the incoming 'data' object (rebuiltData) accordingly the 'requestType'\n * and bytes from 'trBytes'.\n * @return the updated object.\n * @throw Error on failure\n */\nfunction parseAttachment(requestType: string, data: any, trBytes: ByteBuffer) {\n    const attachmentVersion = trBytes.readByte();\n    const fields = getAttachmentFields(attachmentVersion, requestType);\n    const pastValues: string[] = [];\n    let sizeOfString: number;\n    for (const item of fields) {\n        const itemType = item.type.split('*');\n        const typeSpec = itemType[0];\n        const repetitionSpec = itemType[1];\n        let repetition: number;\n        if (repetitionSpec.startsWith('$')) {\n            // variable repetition, depending on previous element\n            const repVal = parseInt(repetitionSpec.substring(1), 10);\n            repetition = parseInt(pastValues[repVal], 10);\n        } else {\n            // fixed repetition\n            repetition = parseInt(repetitionSpec, 10);\n        }\n        const currentValues: string[] = [];\n        for (let amount = 0; amount < repetition; amount++) {\n            switch (typeSpec) {\n                case 'ByteString':\n                    sizeOfString = trBytes.readByte();\n                    currentValues.push(trBytes.readString(sizeOfString));\n                    break;\n                case 'ShortString':\n                    sizeOfString = trBytes.readShort();\n                    currentValues.push(trBytes.readString(sizeOfString));\n                    break;\n                case 'Long:Long':\n                    currentValues.push(\n                        trBytes.readLong().toString() +\n                        ':' +\n                        trBytes.readLong().toString()\n                    );\n                    break;\n                case 'Long':\n                    currentValues.push(trBytes.readLong().toString());\n                    break;\n                case 'Int':\n                    currentValues.push(trBytes.readInt().toString());\n                    break;\n                case 'Short':\n                    currentValues.push(trBytes.readShort().toString());\n                    break;\n                case 'Byte':\n                    currentValues.push(trBytes.readByte().toString());\n                    break;\n                case 'Delete':\n                    break;\n                case 'CreationBytes':\n                    Object.assign(data, parseCreationBytes(trBytes));\n                    break;\n                default:\n                    throw new Error('Internal error');\n            }\n        }\n        if (item.parameterName && (currentValues.length !== 1 || currentValues[0] !== '0')) {\n            // Only add property if it is not zero!\n            data[item.parameterName] = currentValues.join(';');\n        }\n        if (typeSpec === 'Delete') {\n            delete data[item.parameterName];\n        }\n        pastValues.push(currentValues.toString());\n    }\n    return data;\n}\n\nfunction parseCreationBytes(trBytes: ByteBuffer) {\n    const initialPos = trBytes.position();\n\n    const version = trBytes.readShort();\n    if (version !== 3 && version !== 2) {\n        throw new Error('Incorrect version for creationBytes');\n    }\n\n    const _reserved = trBytes.readShort();\n    const codePages = trBytes.readShort();\n    const dpages = trBytes.readShort();\n    const cspages = trBytes.readShort();\n    const uspages = trBytes.readShort();\n    const minActivationAmountNQT = trBytes.readLong().toString();\n\n    let codeLen = (codePages <= 1) ? trBytes.readByte() : trBytes.readShort();\n    if (codeLen === 0 && codePages === 1 && version > 2) {\n        codeLen = 256;\n    }\n    const code = trBytes.readHexString(codeLen);\n\n    let dataLen = (dpages <= 1) ? trBytes.readByte() : trBytes.readShort();\n    if (dataLen === 0 && dpages === 1 && trBytes.length() - trBytes.position() === 256 && version > 2) {\n        // Note: Could not work if there are attachments: message, messageToEncrypt\n        // encryptedMessageData, messageToEncryptToSelf or encryptToSelfMessageData.\n        // The problem is that creationBytes has no size information.\n        // This is not a problem in node because the attachments with flags are stored\n        // in different fields in the database, so the creationBytes size can be calculated.\n        dataLen = 256;\n    }\n    const data = trBytes.readHexString(dataLen);\n\n    const creationBytesLen = trBytes.position() - initialPos;\n    trBytes.position(initialPos);\n    const creationBytes = trBytes.readHexString(creationBytesLen);\n\n    const retObj = {\n        creationBytes,\n        code,\n        data,\n        dpages: dpages.toString(),\n        cspages: cspages.toString(),\n        uspages: uspages.toString(),\n        minActivationAmountNQT\n    };\n    if (retObj.code === '') {\n        delete retObj.code;\n    }\n    if (retObj.data === '') {\n        delete retObj.data;\n    }\n    if (retObj.dpages === '0') {\n        delete retObj.dpages;\n    }\n    if (retObj.cspages === '0') {\n        delete retObj.cspages;\n    }\n    if (retObj.uspages === '0') {\n        delete retObj.uspages;\n    }\n    return retObj;\n}\n\n\nfunction parseMessage(transactionFlags: number, data: any, trBytes: ByteBuffer) {\n    // flag for non-encrypted message\n    const flagBit = 0b1;\n    if ((transactionFlags & flagBit) === 0) {\n        return data;\n    }\n    const attachmentVersion = trBytes.readByte();\n    if (attachmentVersion !== 1) {\n        throw new Error(`Unsupported 'message' flag.`);\n    }\n    const lengthBytes = trBytes.readInt();\n    const messageIsText = (lengthBytes & 0x80000000) !== 0;\n    const messageLength = (lengthBytes & 0x7fffffff);\n    if (messageIsText) {\n        data.message = trBytes.readString(messageLength);\n    } else {\n        data.message = trBytes.readHexString(messageLength);\n    }\n    data.messageIsText = messageIsText ? 'true' : 'false';\n    return data;\n}\n\nfunction parseEncryptedMessage(transactionFlags: number, data: any, trBytes: ByteBuffer) {\n    // flag for encrypted note\n    const flagBit = 0b10;\n    if ((transactionFlags & flagBit) === 0) {\n        return data;\n    }\n    const attachmentVersion = trBytes.readByte();\n    if (attachmentVersion !== 1) {\n        throw new Error(`Unsupported 'EncryptedMessage' flag.`);\n    }\n    const lengthBytes = trBytes.readInt();\n    data.messageToEncryptIsText = (lengthBytes & 0x80000000) ? 'true' : 'false';\n    const messageLength = (lengthBytes & 0x7fffffff);\n\n    data.encryptedMessageData = trBytes.readHexString(messageLength);\n    data.encryptedMessageNonce = trBytes.readHexString(32);\n    return data;\n}\n\nfunction parseRecipientPublicKey(transactionFlags: number, data: any, trBytes: ByteBuffer) {\n    // flag for encrypted note\n    const flagBit = 0b100;\n    if ((transactionFlags & flagBit) === 0) {\n        return data;\n    }\n    const attachmentVersion = trBytes.readByte();\n    if (attachmentVersion !== 1) {\n        throw new Error(`Unsupported 'RecipientPublicKey' flag.`);\n    }\n    data.recipientPublicKey = trBytes.readHexString(32);\n    return data;\n}\n\nfunction parseEncryptToSelfMessage(transactionFlags: number, data: any, trBytes: ByteBuffer) {\n    const flagBit = 0b1000;\n    if ((transactionFlags & flagBit) === 0) {\n        return data;\n    }\n    const attachmentVersion = trBytes.readByte();\n    if (attachmentVersion !== 1) {\n        throw new Error(`Unsupported 'EncryptedMessage' flag.`);\n    }\n    const lengthBytes = trBytes.readInt();\n    data.messageToEncryptToSelfIsText = (lengthBytes & 0x80000000) ? 'true' : 'false';\n    const messageLength = (lengthBytes & 0x7fffffff);\n    data.encryptToSelfMessageData = trBytes.readHexString(messageLength);\n    data.encryptToSelfMessageNonce = trBytes.readHexString(32);\n    return data;\n}\n\n", "/** @ignore */\n/** @internal */\n\nimport {rebuildTransactionPostData} from './rebuildTransactionPostData';\n\n// Type 0 (payment): OK\n// Type 1 (messaging): Missing 'sellAlias', 'buyAlias' (issue)\n// Type 2 (colored coins/assets): OK\n// Type 3 (digital goods): deprecated (return error?)\n// Type 4 (account control): deprecated (return error?)\n// Type 20 (mining): OK\n// Type 21 (advanced payment): Missing 'sendMoneyEscrow', 'escrowSign'\n// Type 22 (automated transactions): OK\nconst methodsToVerify = new Set([\n    'sendMoney', 'sendMoneyMulti', 'sendMoneyMultiSame',\n    'sendMessage', 'setAlias', 'setTLD', 'setAccountInfo',\n    'issueAsset', 'transferAsset', 'transferAssetOwnership', 'placeAskOrder', 'placeBidOrder', 'cancelAskOrder',\n    'mintAsset', 'addAssetTreasuryAccount', 'distributeToAssetHolders', 'cancelBidOrder', 'transferAssetMulti',\n    'setRewardRecipient', 'addCommitment', 'removeCommitment',\n    'sendMoneySubscription', 'subscriptionCancel',\n    'createATProgram'\n]);\n\n/**\n * @param method Signum API name\n * @param parameters object\n * @param response an HttpResponse\n * @throws Error on failure\n * @internal\n */\nexport function verifyTransaction(method: string, parameters: any, response: any) {\n    if (response.broadcasted === true || response.transactionBytes || parameters.transactionBytes) {\n        // Transaction already signed, nothing to do\n        return;\n    }\n\n    if (!methodsToVerify.has(method)) {\n        console.warn(`Deep verification for method '${method}' is not supported yet - transaction accepted without further check`);\n        return;\n    }\n\n    const rebuiltObject = rebuildTransactionPostData(response.unsignedTransactionBytes);\n\n    if (method !== rebuiltObject.requestType) {\n        throw new Error('Verification failed - Node Response does not match transaction parameters (A)');\n    }\n\n\n    let nParameters = 0;\n    // tslint:disable-next-line:forin\n    for (const prop in parameters) {\n        switch (prop) {\n            case 'broadcast':\n                // properties to ignore\n                continue;\n            case 'tld':\n                // tld is sent as name, but returned as id... so we need to skip the value comparison\n                break;\n            case 'recipientPublicKey':\n                if (!rebuiltObject.rebuiltData['recipientPublicKey']) {\n                    continue;\n                }\n            // tslint:disable-next-line:no-switch-case-fall-through\n            case 'referencedTransactionFullHash':\n            case 'senderPublicKey':\n            case 'data':\n            case 'code':\n            case 'encryptedMessageData':\n            case 'encryptedMessageNonce':\n            case 'encryptToSelfMessageData':\n            case 'encryptToSelfMessageNonce':\n\n                // case insensitive properties\n                if (String(parameters[prop]).toLocaleLowerCase() !== String(rebuiltObject.rebuiltData[prop]).toLocaleLowerCase()) {\n                    throw new Error(`Verification failed - Node Response does not match transaction parameter '${prop}'.`);\n                }\n                break;\n            case 'message':\n                if (Boolean(parameters['messageIsText']) && String(parameters['message']).toLocaleLowerCase() !== String(rebuiltObject.rebuiltData['message']).toLocaleLowerCase()) {\n                    throw new Error(`Verification failed - Node Response does not match transaction parameter 'message'.`);\n                }\n                break;\n            default:\n                // case sensitive properties\n                if (String(parameters[prop]) !== String(rebuiltObject.rebuiltData[prop])) {\n                    throw new Error(`Verification failed - Node Response does not match transaction parameter '${prop}'.`);\n                }\n        }\n        if (parameters[prop] !== undefined) {\n            nParameters++;\n        }\n    }\n    let nRebuilt = 0;\n    // tslint:disable-next-line:forin\n    for (const _prop in rebuiltObject.rebuiltData) {\n        nRebuilt++;\n    }\n    if (nParameters !== nRebuilt) {\n        throw new Error('Verification failed - Node Response has different number of parameters');\n    }\n}\n", "export * from './verifyTransaction';\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2023 Signum Network\n */\n\nimport {Http, HttpError, HttpClientFactory, HttpResponse} from '@signumjs/http';\nimport {asyncRetry} from '@signumjs/util';\nimport {ChainServiceSettings} from './chainServiceSettings';\nimport {DefaultApiEndpoint} from '../constants';\nimport {verifyTransaction} from '../internal/verifyTransaction';\n\n/**\n * The send arguments for {@link ChainService.send}\n *\n * @category args\n */\nexport interface SendArgs {\n\n    /**\n     * Setting this option to `true`, skips the additional security check, i.e. the verification of the\n     * unsigned transaction bytes, which detects tampered node responses. By default, the option is `false`.\n     * Usually, you won't use this option, but can be useful when a method cannot be verified,\n     * because the verification is not implemented yet.\n     *\n     */\n    skipAdditionalSecurityCheck?: boolean;\n\n    [key: string]: any;\n}\n\n// Old API is inconsistent in its error responses\ninterface ApiError {\n    readonly errorCode?: number;\n    readonly errorDescription?: string;\n    readonly error?: string;\n}\n\nclass SettingsImpl implements ChainServiceSettings {\n    constructor(settings: ChainServiceSettings) {\n        this.apiRootUrl = settings.apiRootUrl || DefaultApiEndpoint;\n        this.nodeHost = settings.nodeHost;\n        this.httpClient = settings.httpClient || HttpClientFactory.createHttpClient(settings.nodeHost, settings.httpClientOptions);\n        this.reliableNodeHosts = settings.reliableNodeHosts || [];\n    }\n\n    readonly apiRootUrl: string;\n    readonly httpClient: Http;\n    readonly nodeHost: string;\n    readonly reliableNodeHosts: string[];\n}\n\n\ninterface HostSelectionOptions {\n    reconfigure?: boolean;\n    checkMethod?: string;\n    timeout?: number;\n}\n\n/**\n * Generic Chain Service class.\n *\n * This class can be used to call the chain api directly, in case a function is\n * not supported yet by SignumJS. Usually, you won't need to do it.\n *\n *\n *\n *\n */\nexport class ChainService {\n    /**\n     * Creates Service instance\n     * @param settings The settings for the service\n     */\n    constructor(settings: ChainServiceSettings) {\n\n        this.settings = new SettingsImpl(settings);\n        const {apiRootUrl} = this.settings;\n        if (apiRootUrl) {\n            this._relPath = apiRootUrl.endsWith('/') ? apiRootUrl.substr(0, apiRootUrl.length - 1) : apiRootUrl;\n        }\n    }\n\n    public settings: ChainServiceSettings;\n    private readonly _relPath: string = DefaultApiEndpoint;\n\n    private static throwAsHttpError(url: string, apiError: ApiError): void {\n        const errorCode = apiError.errorCode && ` (Code: ${apiError.errorCode})` || '';\n        throw new HttpError(url,\n            400,\n            `${apiError.errorDescription || apiError.error}${errorCode}`,\n            apiError);\n    }\n\n\n    /**\n     * Mounts an API conformant endpoint of format `<host>?requestType=getBlock&height=123`\n     *\n     * @see https://docs.signum.network/signum/node-http-api\n     *\n     * @param {string} method The method name for `requestType`\n     * @param {any} data A JSON object which will be mapped to url params\n     * @return {string} The mounted url (without host)\n     */\n    public toApiEndpoint(method: string, data: object = {}): string {\n        const request = `${this._relPath}?requestType=${method}`;\n        const params = Object.keys(data)\n            .filter(k => data[k] !== undefined && k !== 'skipAdditionalSecurityCheck')\n            .map(k => `${k}=${encodeURIComponent(data[k])}`)\n            .join('&');\n        return params ? `${request}&${params}` : request;\n    }\n\n\n    /**\n     * Requests a query to the configured chain node\n     * @param {string} method The method according https://europe.signum.network/api-doc/\n     * @param {any} args A JSON object which will be mapped to url params\n     * @param {any} options The optional request configuration for the passed Http client\n     * (default is [AxiosRequestConfig](https://axios-http.com/docs/req_config) )\n     * @return {Promise<T>} The response data of success\n     * @throws HttpError in case of failure\n     */\n    public async query<T>(method: string, args: any = {}, options?: any): Promise<T> {\n        const endpoint = this.toApiEndpoint(method, args);\n\n        const {response} = await this.faultTolerantRequest(() => this.settings.httpClient.get(endpoint, options));\n\n        if (response.errorCode || response.error || response.errorDescription) {\n            ChainService.throwAsHttpError(endpoint, response);\n        }\n        return response;\n\n    }\n\n    /**\n     * Send data to chain node\n     * @param {string} method The method according https://europe.signum.network/api-doc/.\n     *        Note that there are only a few POST methods\n     * @param {SendArgs} args A JSON object which will be mapped to url params\n     * @param {any} body An object with key value pairs to submit as post body\n     * @param  {any} options The optional request configuration for the passed Http client\n     * (default is [AxiosRequestConfig](https://axios-http.com/docs/req_config) )\n     * @return {Promise<T>} The response data of success\n     * @throws HttpError in case of failure\n     */\n    public async send<T>(method: string, args: SendArgs = {}, body?: object, options?: any): Promise<T> {\n        const endpoint = this.toApiEndpoint(method, args);\n\n        const {response} = await this.faultTolerantRequest(() => this.settings.httpClient.post(endpoint, body, options));\n\n        if (response.errorCode || response.error || response.errorDescription) {\n            ChainService.throwAsHttpError(endpoint, response);\n        }\n\n\n        if (!args.skipAdditionalSecurityCheck) {\n            verifyTransaction(method, args, response);\n        }\n\n        return response;\n    }\n\n    private async faultTolerantRequest(requestFn: () => Promise<HttpResponse>): Promise<HttpResponse> {\n        const onFailureAsync = async (e, retrialCount): Promise<boolean> => {\n            const shouldRetry = this.settings.reliableNodeHosts.length && retrialCount < this.settings.reliableNodeHosts.length;\n            if (shouldRetry) {\n                await this.selectBestHost(true);\n            }\n            return shouldRetry;\n        };\n\n        return asyncRetry({\n            asyncFn: requestFn,\n            onFailureAsync\n        });\n    }\n\n    /**\n     * Selects the fastest responding host from the configured reliable node hosts.\n     * @param reconfigure An optional flag to set automatic reconfiguration. Default is `false`\n     * Attention: Reconfiguration works only, if you use the default http client. Otherwise, you need to reconfigure manually!\n     * @param checkMethod The optional API method to be called. This applies only for GET methods. Default is `getBlockchainStatus`\n     * @param timeout The optional amount of time in milliseconds to check. Default is 10_000\n     * @returns Promise resolving to the selected host\n     * @throws Error if no reliable hosts are configured or if all hosts fail\n     */\n    public async selectBestHost(\n                                      reconfigure = false,\n                                      timeout = 10_000,\n                                      checkMethod = 'getBlockchainStatus'\n                                  ): Promise<string> {\n        const {reliableNodeHosts} = this.settings;\n\n        if (!reliableNodeHosts.length) {\n            throw new Error('No reliable node hosts configured');\n        }\n\n        const checkEndpoint = this.toApiEndpoint(checkMethod);\n\n        // Create a function to check a single host with timeout\n        const checkHost = async (host: string): Promise<{ host: string; responseTime: number }> => {\n            const start = Date.now();\n            const absoluteUrl = `${host}${checkEndpoint}`;\n\n            try {\n                await Promise.race([\n                    this.settings.httpClient.get(absoluteUrl),\n                    new Promise((_, reject) =>\n                        setTimeout(() => reject(new Error('Timeout')), timeout)\n                    )\n                ]);\n\n                return {\n                    host,\n                    responseTime: Date.now() - start\n                };\n            } catch (error) {\n                throw error;\n            }\n        };\n\n        try {\n            // Check all hosts concurrently and get the fastest responding one\n            const results = await Promise.allSettled(\n                reliableNodeHosts.map(host => checkHost(host))\n            );\n\n            const successfulHosts = results\n                .filter((result): result is PromiseFulfilledResult<{ host: string; responseTime: number }> =>\n                    result.status === 'fulfilled'\n                )\n                .map(result => result.value)\n                .sort((a, b) => a.responseTime - b.responseTime);\n\n            if (!successfulHosts.length) {\n                throw new Error('All reliable node hosts failed to respond');\n            }\n\n            const bestHost = successfulHosts[0].host;\n\n            if (reconfigure) {\n                this.settings = new SettingsImpl({\n                    ...this.settings,\n                    httpClient: HttpClientFactory.createHttpClient(bestHost, this.settings.httpClientOptions),\n                    nodeHost: bestHost,\n                });\n            }\n\n            return bestHost;\n\n        } catch (error: any) {\n            throw new Error(`Failed to select best host: ${error.message}`);\n        }\n    }\n}\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\nimport {convertHexEndianess} from '@signumjs/util';\nimport {Contract} from './typings/contract';\n\n/**\n * Extracts a variables value as hexadecimal string from a contract's machine data\n *\n * This is a generic function to extract arbitrary data from a contract. It's recommended to use the {@link ContractDataView} class instead\n *\n * @param contract The contract\n * @param position The variables position\n * @param length The length of data to be extracted\n * @return The value as hexadecimal string (already considering endianness)\n *\n */\nexport function getContractDatablock(contract: Contract, position: number, length: number = 16): string {\n\n    const startIndex = position * 16;\n    const requiredSize = startIndex + length;\n    if (requiredSize > contract.machineData.length) {\n        throw new Error(`Insufficient length for variable at position: ${startIndex} (and given length: ${length})`);\n    }\n\n    if (requiredSize % 2 !== 0) {\n        throw new Error(`Invalid position: ${startIndex} (or given length: ${length}) - must be at least multiple of 2`);\n    }\n\n    return convertHexEndianess(contract.machineData.substr(startIndex, length));\n}\n", "/**\n * Copyright (c) 2022 Signum Network\n */\n\nimport {ContractData} from './typings';\nimport {convertHexEndianess, convertHexStringToDecString, convertStringToHexString} from '@signumjs/util';\n\n/**\n * Converts a short string into {@link ContractData} to be used as argument for smart contract calls, i.e. {@link generateMethodCall}\n *\n * @param {string} shortString A short alphanumerical string of at maximum 8 characters (bytes) length.\n * @return A compatible numerical representation which can be used as string in a smart contract.\n * \n */\nexport function convertShortStringToContractData(shortString: string): ContractData {\n    const MaxChars = 8;\n    if (shortString.length > MaxChars) {\n        throw new Error(`At maximum ${MaxChars} bytes/characters are supported`);\n    }\n    return convertHexStringToDecString(convertHexEndianess(convertStringToHexString(shortString)));\n}\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\n/**\n * @internal\n * @ignore\n *\n * Size of Code Pages in bytes\n *\n */\nexport const CodePageSize = 256;\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\nimport {CodePageSize} from './constants';\n\n/**\n * Counts the code pages for given machine code\n *\n * @param hexCode The contracts code in hex form\n * @return The number of code pages for the passed code\n *\n * \n */\nexport function countCodePages(hexCode: string ): number {\n    return Math.ceil((hexCode.length / 2) / CodePageSize);\n}\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\nimport {convertHexStringToDecString, convertHexStringToString} from '@signumjs/util';\nimport {Contract} from './typings/contract';\nimport {getContractDatablock} from './getContractDatablock';\nimport {countCodePages} from './countCodePages';\n\n/**\n * Helper class for contracts\n *\n * A contract owns additional data, which is split in 8 byte blocks.\n * The content is encoded in hexadecimal representation and big endianness.\n * This class facilitates access to these data. The term \"index\" is used to address\n * these 8 byte blocks\n *\n * @example\n * A contract may have the following data\n *\n * ```\n * 010000000000000000e1f5050000000000000000000000003eba832d8f2c82fe0048e80100000000\n * ```\n *\n * Then it can be split into five data sections each 8 bytes (16 chars in hex) and indexed like shown\n *\n * ```\n * 0100000000000000 00e1f50500000000 0000000000000000 3eba832d8f2c82fe 0048e80100000000\n *\n * |------ 0 ------|------ 1 -------|------ 2 -------|------ 3 -------|------ 4 ------| = Indices\n *\n * ```\n *\n * @example Usage\n *\n * ```ts\n * const client = LedgerClientFactory.createClient({nodehost: \"https://europe.signum.network\"});\n * const nft = await client.contracts.getContract(\"9482276719950823724\");\n * const dataView - new ContractDataView(nft);\n * const ownerId = dataView.getVariableAsDecimal(0);\n * const currentPrice = Amount.fromPlanck(dataview.getVariableAsDecimal(2));\n * ```\n *\n */\nexport class ContractDataView {\n\n    /**\n     * The length of a contracts variable (considering Hex notation)\n     */\n    public static VariableLength = 16;\n\n    constructor(private readonly _contract: Contract) {\n    }\n\n    /**\n     * @return Get the contract\n     */\n    getContract(): Contract {\n        return this._contract;\n    }\n\n    /**\n     * @return The number of code pages\n     */\n    countCodePages(): number {\n        return countCodePages(this._contract.machineCode);\n    }\n\n    /**\n     * Get a variable as string\n     * @param index The index of variable (starting at 0)\n     * @return The data as string (Utf-8)\n     */\n    public getVariableAsString(index: number): string {\n        const hexData = this.getHexDataAt(index, ContractDataView.VariableLength);\n        return convertHexStringToString(hexData.replace(/00/g, ''));\n    }\n\n    /**\n     * Get multiple data blocks as string\n     * @param index The index of variable (starting at 0)\n     * @param count Number of blocks\n     * @return The data as string (Utf-8)\n     */\n    public getDataBlocksAsString(index: number, count?: number): string {\n        const hexData = this.getHexDataAt(index, count * ContractDataView.VariableLength);\n        return convertHexStringToString(hexData.replace(/00/g, ''));\n    }\n\n    /**\n     * Get a variable as decimal (string)\n     * @param index The index of variable (starting at 0)\n     * @return The data as a decimal string sequence\n     */\n    public getVariableAsDecimal(index: number): string {\n        return convertHexStringToDecString(this.getVariable(index));\n    }\n\n    /**\n     * Get a variable at given position/index\n     * @param index The index of variable (starting at 0)\n     * @return The data as hexadecimal string (in little endianness)\n     */\n    public getVariable(index: number): string {\n        return this.getHexDataAt(index, ContractDataView.VariableLength);\n    }\n\n    /**\n     * Get a hexadecimal data block of arbitrary length at given position/index\n     * @param index The index of variable (starting at 0)\n     * @param length The length of the data block (must be a multiple of 2)\n     * @return The data as hexadecimal string (in little endianness)\n     */\n    public getHexDataAt(index: number, length?: number): string {\n        const l = length ? length : this._contract.machineData.length - ContractDataView.VariableLength * index;\n        return getContractDatablock(this._contract, index, l);\n    }\n\n}\n", "/**\n * Copyright (c) 2022 Signum Network\n */\n\n/**\n * Counts the data pages for given initialization data stack\n *\n * @param dataHex The contracts initial data stack in hex form\n * @return The number of data pages for the passed data\n *\n * \n */\nexport function countDataPages(dataHex: string ): number {\n    return Math.max(Math.ceil((dataHex.length / 16) / 32), 1);\n}\n", "/**\n * Original Work Copyright (c) 2019 Burst Apps Team\n * Modified Work Copyright (c) 2022 Signum Network\n */\n\nimport {Amount, FeeQuantPlanck} from '@signumjs/util';\nimport {countCodePages} from './countCodePages';\nimport {countDataPages} from './countDataPages';\nimport {CalculateMinimumCreationFeeArgs} from './typings';\n\n/**\n * Calculates the minimum creation fee of the contract\n *\n * @param args The arguments\n * @return The minimum fee\n * \n */\nexport function calculateMinimumCreationFee(args: CalculateMinimumCreationFeeArgs): Amount {\n\n    const {dataHex, codeHex} = args;\n\n    const codePagesCount = codeHex ? countCodePages(codeHex) : 0;\n    const dataPagesCount = dataHex?.length ? countDataPages(dataHex) : 1;\n\n    return Amount.fromPlanck(FeeQuantPlanck * 10 * (2 + codePagesCount + dataPagesCount));\n}\n", "import {ContractData} from '../typings/contractData';\n\n/**\n * @internal\n * @param value\n */\nexport const convertContractData = (value: ContractData): string => {\n    if (typeof (value) === 'boolean') {\n        return value ? '1' : '0';\n    }\n    if (typeof (value) === 'number') {\n        return `${value}`;\n    }\n\n    return value;\n};\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2022 Signum Network\n *\n * Credits to AJ ONeal for the two-complements stuff\n * https://coolaj86.com/articles/convert-decimal-to-hex-with-js-bigints/\n */\n\nimport {convertDecStringToHexString, convertHexEndianess} from '@signumjs/util';\nimport {GenerateMethodCallArgs} from './typings/args';\nimport {convertContractData} from './internal/convertContractData';\n\n/**\n * Generates a method call message of a contracts public method. The message can be sent using for example\n * {@link core.MessageApi.sendMessage} with `messageIsText = false` or {@link core.ContractApi.callContractMethod}]\n * @param args The argument object\n * @return A hex string that can be used as contracts transaction message\n */\nexport const generateMethodCall = (args: GenerateMethodCallArgs): string => {\n    const argArray = args.methodArgs ? [args.methodId, ...args.methodArgs] : [args.methodId];\n    return argArray\n        .map(convertContractData)\n        .map(long => convertDecStringToHexString(long, 16))\n        .map(convertHexEndianess)\n        .join('');\n};\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n *\n * Credits to AJ ONeal for the two-complements stuff\n * https://coolaj86.com/articles/convert-decimal-to-hex-with-js-bigints/\n */\n\nimport {convertDecStringToHexString, convertHexEndianess} from '@signumjs/util';\nimport {ContractData} from './typings/contractData';\nimport {convertContractData} from './internal/convertContractData';\nimport {countDataPages} from './countDataPages';\n\ninterface DataStack {\n    dataHex: string;\n    dataPageCount: number;\n}\n\n/**\n * Generates a data stack message of a contracts, which can be used as initialization. The message can be used on a contract's creation with\n * {@link core.ContractApi.publishContract} or {@link core.ContractApi.publishContractByReference}\n * @param data A list of variables forming the data stack\n * @return The data stack\n * \n */\nexport const generateDataStack = (data: ContractData[]): DataStack => {\n\n    const dataHex = data\n        .map(convertContractData)\n        .map(long => convertDecStringToHexString(long, 16))\n        .map(convertHexEndianess)\n        .join('');\n\n    const dataPageCount = countDataPages(dataHex);\n\n    return {\n        dataHex,\n        dataPageCount\n    };\n};\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\nexport * from './generateMethodCallArgs';\nexport * from './calculateMinimumCreationFeeArgs';\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=contractData.js.map", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified work (c) 2022 Signum Network\n */\n\nexport * from './args';\nexport * from './contract';\nexport * from './contractData';\n", "/**\n * The Contracts package provides functions and messages\n * to interact with Signum Smart Contracts, i.e. generate method calls\n * and inspect contract data\n *\n * @module contracts\n * */\n\n\nexport * from './getContractDatablock';\nexport * from './convertShortStringToContractData';\nexport * from './ContractDataView';\nexport * from './constants';\nexport * from './countCodePages';\nexport * from './countDataPages';\nexport * from './calculateMinimumCreationFee';\nexport * from './generateMethodCall';\nexport * from './generateDataStack';\nexport * from './typings';\n", "/**\n * This is the main package, and almost all you may need to interact with\n * the Signum Node API\n *\n * Get started with {@link composeApi} or {@link LedgerClientFactory}\n *\n * @module core\n * */\n\n// order alphabetically, please :)\nexport * from './address';\nexport * from './api';\nexport * from './attachment';\nexport * from './constants';\nexport * from './ledgerClient';\nexport * from './service';\nexport * from './transaction';\nexport * from './typings/account';\nexport * from './typings/alias';\nexport * from './typings/aliasList';\nexport * from './typings/api';\nexport * from './typings/args';\nexport * from './typings/asset';\nexport * from './typings/assetList';\nexport * from './typings/assetOrder';\nexport * from './typings/assetAskOrderList';\nexport * from './typings/assetBidOrderList';\nexport * from './typings/assetTrade';\nexport * from './typings/assetTradeList';\nexport * from './typings/assetTransfer';\nexport * from './typings/assetTransferList';\nexport * from './typings/assetAccount';\nexport * from './typings/assetAccountList';\nexport * from './typings/assetBalance';\nexport * from './typings/attachment';\nexport * from './typings/attachmentVersionIdentifier';\nexport * from './typings/balance';\nexport * from './typings/block';\nexport * from './typings/blockId';\nexport * from './typings/blockIdList';\nexport * from './typings/blockList';\nexport * from './typings/blockchainStatus';\nexport * from './typings/chainTimestamp';\nexport * from './typings/contractMapValueList';\nexport * from './typings/distributionAmount';\nexport * from './typings/miningInfo';\nexport * from './typings/multioutRecipientAmount';\nexport * from './typings/multioutAssetQuantities';\nexport * from './typings/networkInfo';\nexport * from './typings/peer';\nexport * from './typings/peerAddressList';\nexport * from './typings/rewardRecipient';\nexport * from './typings/serverStatus';\nexport * from './typings/subscription';\nexport * from './typings/subscriptionList';\nexport * from './typings/suggestedFees';\nexport * from './typings/transaction';\nexport * from './typings/transactionId';\nexport * from './typings/transactionList';\nexport * from './typings/unsignedTransaction';\nexport * from './typings/unconfirmedTransactionList';\nexport * from './typings/unconfirmedAssetBalance';\nexport * from './typings/tradeHistory';\nexport * from './typings/distributionFee';\n", "/**\n * Original work Copyright (c) 2021 Burst Apps Team\n * Modified work Copyright (c) 2021 Signum Network\n */\nimport {getAccountIdFromPublicKey} from '@signumjs/crypto';\nimport {\n    convertBase36StringToHexString,\n    convertHexStringToBase36String,\n} from '@signumjs/util';\nimport {ensureReedSolomonAddress} from './ensureReedSolomonAddress';\nimport {tokenizeReedSolomonAddress} from './tokenizeReedSolomonAddress';\nimport {convertReedSolomonAddressToNumericId} from './convertReedSolomonAddressToNumericId';\nimport {convertNumericIdToReedSolomonAddress} from './convertNumericIdToReedSolomonAddress';\nimport {AddressPrefix} from '../constants';\n\nfunction ensureValidPublicKey(publicKey: string): void {\n    if (!(publicKey && /^[a-fA-F0-9]{64}/.test(publicKey))) {\n        throw new Error('Invalid Public Key Format');\n    }\n}\n\n/**\n * A Value Object to facilitate Address conversions.\n *\n *\n */\nexport class Address {\n\n    private _publicKey: string;\n    private _numericId: string;\n    private _rs: string;\n\n    private constructor(args: { publicKey?: string, prefix?: string, address?: string }) {\n        if (args.publicKey) {\n            this.constructFromPublicKey(args.publicKey, args.prefix);\n        } else if (args.address) {\n            this.constructFromAddress(args.address);\n        } else {\n            throw new Error('Invalid arguments');\n        }\n    }\n\n    /**\n     * Tries to create the address from whatever input is given\n     * @param anyValidAddress Any valid address, may it be Reed Solomon address, numeric ID, or public key\n     * @param prefix An optional prefix, which can be used to substitute the default {@link AddressPrefix.MainNet}\n     * @return The new address, if the input was valid\n     * @throws when no valid format\n     */\n    public static create(anyValidAddress: string, prefix: string = AddressPrefix.MainNet): Address {\n        try {\n            tokenizeReedSolomonAddress(anyValidAddress);\n            return Address.fromReedSolomonAddress(anyValidAddress);\n        // @ts-ignore\n        } catch (e:any) {\n            try {\n                ensureValidPublicKey(anyValidAddress);\n                return Address.fromPublicKey(anyValidAddress, prefix);\n            } catch (innerError) {\n                return Address.fromNumericId(anyValidAddress, prefix);\n            }\n        }\n    }\n\n    public static fromNumericId(numericId: string, prefix: string = AddressPrefix.MainNet): Address {\n        const address = convertNumericIdToReedSolomonAddress(numericId, prefix);\n        return new Address({address});\n    }\n\n    /**\n     * Creates an Account Address object from public key\n     * @param publicKey The public key of that address (in hex format)\n     * @param prefix The Reed-Solomon Address prefix\n     */\n    public static fromPublicKey(publicKey: string, prefix: string = AddressPrefix.MainNet): Address {\n        return new Address({publicKey, prefix});\n    }\n\n    /**\n     * Creates an Account Address object from extended Reed-Solomon address\n     * @param address The Reed-Solomon address in simple or extended format (with base36 suffix)\n     * @throws Error if the passed address is invalid\n     */\n    public static fromReedSolomonAddress(address: string): Address {\n\n        ensureReedSolomonAddress(address);\n\n        const {extension, prefix} = tokenizeReedSolomonAddress(address);\n\n        if (extension) {\n            const publicKey = convertBase36StringToHexString(extension).toLowerCase();\n\n            if (convertReedSolomonAddressToNumericId(address) !== getAccountIdFromPublicKey(publicKey)) {\n                throw Error('Address and Public Key do not match');\n            }\n            return new Address({publicKey, prefix});\n        }\n\n        return new Address({address});\n    }\n\n    /**\n     * @return Gets public key\n     */\n    getPublicKey(): string {\n        return this._publicKey.toLowerCase();\n    }\n\n    /**\n     * @return Gets numeric Account Id\n     */\n    getNumericId(): string {\n        return this._numericId;\n    }\n\n    /**\n     * Gets as Reed Solomon representation\n     * @param withPrefix If false, the address without prefix will be returned. Default: true\n     * @return Reed Solomon Address Format\n     * @see {@link Address.getReedSolomonAddressExtended}\n     */\n    getReedSolomonAddress(withPrefix = true): string {\n        return withPrefix ? this._rs : this._rs.substr(this._rs.indexOf('-') + 1);\n    }\n\n    /**\n     * Gets as extended Reed Solomon representation carrying the public key as suffix in base36 encoding\n     *\n     * This method requires that the address was created from a public key or extended address.\n     *\n     * @param withPrefix If false, the address without prefix will be returned. Default: true\n     * @return Extended Reed Solomon Address Format\n     * @throws if no public key is available\n     * @see {@link Address.getReedSolomonAddress}\n     */\n    getReedSolomonAddressExtended(withPrefix = true): string {\n        if (!this._publicKey) {\n            throw new Error('No public key available');\n        }\n        return `${this.getReedSolomonAddress(withPrefix)}-${convertHexStringToBase36String(this._publicKey)}`.toUpperCase();\n    }\n\n    /**\n     * Checks for equality\n     * @param address The other address to be compared\n     * @return true if equal, otherwise false\n     */\n    public equals(address: Address): boolean {\n        return this._numericId === address._numericId;\n    }\n\n    private constructFromPublicKey(publicKey: string, prefix: string): void {\n        ensureValidPublicKey(publicKey);\n        this._publicKey = publicKey.toLowerCase();\n        this._numericId = getAccountIdFromPublicKey(publicKey);\n        this._rs = convertNumericIdToReedSolomonAddress(this._numericId, prefix);\n    }\n\n    private constructFromAddress(address: string): void {\n        this._publicKey = '';\n        this._rs = address;\n        this._numericId = convertReedSolomonAddressToNumericId(address);\n    }\n\n}\n", "/**\n * Original work Copyright (c) 2021 Signum Network\n */\n\ninterface AddressParts {\n    prefix: string;\n    rs: string;\n    extension: string;\n}\n\n/**\n * @internal\n * Tokenizes a Reed-Solomon address\n * @param address The address in Reed-Solomon format\n * @return object with prefix, address and eventual extension\n * @throws Error in case of invalid format\n *\n */\nexport const tokenizeReedSolomonAddress = (address: string): AddressParts => {\n    const tokens = address.split('-');\n\n    const isExtended = tokens.length === 6;\n\n    if (tokens.length < 5 || tokens.length > 6) {\n        throw new Error(`Invalid Reed-Solomon Address Format: ${address}`);\n    }\n\n    const prefix = tokens[0];\n    const extension = isExtended ? tokens[5] : '';\n    const rs = `${tokens[1]}-${tokens[2]}-${tokens[3]}-${tokens[4]}`;\n\n    return {\n        prefix,\n        rs,\n        extension\n    };\n\n};\n", "/** @ignore */\n/** @internal */\n/**  */\n\n// tslint:disable:max-line-length\n// tslint:disable:no-bitwise\n/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2021 Signum Network\n */\nexport const initialCodeword = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const gexp: number[] = [1, 2, 4, 8, 16, 5, 10, 20, 13, 26, 17, 7, 14, 28, 29, 31, 27, 19, 3, 6, 12, 24, 21, 15, 30, 25, 23, 11, 22, 9, 18, 1];\nexport const glog: number[] = [0, 0, 1, 18, 2, 5, 19, 11, 3, 29, 6, 27, 20, 8, 12, 23, 4, 10, 30, 17, 7, 22, 28, 26, 21, 25, 9, 16, 13, 14, 24, 15];\nexport const cwmap: number[] = [3, 2, 1, 0, 7, 6, 5, 4, 13, 14, 15, 16, 12, 8, 9, 10, 11];\nexport const alphabet: string[] = '23456789ABCDEFGHJKLMNPQRSTUVWXYZ'.split('');\nexport const base32Length = 13;\n\nconst ginv = (a) => {\n    return gexp[31 - glog[a]];\n};\n\nexport const gmult = (a, b) => {\n    if (a === 0 || b === 0) {\n        return 0;\n    }\n\n    const idx = (glog[a] + glog[b]) % 31;\n\n    return gexp[idx];\n};\n\n\nexport const isDeeplyValidAddress = (address: string): boolean => {\n\n    const codeword = initialCodeword.slice();\n    let codewordLength = 0;\n\n    for (let i = 0; i < address.length; i++) {\n        const pos = alphabet.indexOf(address.charAt(i));\n\n        if (pos <= -1 || pos > alphabet.length) {\n            continue;\n        }\n\n        if (codewordLength > 16) {\n            return false;\n        }\n\n        const codeworkIndex = cwmap[codewordLength];\n        codeword[codeworkIndex] = pos;\n        codewordLength++;\n    }\n\n    if (codewordLength !== 17) {\n        return false;\n    }\n\n    let sum = 0;\n\n    for (let i = 1; i < 5; i++) {\n        let t = 0;\n\n        for (let j = 0; j < 31; j++) {\n            if (j > 12 && j < 27) {\n                continue;\n            }\n\n            let pos = j;\n            if (j > 26) {\n                pos -= 14;\n            }\n\n            t ^= gmult(codeword[pos], gexp[(i * j) % 31]);\n        }\n\n        sum |= t;\n    }\n\n    return (sum === 0);\n};\n", "// tslint:disable:no-bitwise\n/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2021 Signum Network\n */\n\nimport {tokenizeReedSolomonAddress} from './tokenizeReedSolomonAddress';\nimport {isDeeplyValidAddress} from './internal';\n\n/**\n * @internal\n * Ensures a valid Reed Solomon address format, like <Prefix>-XXXX-XXXX-XXXX-XXXXX\n * @param {string} address The address string\n * @throws if is not a valid address\n *\n */\nexport const ensureReedSolomonAddress = (address: string): void => {\n    const tokens = tokenizeReedSolomonAddress(address);\n    if (!isDeeplyValidAddress(tokens.rs)) {\n        throw new Error(`Invalid Reed-Solomon Address: ${address}`);\n    }\n};\n\n\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2021 Signum Network\n */\n\nimport {base32Length, cwmap, alphabet, initialCodeword} from './internal';\nimport {ensureReedSolomonAddress} from './ensureReedSolomonAddress';\nimport {tokenizeReedSolomonAddress} from './tokenizeReedSolomonAddress';\n\n/**\n * @internal\n * Converts <Prefix>-XXXX-XXXX-XXXX-XXXXX into numeric Id\n * @param address The Reed-Solomon address\n * @return The numeric id, or undefined if address is invalid\n * \n */\nexport const convertReedSolomonAddressToNumericId = (address: string): string => {\n\n    ensureReedSolomonAddress(address);\n    const {rs} = tokenizeReedSolomonAddress(address);\n\n    const codeword = initialCodeword.slice();\n    let codewordLength = 0;\n\n    for (let i = 0; i < rs.length; i++) {\n        const pos = alphabet.indexOf(rs.charAt(i));\n\n        if (pos <= -1 || pos > alphabet.length) {\n            continue;\n        }\n\n        if (codewordLength > 16) {\n            throw new Error('Invalid codeword length');\n        }\n\n        const codeworkIndex = cwmap[codewordLength];\n        codeword[codeworkIndex] = pos;\n        codewordLength++;\n    }\n\n    let length = base32Length;\n    const cypherString32 = [];\n    for (let i = 0; i < length; i++) {\n        cypherString32[i] = codeword[length - i - 1];\n    }\n\n    let out = '',\n        newLength,\n        digit10 = 0;\n    do { // base 32 to base 10 conversion\n        newLength = 0;\n        digit10 = 0;\n\n        for (let i = 0; i < length; i++) {\n            digit10 = digit10 * 32 + cypherString32[i];\n\n            if (digit10 >= 10) {\n                cypherString32[newLength] = Math.floor(digit10 / 10);\n                digit10 %= 10;\n                newLength += 1;\n            } else if (newLength > 0) {\n                cypherString32[newLength] = 0;\n                newLength += 1;\n            }\n        }\n        length = newLength;\n        out += digit10;\n    } while (length > 0);\n\n    return out.split('').reverse().join('');\n};\n", "// tslint:disable:no-bitwise\n\n/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2021 Signum Network\n */\n\nimport {initialCodeword, base32Length, gmult, alphabet, cwmap} from './internal';\n\n/**\n * @internal\n * Encode a numeric id into Reed-Solomon address <Prefix>-XXXX-XXXX-XXXX-XXXXX\n * @param numericId The numeric Id\n * @param prefix The prefix for the address\n * @return the Reed-Solomon address encoding, or undefined if passed null, undefined\n *\n */\nexport const convertNumericIdToReedSolomonAddress = (numericId: string, prefix: string): string => {\n\n    if (!(numericId && prefix)) {\n        throw new Error('Invalid arguments');\n    }\n\n    if (!/^\\d+$/.test(numericId)) {\n        throw new Error(`Invalid numeric id: ${numericId}`);\n    }\n\n    const plainString10 = [],\n        codeword = initialCodeword.slice();\n    let pos = 0;\n\n    let length = numericId.length;\n\n    for (let i = 0; i < length; i++) {\n        plainString10[i] = numericId.charCodeAt(i) - '0'.charCodeAt(0);\n    }\n\n    let digit32 = 0,\n        newLength = 0;\n    do {\n        digit32 = 0;\n        newLength = 0;\n        for (let i = 0; i < length; i++) {\n            digit32 = digit32 * 10 + plainString10[i];\n            if (digit32 >= 32) {\n                plainString10[newLength] = digit32 >> 5;\n                digit32 &= 31;\n                newLength++;\n            } else if (newLength > 0) {\n                plainString10[newLength] = 0;\n                newLength++;\n            }\n        }\n\n        length = newLength;\n        codeword[pos] = digit32;\n        pos++;\n    }\n    while (length > 0);\n\n    const p = [0, 0, 0, 0];\n\n    for (let i = base32Length - 1; i >= 0; i--) {\n        const fb = codeword[i] ^ p[3];\n\n        p[3] = p[2] ^ gmult(30, fb);\n        p[2] = p[1] ^ gmult(6, fb);\n        p[1] = p[0] ^ gmult(9, fb);\n        p[0] = gmult(17, fb);\n    }\n\n    codeword[13] = p[0];\n    codeword[14] = p[1];\n    codeword[15] = p[2];\n    codeword[16] = p[3];\n\n    let out = prefix + '-';\n\n    for (let i = 0; i < 17; i++) {\n        out += alphabet[codeword[cwmap[i]]];\n\n        if ((i & 3) === 3 && i < 13) {\n            out += '-';\n        }\n    }\n\n    return out;\n};\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\nimport {ChainService} from '../service';\nimport {\n    Api,\n    AccountApi,\n    AliasApi,\n    AssetApi,\n    BlockApi,\n    ContractApi,\n    MessageApi,\n    NetworkApi,\n    TransactionApi,\n} from '../typings/api';\n\nclass ApiImpl implements Api {\n\n    constructor(readonly service: ChainService) {}\n\n    alias: AliasApi;\n    account: AccountApi;\n    asset: AssetApi;\n    block: BlockApi;\n    message: MessageApi;\n    network: NetworkApi;\n    transaction: TransactionApi;\n    contract: ContractApi;\n}\n\n/**\n * The API composer mounts the API for given service and selected methods\n *\n * Usually you would use{@link LedgerClientFactory} (or older style {@link composeApi}), which gives you _all_ available API methods.\n * Unfortunately, this will import almost all dependencies, even if you need only a fraction\n * of the methods. To take advantage of tree-shaking (dead code elimination) you can\n * compose your own API with the methods you need. This can reduce your final bundle significantly.\n *\n * Usage:\n * ```typescript\n *\n * const chainService = new ChainService({\n *     nodeHost: 'https://testnet.burst.fun',\n * })\n *\n * const api = apiComposer\n * .create(chainService)\n * .withMessageApi({\n *                sendTextMessage\n *            })\n * .withAccountApi({\n *                getAccountTransactions,\n *                getUnconfirmedAccountTransactions,\n *                getAccountBalance,\n *                generateSendTransactionQRCode,\n *                generateSendTransactionQRCodeAddress,\n *            })\n * .compose();\n * ```\n *\n * The `with<section>Api` uses factory methods from the [api.core.factories](/phoenix/docs/modules/core_api_factories.html) package\n *\n * \n * */\nexport class ApiComposer {\n    private readonly api: Api;\n\n    /**\n     * Creates the composer instance\n     * @param service\n     * @return the composer instance\n     */\n    public static create(service: ChainService): ApiComposer {\n        return new ApiComposer(service);\n    }\n\n    private constructor(private readonly service: ChainService) {\n        this.api = new ApiImpl(service);\n    }\n\n    private mapCreators(apiSection: string, creatorMap: any): void {\n        this.api[apiSection] = {};\n\n        Object.keys(creatorMap)\n            .forEach(\n                creatorName => this.api[apiSection][creatorName] = creatorMap[creatorName](this.service)\n            );\n    }\n\n    /**\n     * Adds the {@link BlockApi} to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withBlockApi(creatorMap: any): ApiComposer {\n        this.mapCreators('block', creatorMap);\n        return this;\n    }\n\n    /**\n     * Adds the {@link AccountApi}  to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withAccountApi(creatorMap: any): ApiComposer {\n        this.mapCreators('account', creatorMap);\n        return this;\n    }\n\n    /**\n     * Adds the {@link NetworkApi}  to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withNetworkApi(creatorMap: any): ApiComposer {\n        this.mapCreators('network', creatorMap);\n        return this;\n    }\n\n    /**\n     * Adds the {@link MessageApi}  to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withMessageApi(creatorMap: any): ApiComposer {\n        this.mapCreators('message', creatorMap);\n        return this;\n    }\n\n    /**\n     * Adds the {@link TransactionApi}  to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withTransactionApi(creatorMap: any): ApiComposer {\n        this.mapCreators('transaction', creatorMap);\n        return this;\n    }\n\n    /**\n     * Adds the {@link AliasApi}  to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withAliasApi(creatorMap: any): ApiComposer {\n        this.mapCreators('alias', creatorMap);\n        return this;\n    }\n\n    /**\n     * Adds the {@link AssetApi}  to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withAssetApi(creatorMap: any): ApiComposer {\n        this.mapCreators('asset', creatorMap);\n        return this;\n    }\n\n    /**\n     * Adds the {@link ContractApi}  to be composed\n     * @param creatorMap A map of creator/factory functions for the endpoints\n     */\n    public withContractApi(creatorMap: any): ApiComposer {\n        this.mapCreators('contract', creatorMap);\n        return this;\n    }\n\n    /**\n     * Composes the API\n     * Note: As of being a builder pattern, this need to call this method as last\n     */\n    public compose(): Api {\n        return this.api;\n    }\n}\n", "export * from './chainService';\nexport * from './chainServiceSettings';\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Block} from '../../../typings/block';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link BlockApi}.\n *\n * See details at {@link BlockApi.getBlockByHeight}\n*\n* @category factories\n*/\nexport const getBlockByHeight = (service: ChainService):\n    (height: number, includeTransactions: boolean) => Promise<Block> =>\n    (height: number, includeTransactions: boolean): Promise<Block> =>\n        service.query('getBlock', {\n            height,\n            includeTransactions\n        });\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Block} from '../../../typings/block';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link BlockApi}.\n *\n * See details at {@link BlockApi.getBlockById}\n*\n* @category factories\n*/\nexport const getBlockById = (service: ChainService):\n    (block: string, includeTransactions: boolean) => Promise<Block> =>\n    (block: string, includeTransactions: boolean): Promise<Block> =>\n        service.query('getBlock', {\n            block,\n            includeTransactions\n        });\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Block} from '../../../typings/block';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link BlockApi}.\n *\n * See details at {@link BlockApi.getBlockByTimestamp}\n*\n* @category factories\n*/\nexport const getBlockByTimestamp = (service: ChainService):\n    (timestamp: number, includeTransactions: boolean) => Promise<Block> =>\n    (timestamp: number, includeTransactions: boolean): Promise<Block> =>\n        service.query('getBlock', {\n            timestamp,\n            includeTransactions\n        });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {BlockList} from '../../../typings/blockList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link BlockApi}.\n *\n * See details at {@link BlockApi.getBlocks}\n *\n*\n* @category factories\n*/\nexport const getBlocks = (service: ChainService):\n    (firstIndex?: number, lastIndex?: number, includeTransactions?: boolean) => Promise<BlockList> =>\n    (firstIndex?: number, lastIndex?: number, includeTransactions?: boolean): Promise<BlockList> =>\n        service.query('getBlocks', {\n            firstIndex,\n            lastIndex,\n            includeTransactions\n        });\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {BlockId} from '../../..';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link BlockApi}.\n *\n * See details at {@link BlockApi.getBlockId}\n*\n* @category factories\n*/\nexport const getBlockId = (service: ChainService):\n    (height: number) => Promise<BlockId> =>\n    (height: number): Promise<BlockId> =>\n        service.query('getBlockId', {\n            height,\n        });\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {BlockchainStatus} from '../../../typings/blockchainStatus';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getBlockchainStatus}\n*\n* @category factories\n*/\nexport const getBlockchainStatus = (service: ChainService): () => Promise<BlockchainStatus> =>\n    (): Promise<BlockchainStatus> => service.query('getBlockchainStatus');\n", "/**\n * Original work Copyright (c) 2021 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {MiningInfo} from '../../../typings/miningInfo';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getMiningInfo}\n*\n* @category factories\n*/\nexport const getMiningInfo = (service: ChainService): () => Promise<MiningInfo> =>\n    (): Promise<MiningInfo> => service.query('getMiningInfo');\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport { ChainService } from '../../../service/chainService';\nimport { Peer } from '../../../typings/peer';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getPeer}\n*\n* @category factories\n*/\nexport const getPeer = (service: ChainService):\n    (peer: string) => Promise<Peer> =>\n    (peer: string): Promise<Peer> =>\n        service.query('getPeer', {\n            peer,\n        });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport { ChainService } from '../../../service/chainService';\nimport { PeerAddressList } from '../../../typings/peerAddressList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getPeers}\n*\n* @category factories\n*/\nexport const getPeers = (service: ChainService):\n    (active: boolean) => Promise<PeerAddressList> =>\n    (active: boolean = true): Promise<PeerAddressList> =>\n        service.query('getPeers', {\n            active,\n        });\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {ServerStatus} from '../../../typings/serverStatus';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getServerStatus}\n*\n* @category factories\n*/\nexport const getServerStatus = (service: ChainService): () => Promise<ServerStatus> =>\n    (): Promise<ServerStatus> => service.query('getState');\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {ChainTimestamp} from '../../../typings/chainTimestamp';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getTime}\n*\n* @category factories\n*/\nexport const getTime = (service: ChainService): () => Promise<ChainTimestamp> =>\n    async (): Promise<ChainTimestamp> => service.query('getTime');\n\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {SuggestedFees} from '../../../typings/suggestedFees';\nimport {FeeQuantPlanck} from '@signumjs/util';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getSuggestedFees}\n*\n* @category factories\n*/\nexport const getSuggestedFees = (service: ChainService): () => Promise<SuggestedFees> => {\n    return async (): Promise<SuggestedFees> => {\n        const suggestedFees: SuggestedFees = await service.query('suggestFee');\n        return {\n            ...suggestedFees,\n            minimum: FeeQuantPlanck\n        };\n    };\n};\n", "/**\n * Original work Copyright (c) 2021,2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {NetworkInfo} from '../../../typings/networkInfo';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link NetworkApi}.\n *\n * See details at {@link NetworkApi.getNetworkInfo}\n*\n* @category factories\n*/\nexport const getNetworkInfo = (service: ChainService): () => Promise<NetworkInfo> =>\n    (): Promise<NetworkInfo> => service.query('getConstants');\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {SendMessageArgs} from '../../../typings/args';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link MessageApi}.\n *\n * See details at {@link MessageApi.sendMessage}\n*\n* @category factories\n*/\nexport const sendMessage = (service: ChainService) =>\n    (args: SendMessageArgs) =>\n        signIfPrivateKey(service, args, async (a: SendMessageArgs) => {\n                const parameters = {\n                    message: a.message,\n                    publicKey: a.senderPublicKey,\n                    recipient: a.recipientId,\n                    recipientPublicKey: a.recipientPublicKey || undefined,\n                    feeNQT: a.feePlanck,\n                    deadline: a.deadline || DefaultDeadline,\n                    messageIsText: a.messageIsText !== false,\n                    broadcast: true,\n                    referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n                };\n                return service.send<UnsignedTransaction>('sendMessage', parameters);\n            }\n        );\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\n\nimport {generateSignature, generateSignedTransactionBytes, verifySignature, } from '@signumjs/crypto';\nimport {broadcastTransaction} from './broadcastTransaction';\nimport {ChainService} from '../../../service';\nimport {TransactionId} from '../../../typings/transactionId';\nimport {UnsignedTransactionArgs} from '../../../typings/args/unsignedTransactionArgs';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.signAndBroadcastTransaction}\n*\n* @category factories\n*/\nexport const signAndBroadcastTransaction = (chainService: ChainService):\n    (unsignedTransaction: UnsignedTransactionArgs) => Promise<TransactionId> =>\n    async (unsignedTransaction): Promise<TransactionId> => {\n\n        const {unsignedHexMessage, senderPrivateKey, senderPublicKey} = unsignedTransaction;\n\n        const signature = generateSignature(unsignedHexMessage, senderPrivateKey);\n        const isValid = verifySignature(signature, unsignedHexMessage, senderPublicKey);\n        if (!isValid) {\n            throw new Error('The signed message could not be verified! Transaction not broadcasted!');\n        }\n\n        const signedMessage = generateSignedTransactionBytes(unsignedHexMessage, signature);\n        return broadcastTransaction(chainService)(signedMessage);\n    };\n\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransactionId} from '../../../typings/transactionId';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.broadcastTransaction}\n*\n* @category factories\n*/\nexport const broadcastTransaction = (service: ChainService):\n    (signedTransactionPayload: string) => Promise<TransactionId> =>\n    (signedTransactionPayload: string): Promise<TransactionId> =>\n        service.send<TransactionId>('broadcastTransaction', {transactionBytes: signedTransactionPayload});\n", "/** @ignore */\n/** @internal */\n\n/**\n * Copyright (c) 2022 Signum Network\n */\n\n\nimport {UnsignedTransaction} from '../typings/unsignedTransaction';\nimport {TransactionId} from '../typings/transactionId';\nimport {signAndBroadcastTransaction} from '../api/factories/transaction/signAndBroadcastTransaction';\nimport {DefaultSendArgs} from '../typings/args/defaultSendArgs';\nimport {ChainService} from '../service';\n\ntype TransactionFn = (args: any) => Promise<UnsignedTransaction>;\n\nexport const signIfPrivateKey = async (service: ChainService,\n                                       txArgs: DefaultSendArgs,\n                                       transactionFn: TransactionFn): Promise<TransactionId|UnsignedTransaction> => {\n\n    const response = await transactionFn(txArgs);\n\n    if (!txArgs.senderPrivateKey) {\n        return response;\n    }\n\n    return signAndBroadcastTransaction(service)({\n        senderPublicKey: txArgs.senderPublicKey,\n        senderPrivateKey: txArgs.senderPrivateKey,\n        unsignedHexMessage: response.unsignedTransactionBytes\n    });\n\n};\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {encryptMessage} from '@signumjs/crypto';\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {SendEncryptedMessageArgs} from '../../../typings/args/sendEncryptedMessageArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\nconst MAX_MESSAGE_LENGTH = 1024;\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link MessageApi}.\n *\n * See details at {@link MessageApi.sendEncryptedMessage}\n*\n* @category factories\n*/\nexport const sendEncryptedMessage = (service: ChainService) =>\n    (args: SendEncryptedMessageArgs) =>\n        signIfPrivateKey(service, args, async (a: SendEncryptedMessageArgs) => {\n\n                const encryptedMessage = await encryptMessage(a.message, a.recipientPublicKey, a.senderAgreementKey);\n\n                if (encryptedMessage.data.length > MAX_MESSAGE_LENGTH) {\n                    throw new Error(`The encrypted message exceeds allowed limit of ${MAX_MESSAGE_LENGTH} bytes`);\n                }\n\n                const parameters = {\n                    deadline: a.deadline || DefaultDeadline,\n                    encryptedMessageData: encryptedMessage.data,\n                    encryptedMessageNonce: encryptedMessage.nonce,\n                    feeNQT: a.feePlanck,\n                    messageToEncryptIsText: a.messageIsText === undefined ? true : a.messageIsText,\n                    publicKey: a.senderPublicKey,\n                    recipient: a.recipientId,\n                    recipientPublicKey: a.recipientPublicKey || undefined,\n                    referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n                };\n\n                return service.send<UnsignedTransaction>('sendMessage', parameters);\n            }\n        );\n", "/**\n * Copyright (c) 2021 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {CommitmentArgs} from '../../../typings/args/commitmentArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.addCommitment}\n*\n* @category factories\n*/\nexport const addCommitment = (service: ChainService) =>\n    (args: CommitmentArgs) =>\n        signIfPrivateKey(service, args,\n            async (a: CommitmentArgs) => {\n                const parameters = {\n                    amountNQT: a.amountPlanck,\n                    publicKey: a.senderPublicKey,\n                    feeNQT: a.feePlanck,\n                    deadline: a.deadline || DefaultDeadline,\n                    referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n                };\n\n                return service.send<UnsignedTransaction>('addCommitment', parameters);\n            });\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.generateSendTransactionQRCode}\n *\n*\n* @category factories\n*/\nexport const generateSendTransactionQRCode = (service: ChainService):\n    (\n        receiverId: string,\n        amountNQT?: number,\n        feeSuggestionType?: string,\n        feeNQT?: number,\n        immutable?: boolean\n    ) => Promise<ArrayBufferLike> =>\n    (\n        receiverId: string,\n        amountNQT: number = 0,\n        feeSuggestionType: string = 'standard',\n        feeNQT: number = undefined,\n        immutable: boolean = undefined\n    ): Promise<ArrayBufferLike> =>\n        service.query('generateSendTransactionQRCode', {\n            receiverId,\n            amountNQT,\n            feeSuggestionType,\n            feeNQT,\n            immutable\n        });\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.generateSendTransactionQRCodeAddress}\n *\n*\n* @category factories\n*/\nexport const generateSendTransactionQRCodeAddress = (service: ChainService):\n    (\n        receiverId: string,\n        amountNQT?: number,\n        feeSuggestionType?: string,\n        feeNQT?: number,\n        immutable?: boolean\n    ) => Promise<string> =>\n    (\n        receiverId: string,\n        amountNQT: number = 0,\n        feeSuggestionType: string = 'standard',\n        feeNQT: number = undefined,\n        immutable: boolean = undefined\n    ): Promise<string> =>\n        Promise.resolve(\n            service.toApiEndpoint('generateSendTransactionQRCode', {\n                    receiverId: receiverId,\n                    amountNQT,\n                    feeSuggestionType,\n                    feeNQT,\n                    immutable\n                }\n            )\n        );\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\nimport {ChainService} from '../../../service/chainService';\nimport {Account} from '../../../typings/account';\nimport {GetAccountArgs} from '../../../typings/args/getAccountArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getAccount}\n*\n* @category factories\n*/\nexport const getAccount = (service: ChainService):\n    (args: GetAccountArgs) => Promise<Account> =>\n    (args: GetAccountArgs): Promise<Account> => {\n\n        const params = {\n            account: args.accountId,\n            height : args.commitmentAtHeight,\n            getCommittedAmount : args.includeCommittedAmount,\n            estimateCommitment : args.includeEstimatedCommitment\n        };\n\n        return service.query('getAccount', params);\n    };\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\n\nimport {ChainService} from '../../../service/chainService';\nimport {Balance} from '../../../typings/balance';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getAccountBalance}\n*\n* @category factories\n*/\nexport const getAccountBalance = (service: ChainService):\n    (accountId: string) => Promise<Balance> =>\n    (accountId: string): Promise<Balance> => service.query('getBalance', {\n        account: accountId,\n    });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {BlockIdList} from '../../../typings/blockIdList';\nimport {GetAccountBlocksArgs} from '../../../typings/args/getAccountBlocksArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getAccountBlockIds}\n*\n* @category factories\n*/\nexport const getAccountBlockIds = (service: ChainService):\n    (args: GetAccountBlocksArgs) => Promise<BlockIdList> =>\n    (args): Promise<BlockIdList> => {\n\n        const params = {\n            account: args.accountId,\n            firstIndex: args.firstIndex,\n            lastIndex: args.lastIndex,\n            includeTransactions: args.includeTransactions || false\n        };\n\n        return service.query('getAccountBlockIds', params);\n    };\n\n\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {BlockList} from '../../../typings/blockList';\nimport {GetAccountBlocksArgs} from '../../../typings/args/getAccountBlocksArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getAccountBlocks}\n*\n* @category factories\n*/\nexport const getAccountBlocks = (service: ChainService):\n    (args: GetAccountBlocksArgs) => Promise<BlockList> =>\n    (args): Promise<BlockList> => {\n\n        const params = {\n            account: args.accountId,\n            firstIndex: args.firstIndex,\n            lastIndex: args.lastIndex,\n            includeTransactions: args.includeTransactions || false\n        };\n\n        return service.query('getAccountBlocks', params);\n    };\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {SubscriptionList} from '../../../typings/subscriptionList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getAccountSubscriptions}\n*\n* @category factories\n*/\nexport const getAccountSubscriptions = (service: ChainService):\n    (accountId: string) => Promise<SubscriptionList> =>\n    (accountId: string): Promise<SubscriptionList> => {\n\n        const parameters = {\n            account: accountId,\n        };\n\n        return service.query('getAccountSubscriptions', parameters);\n    };\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2022,2024 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransactionList} from '../../../typings/transactionList';\nimport {GetAccountTransactionsArgs} from '../../../typings/args';\nimport {TransactionAssetSubtype, TransactionType} from '../../../constants';\nimport {getDistributionAmountsFromTransaction} from '../transaction';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getAccountTransactions}\n*\n* @category factories\n*/\nexport const getAccountTransactions = (service: ChainService):\n    (args: GetAccountTransactionsArgs) => Promise<TransactionList> =>\n    async (args: GetAccountTransactionsArgs): Promise<TransactionList> => {\n\n        if(args.senderId || args.recipientId) {\n            if(args.accountId){\n                throw new Error(\"Using accountId with recipientId and/or senderId is not allowed\")\n            }\n\n            if(args.resolveDistributions){\n                throw new Error(\"Using resolveDistributions with recipientId and/or senderId is not allowed\")\n            }\n        }\n\n        const parameters = {\n            ...args,\n            account: args.accountId || undefined,\n            sender: args.senderId,\n            recipient: args.recipientId,\n            bidirectional: args.bidirectional,\n        };\n\n        if (args.resolveDistributions) {\n            parameters.includeIndirect = true;\n        }\n\n        delete parameters.senderId;\n        delete parameters.recipientId;\n        delete parameters.accountId;\n        delete parameters.resolveDistributions;\n\n        const result = await service.query<TransactionList>('getAccountTransactions', parameters);\n\n        if (!args.resolveDistributions || !parameters.includeIndirect) {\n            return result;\n        }\n\n        const distributions = result\n            .transactions\n            .filter(({\n                         type,\n                         subtype,\n                         sender,\n                     }) => (\n                type === TransactionType.Asset\n                && subtype === TransactionAssetSubtype.AssetDistributeToHolders\n                && args.accountId !== sender\n                )\n            )\n            .map(tx => getDistributionAmountsFromTransaction(service)(tx.transaction, args.accountId));\n\n        try {\n            const resolvedDistributions = await Promise.all(distributions);\n            for (const dtx of resolvedDistributions) {\n                const tx = result.transactions.find(({transaction}) => transaction === dtx.transaction);\n                const {asset, assetToDistribute} = tx.attachment;\n                tx.distribution = {\n                    assetId: asset,\n                    distributedAssetId: assetToDistribute && assetToDistribute !== '0' ? assetToDistribute : null,\n                    ...dtx\n                };\n                if (tx.sender !== args.accountId) {\n                    tx.amountNQT = dtx.amountNQT;\n                }\n            }\n        } catch (_) {\n            // ignore  silently\n        }\n\n        return result;\n\n    };\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Transaction} from '../../../typings/transaction';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.getTransaction}\n*\n* @category factories\n*/\nexport const getTransaction = (service: ChainService):\n    (transactionId: string) => Promise<Transaction> =>\n    (transactionId: string): Promise<Transaction> =>\n        service.query('getTransaction', {transaction: transactionId});\n", "/**\n * Original work Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Transaction} from '../../../typings/transaction';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.getTransactionByFullHash}\n*\n* @category factories\n*/\nexport const getTransactionByFullHash = (service: ChainService):\n    (fullHash: string) => Promise<Transaction> =>\n    (fullHash: string): Promise<Transaction> =>\n        service.query('getTransaction', {fullHash: fullHash});\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {SendAmountArgs} from '../../../typings/args/sendAmountArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\nconst SmartContractPublickey = '0000000000000000000000000000000000000000000000000000000000000000';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.sendAmountToSingleRecipient}\n*\n* @category factories\n*/\nexport const sendAmountToSingleRecipient = (service: ChainService) =>\n    (args: SendAmountArgs) =>\n    signIfPrivateKey(\n        service,\n        args,\n        async (a: SendAmountArgs) => {\n\n        let recipientPublicKey = a.recipientPublicKey || undefined;\n        if (recipientPublicKey && recipientPublicKey === SmartContractPublickey) {\n            recipientPublicKey = undefined;\n        }\n\n        let parameters = {\n            amountNQT: a.amountPlanck,\n            publicKey: a.senderPublicKey,\n            recipient: a.recipientId,\n            recipientPublicKey,\n            feeNQT: a.feePlanck,\n            deadline: a.deadline || DefaultDeadline,\n            referencedTransactionFullHash: a.referencedTransactionFullHash,\n            skipAdditionalSecurityCheck: a.skipAdditionalSecurityCheck\n        };\n\n        if (a.attachment) {\n            parameters = createParametersFromAttachment(a.attachment, parameters);\n        }\n\n        return service.send<UnsignedTransaction>('sendMoney', parameters);\n    });\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\n\n\n/**\n* Attachment class\n*\n* The attachment class is used to appended to transaction where appropriate.\n* It is a super class for Message and EncryptedMessage.\n *\n*/\nexport class Attachment {\n    constructor(public type: string) {}\n}\n\ninterface AttachmentMessageArgs {\n    messageIsText: boolean;\n    message: string;\n}\n\n/**\n* Message class\n*\n* The Message class is used to model a plain message attached to a transaction.\n *\n*/\nexport class AttachmentMessage extends Attachment {\n    public messageIsText: boolean;\n    public message: string;\n\n    constructor(data: AttachmentMessageArgs) {\n        super('message');\n        this.messageIsText = data.messageIsText;\n        this.message = data.message;\n    }\n}\n\ninterface AttachmentEncryptedMessageArgs {\n    data: string;\n    nonce: string;\n    isText: boolean;\n}\n\n/**\n* EncryptedMessage class\n*\n* The EncryptedMessage class is a model for a encrypted message attached to a transaction.\n *\n*/\nexport class AttachmentEncryptedMessage extends Attachment {\n    public data: string;\n    public nonce: string;\n    public isText: boolean;\n\n    constructor(data: AttachmentEncryptedMessageArgs) {\n        super('encrypted_message');\n        this.data = data.data;\n        this.nonce = data.nonce;\n        this.isText = data.isText;\n    }\n}\n", "/** @ignore */\n/** @internal */\n\nimport {Attachment, AttachmentEncryptedMessage, AttachmentMessage} from '../typings/attachment';\n\n/**\n * Creates send parameters for a transaction from attachment data\n *\n * @internal\n * @param attachment The attachment\n * @param params Any object\n * @return HttpParams\n */\nexport const createParametersFromAttachment = (attachment: Attachment, params: any) => {\n    if (attachment instanceof AttachmentEncryptedMessage) {\n        return {\n            encryptedMessageData: attachment.data,\n            encryptedMessageNonce: attachment.nonce,\n            messageToEncryptIsText: String(attachment.isText),\n            ...params\n        };\n    }\n\n    if (attachment instanceof AttachmentMessage) {\n        return {\n            message: attachment.message,\n            messageIsText: String(attachment.messageIsText),\n            ...params\n        };\n    }\n\n    throw new Error(`Unknown attachment type: ${JSON.stringify(attachment)}`);\n};\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {DistributionAmount} from '../../../typings/distributionAmount';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.getDistributionAmountsFromTransaction}\n * @see also {@link AssetApi.distributeToAssetHolders}\n *\n*\n* @category factories\n*/\nexport const getDistributionAmountsFromTransaction = (service: ChainService):\n    (transactionId: string, accountId: string) => Promise<DistributionAmount> =>\n    async (transactionId: string, accountId: string): Promise<DistributionAmount> => {\n        const result = await service.query<any>('getIndirectIncoming', {transaction: transactionId, account: accountId});\n        return {\n            account: accountId,\n            transaction: transactionId,\n            ...result\n        };\n    };\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified Work (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {SendSameAmountToMultipleRecipientsArgs} from '../../../typings/args/sendSameAmountToMultipleRecipientsArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {DefaultDeadline} from '../../../constants';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.sendSameAmountToMultipleRecipients}\n*\n* @category factories\n*/\nexport const sendSameAmountToMultipleRecipients = (service: ChainService) =>\n    (args: SendSameAmountToMultipleRecipientsArgs) =>\n        signIfPrivateKey(service, args,\n            async (a: SendSameAmountToMultipleRecipientsArgs) => {\n\n                const {recipientIds, senderPublicKey, amountPlanck, feePlanck,\n                    referencedTransactionFullHash,\n                    deadline = DefaultDeadline,\n                    dedupe = false,\n                } = a;\n\n                const uniqueRecipients = new Set<string>(recipientIds);\n                if (!dedupe && recipientIds.length !== uniqueRecipients.size) {\n                    throw new Error('Duplicate Recipients found');\n                }\n\n                if (recipientIds.length === 0) {\n                    throw new Error('No recipients given. Send ignored');\n                }\n\n                const parameters = {\n                    publicKey: senderPublicKey,\n                    recipients: Array.from(uniqueRecipients).join(';'),\n                    feeNQT: feePlanck,\n                    amountNQT: amountPlanck,\n                    deadline,\n                    referencedTransactionFullHash\n                };\n\n                return service.send<UnsignedTransaction>('sendMoneyMultiSame', parameters);\n            });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified Work (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {MultioutRecipientAmount} from '../../../typings/multioutRecipientAmount';\nimport {SendAmountToMultipleRecipientsArgs} from '../../../typings/args/sendAmountToMultipleRecipientsArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {DefaultDeadline} from '../../../constants';\n\nfunction mountRecipientsString(recipientAmounts: MultioutRecipientAmount[]): string {\n    return recipientAmounts.map(({amountNQT, recipient}) => `${recipient}:${amountNQT}`).join(';');\n}\n\nfunction assertDuplicates(recipientAmounts: MultioutRecipientAmount[]) {\n    const recipientIds = new Set<string>();\n    for (const ra of recipientAmounts) {\n        if (recipientIds.has(ra.recipient)) {\n            throw new Error('Duplicate Recipients found');\n        }\n        recipientIds.add(ra.recipient);\n    }\n}\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.sendAmountToMultipleRecipients}\n*\n* @category factories\n*/\nexport const sendAmountToMultipleRecipients = (service: ChainService) =>\n    (args: SendAmountToMultipleRecipientsArgs) =>\n        signIfPrivateKey(service, args, async (a: SendAmountToMultipleRecipientsArgs) => {\n\n                const {recipientAmounts, deadline = DefaultDeadline, feePlanck, senderPublicKey, referencedTransactionFullHash} = a;\n\n                assertDuplicates(recipientAmounts);\n\n                if (recipientAmounts.length === 0) {\n                    throw new Error('No recipients given. Send ignored');\n                }\n\n                const parameters = {\n                    publicKey: senderPublicKey,\n                    recipients: mountRecipientsString(recipientAmounts),\n                    feeNQT: feePlanck,\n                    deadline,\n                    referencedTransactionFullHash\n                };\n\n                return service.send<UnsignedTransaction>('sendMoneyMulti', parameters);\n            }\n        );\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {CreateSubscriptionArgs} from '../../../typings/args';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.createSubscription}\n*\n* @category factories\n*/\nexport const createSubscription = (service: ChainService) =>\n    (args: CreateSubscriptionArgs) => signIfPrivateKey(service, args,\n        async (a: CreateSubscriptionArgs) => {\n\n            let parameters = {\n                amountNQT: a.amountPlanck,\n                frequency: a.frequency,\n                publicKey: a.senderPublicKey,\n                recipient: a.recipientId,\n                recipientPublicKey: a.recipientPublicKey || undefined,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash,\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('sendMoneySubscription', parameters);\n        }\n    );\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {CancelSubscriptionArgs} from '../../../typings/args/cancelSubscriptionArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.cancelSubscription}\n*\n* @category factories\n*/\nexport const cancelSubscription = (service: ChainService) =>\n    (args: CancelSubscriptionArgs) => signIfPrivateKey(service, args,\n        async (a: CancelSubscriptionArgs) => {\n\n            let parameters = {\n                subscription: a.subscriptionId,\n                publicKey: a.senderPublicKey,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('subscriptionCancel', parameters);\n        });\n", "/**\n * Original work Copyright (c) 2018 PoC-Consortium\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service';\nimport {Subscription} from '../../..';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.getSubscription}\n*\n* @category factories\n*/\nexport const getSubscription = (service: ChainService):\n    (subscriptionId: string) => Promise<Subscription> =>\n    (subscriptionId: string): Promise<Subscription> =>\n        service.query('getSubscription', {subscription: subscriptionId});\n", "/**\n * Original work Copyright (c) 2020 Burst Apps Team\n */\nimport {ChainService} from '../../../service';\nimport {UnconfirmedTransactionList} from '../../..';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.getUnconfirmedTransactions}\n*\n* @category factories\n*/\nexport const getUnconfirmedTransactions = (service: ChainService):\n    () => Promise<UnconfirmedTransactionList> =>\n    (): Promise<UnconfirmedTransactionList> =>\n        service.query('getUnconfirmedTransactions');\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Transaction} from '../../../typings/transaction';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.parseTransactionBytes}\n*\n* @category factories\n*/\nexport const parseTransactionBytes = (service: ChainService):\n    (transactionHexBytes: string) => Promise<Transaction> =>\n    (transactionHexBytes: string): Promise<Transaction> =>\n        service.query('parseTransaction', {transactionBytes: transactionHexBytes});\n", "/**\n * Original work Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetSubscriptionPaymentsArgs, TransactionList} from '../../..';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link TransactionApi}.\n *\n * See details at {@link TransactionApi.getSubscriptionPayments}\n*\n* @category factories\n*/\nexport const getSubscriptionPayments = (service: ChainService):\n    (args: GetSubscriptionPaymentsArgs) => Promise<TransactionList> =>\n    (args: GetSubscriptionPaymentsArgs): Promise<TransactionList> => {\n\n    const params = {\n        subscription: args.subscriptionId,\n        firstIndex: args.firstIndex,\n        lastIndex: args.lastIndex,\n    };\n\n        return service.query('getSubscriptionPayments', params);\n    };\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransactionList} from '../../../typings/transactionList';\nimport {GetAccountTransactionsSenderRecipientArgs} from '../../../typings/args/getAccountTransactionsSenderRecipientArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n *\n * See details at {@link AccountApi.getAccountTransactionsFromSender}\n*\n* @category factories\n*/\nexport const getAccountTransactionsFromSender = (service: ChainService):\n    (args: Omit<GetAccountTransactionsSenderRecipientArgs, 'recipientId'>) => Promise<TransactionList> =>\n    async (args: Omit<GetAccountTransactionsSenderRecipientArgs, 'recipientId'>): Promise<TransactionList> => {\n\n        const parameters = {\n            ...args,\n            sender: args.senderId,\n        };\n\n        delete parameters.senderId;\n\n        return service.query<TransactionList>('getAccountTransactions', parameters);\n\n    };\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransactionList} from '../../../typings/transactionList';\nimport {GetAccountTransactionsSenderRecipientArgs} from '../../../typings/args/getAccountTransactionsSenderRecipientArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n *\n * See details at {@link AccountApi.getAccountTransactionsToRecipient}\n*\n* @category factories\n*/\nexport const getAccountTransactionsToRecipient = (service: ChainService):\n    (args: Omit<GetAccountTransactionsSenderRecipientArgs, 'senderId'>) => Promise<TransactionList> =>\n    async (args: Omit<GetAccountTransactionsSenderRecipientArgs, 'senderId'>): Promise<TransactionList> => {\n\n        const parameters = {\n            ...args,\n            recipient: args.recipientId,\n        };\n\n        delete parameters.recipientId;\n\n        return service.query<TransactionList>('getAccountTransactions', parameters);\n\n    };\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransactionList} from '../../../typings/transactionList';\nimport {GetAccountTransactionsSenderRecipientArgs} from '../../../typings/args/getAccountTransactionsSenderRecipientArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n *\n * See details at {@link AccountApi.getAccountTransactionsFromSenderToRecipient}\n*\n* @category factories\n*/\nexport const getAccountTransactionsFromSenderToRecipient = (service: ChainService):\n    (args: GetAccountTransactionsSenderRecipientArgs) => Promise<TransactionList> =>\n    async (args: GetAccountTransactionsSenderRecipientArgs): Promise<TransactionList> => {\n\n        const parameters = {\n            ...args,\n            sender: args.senderId,\n            recipient: args.recipientId,\n            bidirectional: false\n        };\n\n        delete parameters.senderId;\n        delete parameters.recipientId;\n\n        return service.query<TransactionList>('getAccountTransactions', parameters);\n\n    };\n", "/**\n * Original work Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransactionList} from '../../../typings/transactionList';\nimport {GetAccountTransactionsSenderRecipientArgs} from '../../../typings/args/getAccountTransactionsSenderRecipientArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n *\n * See details at {@link AccountApi.getAccountTransactionsBetweenSenderAndRecipient}\n*\n* @category factories\n*/\nexport const getAccountTransactionsBetweenSenderAndRecipient = (service: ChainService):\n    (args:GetAccountTransactionsSenderRecipientArgs) => Promise<TransactionList> =>\n    async (args: GetAccountTransactionsSenderRecipientArgs): Promise<TransactionList> => {\n\n        const parameters = {\n            ...args,\n            sender: args.senderId,\n            recipient: args.recipientId,\n            bidirectional: true\n        };\n\n        delete parameters.senderId;\n        delete parameters.recipientId;\n\n        return service.query<TransactionList>('getAccountTransactions', parameters);\n\n    };\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n */\nimport {ChainService} from '../../../service';\nimport {RewardRecipient} from '../../..';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getRewardRecipient}\n*\n* @category factories\n*/\nexport const getRewardRecipient = (service: ChainService):\n    (accountId: string) => Promise<RewardRecipient> =>\n    async (accountId: string): Promise<RewardRecipient> => {\n        const parameters = {\n            account: accountId\n        };\n\n        return service.query<RewardRecipient>('getRewardRecipient', parameters);\n\n    };\n", "/**\n * Original work Copyright (c) 2020 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransactionList} from '../../../typings/transactionList';\nimport {GetAccountTransactionsArgs} from '../../../typings/args';\nimport {SubscriptionList} from '../../../typings/subscriptionList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getSubscriptionsToAccount}\n*\n* @category factories\n*/\nexport const getSubscriptionsToAccount = (service: ChainService):\n    (accountId: string) => Promise<SubscriptionList> =>\n    (accountId: string): Promise<SubscriptionList> => {\n\n        const parameters = {\n            account: accountId,\n        };\n\n        return service.query('getSubscriptionsToAccount', parameters);\n    };\n", "/**\n * Original work Copyright (c) 2020 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnconfirmedTransactionList} from '../../../typings/unconfirmedTransactionList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.getUnconfirmedAccountTransactions}\n*\n* @category factories\n*/\nexport const getUnconfirmedAccountTransactions = (service: ChainService):\n    (\n        accountId: string,\n        includeIndirect?: boolean\n    ) => Promise<UnconfirmedTransactionList> =>\n    (\n        accountId: string,\n        includeIndirect ?: boolean\n    ): Promise<UnconfirmedTransactionList> =>\n        service.query('getUnconfirmedTransactions', {\n                account: accountId,\n                includeIndirect\n            }\n        );\n", "/**\n * Copyright (c) 2021 Burst Apps Team\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {CommitmentArgs} from '../../../typings/args/commitmentArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.removeCommitment}\n*\n* @category factories\n*/\nexport const removeCommitment = (service: ChainService) =>\n    (args: CommitmentArgs) =>\n        signIfPrivateKey(service, args, async (a: CommitmentArgs) => {\n            const parameters = {\n                amountNQT: a.amountPlanck,\n                publicKey: a.senderPublicKey,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n            };\n            return service.send<UnsignedTransaction>('removeCommitment', parameters);\n        });\n", "/**\n * Copyright (c) 2021 Burst Apps Team\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {SetAccountInfoArgs} from '../../../typings/args/setAccountInfoArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.setAccountInfo}\n*\n* @category factories\n*/\nexport const setAccountInfo = (service: ChainService) =>\n    (args: SetAccountInfoArgs) =>\n        signIfPrivateKey(service, args, async (a: SetAccountInfoArgs) => {\n\n            const parameters = {\n                name: a.name,\n                description: a.description,\n                deadline: DefaultDeadline,\n                feeNQT: a.feePlanck,\n                publicKey: a.senderPublicKey\n            };\n            return service.send<UnsignedTransaction>('setAccountInfo', parameters);\n\n        });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {SetAliasArgs} from '../../../typings/args/setAliasArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {DefaultDeadline} from '../../../constants';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.setAlias}\n *\n*\n* @category factories\n*/\nexport const setAlias = (service: ChainService) =>\n    (args: SetAliasArgs) =>\n        signIfPrivateKey(service, args, async (a: SetAliasArgs) => {\n            const parameters = {\n                aliasName: a.aliasName,\n                aliasURI: a.aliasURI,\n                deadline: a.deadline || DefaultDeadline,\n                feeNQT: a.feePlanck,\n                publicKey: a.senderPublicKey,\n                referencedTransactionFullHash: a.referencedTransactionFullHash,\n                // omit default tld\n                tld: !args.tld || args.tld === 'signum' ?  undefined : args.tld,\n            };\n            return service.send<UnsignedTransaction>('setAlias', parameters);\n        });\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {SetRewardRecipientArgs} from '../../../typings/args/setRewardRecipientArgs';\nimport {DefaultDeadline} from '../../../constants';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AccountApi}.\n *\n * See details at {@link AccountApi.setRewardRecipient}\n*\n* @category factories\n*/\nexport const setRewardRecipient = (service: ChainService) =>\n    (args: SetRewardRecipientArgs) =>\n        signIfPrivateKey(service, args, async (a: SetRewardRecipientArgs) => {\n                const parameters = {\n                    publicKey: a.senderPublicKey,\n                    recipient: a.recipientId,\n                    feeNQT: a.feePlanck,\n                    deadline: a.deadline || DefaultDeadline,\n                    referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n                };\n                return service.send<UnsignedTransaction>('setRewardRecipient', parameters);\n            }\n        );\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {AliasList} from '../../../typings/aliasList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.getAliasById}\n*\n* @category factories\n*/\nexport const getAliasById = (service: ChainService):\n    (aliasId: string) => Promise<AliasList> =>\n    (aliasId: string): Promise<AliasList> => service.query('getAlias', {\n        alias: aliasId,\n    });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {AliasList} from '../../../typings/aliasList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.getAliasByName}\n*\n* @category factories\n*/\nexport const getAliasByName = (service: ChainService):\n    (aliasName: string, tld?: string) => Promise<AliasList> =>\n    (aliasName: string, tld?: string): Promise<AliasList> => service.query('getAlias', {\n        aliasName,\n        tld\n    });\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {AliasList} from '../../../typings/aliasList';\nimport {GetAliasesOnSaleArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.getAliasesOnSale}\n*\n* @category factories\n*/\nexport const getAliasesOnSale = (service: ChainService):\n    (args: GetAliasesOnSaleArgs) => Promise<AliasList> =>\n    (args: GetAliasesOnSaleArgs): Promise<AliasList> => {\n\n        const params = {\n            account: args.accountId,\n            buyer: args.buyerId,\n            firstIndex: args.firstIndex,\n            lastIndex: args.lastIndex,\n        };\n\n        return  service.query('getAliasesOnSale', params);\n    };\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {AliasList} from '../../../typings/aliasList';\nimport {GetAliasesArgs} from '../../../typings/args/getAliasesArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.getAliases}\n*\n* @category factories\n*/\nexport const getAliases = (service: ChainService):\n    (args: GetAliasesArgs) => Promise<AliasList> =>\n    (args: GetAliasesArgs): Promise<AliasList> => service.query('getAliases', {\n        account: args.accountId,\n        tld: args.tld,\n        aliasName: args.aliasName,\n        timestamp: args.timestamp,\n        firstIndex: args.firstIndex,\n        lastIndex: args.lastIndex,\n    });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {DefaultDeadline} from '../../../constants';\nimport { BuyAliasArgs } from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.buyAlias}\n*\n* @category factories\n*/\nexport const buyAlias = (service: ChainService) =>  (args: BuyAliasArgs) => signIfPrivateKey(service, args,\n    async (a: BuyAliasArgs) => {\n\n        const parameters = {\n            aliasName: a.aliasName,\n            alias: a.aliasId,\n            deadline: a.deadline || DefaultDeadline,\n            feeNQT: a.feePlanck,\n            amountNQT: a.amountPlanck,\n            publicKey: a.senderPublicKey,\n            referencedTransactionFullHash: a.referencedTransactionFullHash,\n        };\n        return  service.send<UnsignedTransaction>('buyAlias', parameters);\n\n    });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {DefaultDeadline} from '../../../constants';\nimport {SellAliasArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.buyAlias}\n*\n* @category factories\n*/\nexport const sellAlias = (service: ChainService) =>  (args: SellAliasArgs) => signIfPrivateKey(service, args,\n    async (a: SellAliasArgs) => {\n\n        const parameters = {\n            aliasName: a.aliasName,\n            alias: a.aliasId,\n            deadline: a.deadline || DefaultDeadline,\n            feeNQT: a.feePlanck,\n            publicKey: a.senderPublicKey,\n            priceNQT: a.amountPlanck,\n            referencedTransactionFullHash: a.referencedTransactionFullHash,\n            recipient: a.recipientId,\n            recipientPublicKey: a.recipientPublicKey,\n        };\n        return  service.send<UnsignedTransaction>('sellAlias', parameters);\n\n    });\n", "/**\n * Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {GetTopLevelDomainsArgs} from '../../../typings/args/getTopLevelDomainsArgs';\nimport {TopLevelDomainList} from '../../../typings/topLevelDomainList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.getTopLevelDomains}\n*\n* @category factories\n*/\nexport const getTopLevelDomains = (service: ChainService):\n    (args: GetTopLevelDomainsArgs) => Promise<TopLevelDomainList> =>\n    (args: GetTopLevelDomainsArgs): Promise<TopLevelDomainList> => service.query('getTLDs', args);\n", "/**\n * Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {DefaultDeadline} from '../../../constants';\nimport {BuyTopLevelDomainArgs} from '../../../typings/args';\nimport {createParametersFromAttachment} from '../../../internal';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.buyTopLevelDomain}\n *\n*\n* @category factories\n*/\nexport const buyTopLevelDomain = (service: ChainService) =>\n    (args: BuyTopLevelDomainArgs) =>\n        signIfPrivateKey(service, args, async (a: BuyTopLevelDomainArgs) => {\n            let parameters = {\n                tld: a.tld,\n                amountNQT: a.amountPlanck,\n                deadline: a.deadline || DefaultDeadline,\n                feeNQT: a.feePlanck,\n                publicKey: a.senderPublicKey,\n                referencedTransactionFullHash: a.referencedTransactionFullHash,\n            };\n\n            if (args.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n            return service.send<UnsignedTransaction>('setTLD', parameters);\n        });\n", "export * from './createParametersFromAttachment';\nexport * from './signIfPrivateKey';\nexport * from './verifyTransaction';\n\n\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {AliasList} from '../../../typings/aliasList';\nimport { SearchAliasesByNameArgs } from '../../../typings/args/searchAliasesByNameArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AliasApi}.\n *\n * See details at {@link AliasApi.searchAliasesByName}\n*\n* @category factories\n*/\nexport const searchAliasesByName = (service: ChainService):\n    (args: SearchAliasesByNameArgs) => Promise<AliasList> =>\n    (args): Promise<AliasList> => service.query('getAliasesByName', args);\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Contract} from '@signumjs/contracts';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.getContract}\n*\n* @category factories\n*/\nexport const getContract = (service: ChainService):\n    (id: string) => Promise<Contract> =>\n    (id: string): Promise<Contract> =>\n        service.query('getAT', {\n            at: id,\n        });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {ContractIdList} from '../../../typings/contractIdList';\nimport {GetAllContractIdsArgs} from '../../../typings/args/getAllContractIdsArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.getAllContractIds}\n*\n* @category factories\n*/\nexport const getAllContractIds = (service: ChainService):\n    (args?: GetAllContractIdsArgs) => Promise<ContractIdList> =>\n    (args?: GetAllContractIdsArgs): Promise<ContractIdList> => {\n        const params = {\n            machineCodeHashId: args?.machineCodeHash || undefined\n        };\n\n        return service.query('getATIds', params);\n    };\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2021 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {ContractList} from '../../../typings/contractList';\nimport {GetContractsByAccountArgs} from '../../../typings/args/getContractsByAccountArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.getContractsByAccount}\n*\n* @category factories\n*/\nexport const getContractsByAccount = (service: ChainService):\n    (args: GetContractsByAccountArgs) => Promise<ContractList> =>\n    (args: GetContractsByAccountArgs): Promise<ContractList> => {\n        const params = {\n            account: args.accountId,\n            machineCodeHashId: args.machineCodeHash\n        };\n        return service.query('getAccountATs', params);\n    };\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {calculateMinimumCreationFee} from '@signumjs/contracts';\nimport {ChainService} from '../../../service';\nimport {PublishContractArgs} from '../../../typings/args';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {generateDataStack} from '@signumjs/contracts';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.publishContract}\n*\n* @category factories\n*/\nexport const publishContract = (service: ChainService) =>\n    (args: PublishContractArgs) => signIfPrivateKey(service, args, async (a: PublishContractArgs) => {\n\n        const {dataHex, dataPageCount} = generateDataStack(a.data || []);\n        const feeNQT = a.feePlanck || calculateMinimumCreationFee({\n            dataHex,\n            codeHex: a.codeHex\n        }).getPlanck();\n\n        const parameters = {\n            code: a.codeHex,\n            deadline: a.deadline || DefaultDeadline,\n            description: a.description,\n            feeNQT,\n            minActivationAmountNQT: a.activationAmountPlanck,\n            name: a.name,\n            publicKey: a.senderPublicKey,\n            data: dataHex || undefined,\n            dpages: dataPageCount || 1,\n            cspages: 1,\n            uspages: 1,\n            broadcast: true,\n        };\n\n        return service.send<UnsignedTransaction>('createATProgram', parameters);\n    });\n", "/**\n * Copyright (c) 2021,2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {PublishContractByReferenceArgs} from '../../../typings/args';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {generateDataStack} from '@signumjs/contracts';\nimport {calculateMinimumCreationFee} from '@signumjs/contracts';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.publishContractByReference}\n*\n* @category factories\n*/\nexport const publishContractByReference = (service: ChainService) =>\n    (args: PublishContractByReferenceArgs) =>\n        signIfPrivateKey(service, args, async (a: PublishContractByReferenceArgs) => {\n\n            const {dataHex} = generateDataStack(a.data || []);\n            const feeNQT = a.feePlanck || calculateMinimumCreationFee({\n                dataHex,\n            }).getPlanck();\n\n            const parameters = {\n                deadline: a.deadline || DefaultDeadline,\n                description: a.description,\n                feeNQT,\n                referencedTransactionFullHash: a.referencedTransactionHash,\n                name: a.name,\n                publicKey: a.senderPublicKey,\n                data: dataHex || undefined,\n                broadcast: true,\n            };\n\n            return service.send<UnsignedTransaction>('createATProgram', parameters);\n        });\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {CallContractMethodArgs} from '../../../typings/args';\nimport {TransactionId} from '../../../typings/transactionId';\nimport {AttachmentMessage} from '../../../typings/attachment';\nimport {sendAmountToSingleRecipient} from '../transaction';\nimport {generateMethodCall} from '@signumjs/contracts';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {transferAsset} from '../asset';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.callContractMethod}\n *\n * @category factories\n */\nexport const callContractMethod = (service: ChainService) =>\n    async (args: CallContractMethodArgs): Promise<TransactionId | UnsignedTransaction> => {\n\n        const callMessage = generateMethodCall({\n            methodId: args.methodId,\n            methodArgs: args.methodArgs,\n        });\n\n        const attachment = new AttachmentMessage({\n            message: callMessage,\n            messageIsText: false,\n        });\n\n        if (args.assetId && args.assetQuantity) {\n            return transferAsset(service)({\n                amountPlanck: args.assetId,\n                assetId: args.assetId,\n                quantity: args.assetQuantity,\n                attachment,\n                deadline: args.deadline,\n                senderPublicKey: args.senderPublicKey,\n                referencedTransactionFullHash: args.referencedTransactionFullHash,\n                feePlanck: args.feePlanck,\n                recipientId: args.contractId,\n                senderPrivateKey: args.senderPrivateKey,\n                skipAdditionalSecurityCheck: args.skipAdditionalSecurityCheck\n            });\n        }\n\n        return sendAmountToSingleRecipient(service)({\n            amountPlanck: args.amountPlanck,\n            attachment,\n            deadline: args.deadline,\n            feePlanck: args.feePlanck,\n            recipientId: args.contractId,\n            senderPrivateKey: args.senderPrivateKey,\n            senderPublicKey: args.senderPublicKey,\n            referencedTransactionFullHash: args.referencedTransactionFullHash,\n            skipAdditionalSecurityCheck: args.skipAdditionalSecurityCheck\n        });\n\n    };\n", "/**\n * Original (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {AddAssetTreasuryAccountArgs} from '../../../typings/args';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.addAssetTreasuryAccount}\n * \n*\n* @category factories\n*/\nexport const addAssetTreasuryAccount = (service: ChainService) =>\n    (args: AddAssetTreasuryAccountArgs) => signIfPrivateKey(service, args, async (a: AddAssetTreasuryAccountArgs) => {\n            let parameters = {\n                recipient: a.accountId,\n                publicKey: a.senderPublicKey,\n                recipientPublicKey: a.recipientPublicKey || undefined,\n                referencedTransactionFullHash: a.referencedTransactionFullHash,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('addAssetTreasuryAccount', parameters);\n        }\n    );\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {TransferAssetArgs} from '../../../typings/args/transferAssetArgs';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.transferAsset}\n * \n*\n* @category factories\n*/\nexport const transferAsset = (service: ChainService) =>\n    (args: TransferAssetArgs) => signIfPrivateKey(service, args, async (a: TransferAssetArgs) => {\n            let parameters = {\n                asset: a.assetId,\n                quantityQNT: a.quantity,\n                publicKey: a.senderPublicKey,\n                recipient: a.recipientId,\n                recipientPublicKey: a.recipientPublicKey || undefined,\n                feeNQT: a.feePlanck,\n                amountNQT: a.amountPlanck || undefined,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash,\n                skipAdditionalSecurityCheck: a.skipAdditionalSecurityCheck\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('transferAsset', parameters);\n        }\n    );\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {TransferAssetArgs} from '../../../typings/args/transferAssetArgs';\nimport {transferAsset} from './transferAsset';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.burnAsset}\n * \n*\n* @category factories\n*/\nexport const burnAsset = (service: ChainService) =>\n    (args: Omit<TransferAssetArgs, 'recipientPublicKey' | 'recipientId'>) => transferAsset(service)({\n        ...args,\n        recipientId: '0',\n        recipientPublicKey: undefined\n    });\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {CancelOrderArgs} from '../../../typings/args';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\ninterface GenericCancelOrderArgs extends CancelOrderArgs {\n    type: 'bid' | 'ask';\n}\n\n/**\n * @ignore\n * This is an internal helper\n * See details at {@link AssetApi.cancelAskOrder} {@link AssetApi.cancelBidOrder}\n*\n* @category factories\n*/\nexport const cancelOrder = (service: ChainService) =>\n    (args: GenericCancelOrderArgs) => signIfPrivateKey(service, args, async (a: GenericCancelOrderArgs) => {\n\n        let parameters = {\n            order: a.order,\n            publicKey: a.senderPublicKey,\n            feeNQT: a.feePlanck,\n            deadline: a.deadline || DefaultDeadline,\n            referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n        };\n\n        if (a.attachment) {\n            parameters = createParametersFromAttachment(a.attachment, parameters);\n        }\n\n        const method = a.type === 'ask' ? 'cancelAskOrder' : 'cancelBidOrder';\n        return service.send<UnsignedTransaction>(method, parameters);\n\n    });\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {CancelOrderArgs} from '../../../typings/args';\nimport {cancelOrder} from './cancelOrder';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.cancelAskOrder}.\n *\n * See details at {@link AssetApi.cancelAskOrder}\n * \n*\n* @category factories\n*/\nexport const cancelAskOrder = (service: ChainService) =>\n    async (args: CancelOrderArgs) =>\n        cancelOrder(service)({\n            type: 'ask',\n            ...args,\n        });\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {CancelOrderArgs} from '../../../typings/args';\nimport {cancelOrder} from './cancelOrder';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.cancelBidOrder}.\n *\n * See details at {@link AssetApi.cancelBidOrder}\n * \n*\n* @category factories\n*/\nexport const cancelBidOrder = (service: ChainService) =>\n    async (args: CancelOrderArgs) =>\n        cancelOrder(service)({\n            type: 'bid',\n            ...args,\n        });\n", "/**\n * Original (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {DistributeToAssetHoldersArgs} from '../../../typings/args';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.distributeToAssetHolders}\n * \n*\n* @category factories\n*/\nexport const distributeToAssetHolders = (service: ChainService) =>\n    (args: DistributeToAssetHoldersArgs) => signIfPrivateKey(service, args, async (a: DistributeToAssetHoldersArgs) => {\n\n            if ((a.additionalAssetId && !a.additionalAssetQuantity) ||\n                (!a.additionalAssetId && a.additionalAssetQuantity)) {\n                throw new Error('When given \"additionalAssetId\", you need to provide \"additionalAssetQuantity\" also, and vice-versa');\n            }\n\n            let parameters = {\n                asset: a.assetId,\n                quantityMinimumQNT: a.minimumHoldQuantity || '0',\n                amountNQT: a.totalAmountPlanck || undefined,\n                assetToDistribute: a.additionalAssetId || undefined,\n                quantityQNT: a.additionalAssetQuantity || undefined,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                publicKey: a.senderPublicKey,\n                referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('distributeToAssetHolders', parameters);\n        }\n    );\n", "/**\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service';\nimport {AssetList} from '../../../typings/assetList';\nimport {GetAllAssetsArgs} from '../../../typings/args/getAllAssetsArgs';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAllAssets}\n*\n* @category factories\n*/\nexport const getAllAssets = (service: ChainService):\n    (args: GetAllAssetsArgs) => Promise<AssetList> =>\n    (args: GetAllAssetsArgs): Promise<AssetList> => service.query<AssetList>('getAllAssets', args);\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAllTradesArgs} from '../../../typings/args/getAllTradesArgs';\nimport {AssetTradeList} from '../../../typings/assetTradeList';\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAllTrades}\n*\n* @category factories\n*/\nexport const getAllTrades = (service: ChainService):\n    (args: GetAllTradesArgs) => Promise<AssetTradeList> =>\n    async (args: GetAllTradesArgs): Promise<AssetTradeList> => {\n        const params = {\n            ...args,\n            includeAssetInfo: true\n        };\n        return service.query<AssetTradeList>('getAllTrades', params);\n    };\n", "/**\n * Modified work Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Asset} from '../../../typings/asset';\nimport {GetAssetArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAsset}\n * \n * @category factories\n * */\nexport const getAsset = (service: ChainService):\n    (args: GetAssetArgs) => Promise<Asset> =>\n    (args: GetAssetArgs): Promise<Asset> =>\n        service.query('getAsset', {\n            asset: args.assetId,\n            quantityMinimumQNT: args.minimumQuantity,\n            heightStart: args.heightStart,\n            heightEnd: args.heightEnd\n        });\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetHoldersArgs} from '../../../typings/args/';\nimport {AssetAccountList} from '../../../typings/assetAccountList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetHolders}\n*\n* @category factories\n*/\nexport const getAssetHolders = (service: ChainService):\n    (args: GetAssetHoldersArgs) => Promise<AssetAccountList> =>\n    (args: GetAssetHoldersArgs): Promise<AssetAccountList> => {\n\n        const {assetId, ignoreTreasuryAccount = false, firstIndex, lastIndex, minimumQuantity} = args;\n\n\n        const params = {\n            asset: assetId,\n            ignoreTreasury: ignoreTreasuryAccount,\n            quantityMinimumQNT: minimumQuantity,\n            firstIndex,\n            lastIndex\n        };\n\n        return service.query('getAssetAccounts', params);\n\n    };\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {AssetList} from '../../../typings/assetList';\nimport {GetAssetsByIssuerArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetsByIssuer}\n*\n* @category factories\n*/\nexport const getAssetsByIssuer = (service: ChainService):\n    (args: GetAssetsByIssuerArgs) => Promise<AssetList> =>\n    (args: GetAssetsByIssuerArgs): Promise<AssetList> => {\n            const params = {\n                account: args.accountId,\n                firstIndex: args.firstIndex,\n                lastIndex: args.lastIndex,\n                heightStart: args.heightStart,\n                heightEnd: args.heightEnd,\n                skipZeroVolume: args.skipZeroVolume,\n            };\n        return service.query<AssetList>('getAssetsByIssuer', params);\n    };\n", "/**\n * Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {AssetList} from '../../../typings/assetList';\nimport {GetAssetsByIssuerArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetsByOwner}\n*\n* @category factories\n*/\nexport const getAssetsByOwner = (service: ChainService):\n    (args: GetAssetsByIssuerArgs) => Promise<AssetList> =>\n    (args: GetAssetsByIssuerArgs): Promise<AssetList> => {\n            const params = {\n                account: args.accountId,\n                firstIndex: args.firstIndex,\n                lastIndex: args.lastIndex,\n                heightStart: args.heightStart,\n                heightEnd: args.heightEnd,\n                skipZeroVolume: args.skipZeroVolume,\n            };\n        return service.query<AssetList>('getAssetsByOwner', params);\n    };\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {AssetList} from '../../../typings/assetList';\nimport {GetAssetsByNameArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetsByName}\n*\n* @category factories\n*/\nexport const getAssetsByName = (service: ChainService):\n    (args: GetAssetsByNameArgs) => Promise<AssetList> =>\n    (args: GetAssetsByNameArgs): Promise<AssetList> => {\n            const params = {\n                name: args.name,\n                firstIndex: args.firstIndex,\n                lastIndex: args.lastIndex,\n                heightStart: args.heightStart,\n                heightEnd: args.heightEnd,\n                skipZeroVolume: args.skipZeroVolume,\n            };\n        return service.query<AssetList>('getAssetsByName', params);\n    };\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetTradesArgs} from '../../../typings/args';\nimport {AssetTradeList} from '../../../typings/assetTradeList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetTrades}\n*\n* @category factories\n*/\nexport const getAssetTrades = (service: ChainService):\n    (args: GetAssetTradesArgs) => Promise<AssetTradeList> =>\n    async (args: GetAssetTradesArgs): Promise<AssetTradeList> => {\n\n        const {assetId, accountId, firstIndex, lastIndex, includeAssetInfo = true} = args;\n\n        const params = {\n            asset: assetId,\n            account: accountId,\n            includeAssetInfo,\n            firstIndex,\n            lastIndex\n        };\n        return service.query<AssetTradeList>('getTrades', params);\n    };\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetTradesPerAccountArgs} from '../../../typings/args';\nimport {getAssetTrades} from './getAssetTrades';\nimport {AssetTradeList} from '../../../typings/assetTradeList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetTransfersPerAccount}\n*\n* @category factories\n*/\nexport const getAssetTradesPerAccount = (service: ChainService):\n    (args: GetAssetTradesPerAccountArgs) => Promise<AssetTradeList> =>\n    (args: GetAssetTradesPerAccountArgs): Promise<AssetTradeList> => getAssetTrades(service)({\n        accountId: args.accountId,\n        firstIndex: args.firstIndex,\n        lastIndex: args.lastIndex\n    });\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetTradesPerAssetArgs} from '../../../typings/args';\nimport {getAssetTrades} from './getAssetTrades';\nimport {AssetTradeList} from '../../../typings/assetTradeList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetTradesPerAsset}\n*\n* @category factories\n*/\nexport const getAssetTradesPerAsset = (service: ChainService):\n    (args: GetAssetTradesPerAssetArgs) => Promise<AssetTradeList> =>\n    (args: GetAssetTradesPerAssetArgs): Promise<AssetTradeList> => getAssetTrades(service)({\n        assetId: args.assetId,\n        firstIndex: args.firstIndex,\n        lastIndex: args.lastIndex\n    });\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {AssetTransferList} from '../../../typings/assetTransferList';\nimport {GetAssetTransfersArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetTransfers}\n*\n* @category factories\n*/\nexport const getAssetTransfers = (service: ChainService):\n    (args: GetAssetTransfersArgs) => Promise<AssetTransferList> =>\n    (args: GetAssetTransfersArgs): Promise<AssetTransferList> => {\n\n\n        if (!args.assetId || !args.accountId) {\n            throw new Error('Need at least argument \"assetId\" or \"accountId\"');\n        }\n\n        const {assetId, accountId, firstIndex, lastIndex} = args;\n\n\n        const params = {\n            asset: assetId,\n            account: accountId,\n            includeAssetInfo: true,\n            firstIndex,\n            lastIndex\n        };\n\n        return service.query('getAssetTransfers', params);\n\n    };\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {AssetTransferList} from '../../../typings/assetTransferList';\nimport {GetAssetTransfersPerAccountArgs} from '../../../typings/args';\nimport {getAssetTransfers} from './getAssetTransfers';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetTransfersPerAccount}\n*\n* @category factories\n*/\nexport const getAssetTransfersPerAccount = (service: ChainService):\n    (args: GetAssetTransfersPerAccountArgs) => Promise<AssetTransferList> =>\n    (args: GetAssetTransfersPerAccountArgs): Promise<AssetTransferList> => getAssetTransfers(service)({\n        accountId: args.accountId,\n        firstIndex: args.firstIndex,\n        lastIndex: args.lastIndex\n    });\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {AssetTransferList} from '../../../typings/assetTransferList';\nimport {GetAssetTransfersPerAssetArgs} from '../../../typings/args';\nimport {getAssetTransfers} from './getAssetTransfers';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetTransfersPerAsset}\n*\n* @category factories\n*/\nexport const getAssetTransfersPerAsset = (service: ChainService):\n    (args: GetAssetTransfersPerAssetArgs) => Promise<AssetTransferList> =>\n    (args: GetAssetTransfersPerAssetArgs): Promise<AssetTransferList> => getAssetTransfers(service)({\n        assetId: args.assetId,\n        firstIndex: args.firstIndex,\n        lastIndex: args.lastIndex\n    });\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersArgs} from '../../../typings/args';\nimport {AssetAskOrderList} from '../../../typings/assetAskOrderList';\nimport {AssetBidOrderList} from '../../../typings/assetBidOrderList';\n\n/**\n * @ignore\n*/\ninterface GetGenericAssetOpenOrders extends GetAssetOpenOrdersArgs {\n    type: 'bid' | 'ask';\n}\n\n/**\n * @ignore\n * This is an internal helper\n * See details at {@link AssetApi.getOpenAskOrders} {@link AssetApi.getOpenBidOrders}\n*\n* @category factories\n*/\nexport const getOpenOrders = (service: ChainService):\n    (args: GetGenericAssetOpenOrders) => Promise<AssetAskOrderList | AssetBidOrderList> =>\n    async (args: GetGenericAssetOpenOrders): Promise<AssetAskOrderList | AssetBidOrderList> => {\n\n        const {type, firstIndex, lastIndex} = args;\n\n        const params = {\n            firstIndex,\n            lastIndex\n        };\n        switch (type) {\n            case 'ask':\n                return service.query<AssetAskOrderList>('getAllOpenAskOrders', params);\n            case 'bid':\n                return service.query<AssetBidOrderList>('getAllOpenBidOrders', params);\n        }\n\n    };\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersArgs} from '../../../typings/args';\nimport {AssetAskOrderList} from '../../../typings/assetAskOrderList';\nimport {getOpenOrders} from './getOpenOrders';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.getOpenAskOrders}.\n *\n * See details at {@link AssetApi.getOpenAskOrders}\n * \n*\n* @category factories\n*/\nexport const getOpenAskOrders = (service: ChainService):\n    (args: GetAssetOpenOrdersArgs) => Promise<AssetAskOrderList> =>\n    (args: GetAssetOpenOrdersArgs): Promise<AssetAskOrderList> =>\n        getOpenOrders(service)({...args, type: 'ask'}) as Promise<AssetAskOrderList>;\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersPerAccountArgs} from '../../../typings/args';\nimport {AssetAskOrderList} from '../../../typings/assetAskOrderList';\nimport {AssetBidOrderList} from '../../../typings/assetBidOrderList';\n\n/**\n * @ignore\n */\ninterface GetGenericAssetOpenOrdersPerAccount extends GetAssetOpenOrdersPerAccountArgs {\n    type: 'bid' | 'ask';\n}\n\n/**\n * @ignore\n * This is an internal helper\n * See details at {@link AssetApi.getOpenAskOrders} {@link AssetApi.getOpenBidOrders}\n*\n* @category factories\n*/\nexport const getOpenOrdersPerAccount = (service: ChainService):\n    (args: GetGenericAssetOpenOrdersPerAccount) => Promise<AssetAskOrderList | AssetBidOrderList> =>\n    async (args: GetGenericAssetOpenOrdersPerAccount): Promise<AssetAskOrderList | AssetBidOrderList> => {\n\n        const {type, firstIndex, lastIndex, accountId, assetId} = args;\n\n        const params = {\n            account: accountId,\n            asset: assetId,\n            firstIndex,\n            lastIndex\n        };\n        switch (type) {\n            case 'ask':\n                return service.query<AssetAskOrderList>('getAccountCurrentAskOrders', params);\n            case 'bid':\n                return service.query<AssetBidOrderList>('getAccountCurrentBidOrders', params);\n        }\n\n    };\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersPerAccountArgs} from '../../../typings/args';\nimport {AssetAskOrderList} from '../../../typings/assetAskOrderList';\nimport {getOpenOrdersPerAccount} from './getOpenOrdersPerAccount';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.getOpenAskOrdersPerAccount}.\n *\n * See details at {@link AssetApi.getOpenAskOrdersPerAccount}\n * \n*\n* @category factories\n*/\nexport const getOpenAskOrdersPerAccount = (service: ChainService):\n    (args: GetAssetOpenOrdersPerAccountArgs) => Promise<AssetAskOrderList> =>\n    (args: GetAssetOpenOrdersPerAccountArgs): Promise<AssetAskOrderList> =>\n        getOpenOrdersPerAccount(service)({...args, type: 'ask'}) as Promise<AssetAskOrderList>;\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersPerAssetArgs} from '../../../typings/args';\nimport {AssetAskOrderList} from '../../../typings/assetAskOrderList';\nimport {AssetBidOrderList} from '../../../typings/assetBidOrderList';\n\n/**\n * @ignore\n */\ninterface GetGenericAssetOpenOrdersPerAsset extends GetAssetOpenOrdersPerAssetArgs {\n    type: 'bid' | 'ask';\n}\n\n/**\n * @ignore\n * This is an internal helper\n * See details at {@link AssetApi.getOpenAskOrders} {@link AssetApi.getOpenBidOrders}\n*\n* @category factories\n*/\nexport const getOpenOrdersPerAsset = (service: ChainService):\n    (args: GetGenericAssetOpenOrdersPerAsset) => Promise<AssetAskOrderList | AssetBidOrderList> =>\n    async (args: GetGenericAssetOpenOrdersPerAsset): Promise<AssetAskOrderList | AssetBidOrderList> => {\n\n        const {type, firstIndex, lastIndex, assetId} = args;\n\n        const params = {\n            asset: assetId,\n            firstIndex,\n            lastIndex\n        };\n        switch (type) {\n            case 'ask':\n                return service.query<AssetAskOrderList>('getAskOrders', params);\n            case 'bid':\n                return service.query<AssetBidOrderList>('getBidOrders', params);\n        }\n\n    };\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersPerAssetArgs} from '../../../typings/args';\nimport {AssetAskOrderList} from '../../../typings/assetAskOrderList';\nimport {getOpenOrdersPerAsset} from './getOpenOrdersPerAsset';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.getOpenAskOrdersPerAsset}.\n *\n * See details at {@link AssetApi.getOpenAskOrdersPerAsset}\n * \n*\n* @category factories\n*/\nexport const getOpenAskOrdersPerAsset = (service: ChainService):\n    (args: GetAssetOpenOrdersPerAssetArgs) => Promise<AssetAskOrderList> =>\n    (args: GetAssetOpenOrdersPerAssetArgs): Promise<AssetAskOrderList> =>\n        getOpenOrdersPerAsset(service)({...args, type: 'ask'}) as Promise<AssetAskOrderList>;\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersArgs} from '../../../typings/args';\nimport {AssetBidOrderList} from '../../../typings/assetBidOrderList';\nimport {getOpenOrders} from './getOpenOrders';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.getOpenBidOrders}.\n *\n * See details at {@link AssetApi.getOpenBidOrders}\n * \n*\n* @category factories\n*/\nexport const getOpenBidOrders = (service: ChainService):\n    (args: GetAssetOpenOrdersArgs) => Promise<AssetBidOrderList> =>\n    (args: GetAssetOpenOrdersArgs): Promise<AssetBidOrderList> =>\n        getOpenOrders(service)({...args, type: 'bid'}) as Promise<AssetBidOrderList>;\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersPerAccountArgs} from '../../../typings/args';\nimport {AssetBidOrderList} from '../../../typings/assetBidOrderList';\nimport {getOpenOrdersPerAccount} from './getOpenOrdersPerAccount';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.getOpenBidOrdersPerAccount}.\n *\n * See details at {@link AssetApi.getOpenBidOrdersPerAccount}\n * \n*\n* @category factories\n*/\nexport const getOpenBidOrdersPerAccount = (service: ChainService):\n    (args: GetAssetOpenOrdersPerAccountArgs) => Promise<AssetBidOrderList> =>\n    (args: GetAssetOpenOrdersPerAccountArgs): Promise<AssetBidOrderList> =>\n        getOpenOrdersPerAccount(service)({...args, type: 'bid'}) as Promise<AssetBidOrderList>;\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport {GetAssetOpenOrdersPerAssetArgs} from '../../../typings/args';\nimport {AssetBidOrderList} from '../../../typings/assetBidOrderList';\nimport {getOpenOrdersPerAsset} from './getOpenOrdersPerAsset';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.getOpenBidOrdersPerAsset}.\n *\n * See details at {@link AssetApi.getOpenBidOrdersPerAsset}\n * \n*\n* @category factories\n*/\nexport const getOpenBidOrdersPerAsset = (service: ChainService):\n    (args: GetAssetOpenOrdersPerAssetArgs) => Promise<AssetBidOrderList> =>\n    (args: GetAssetOpenOrdersPerAssetArgs): Promise<AssetBidOrderList> =>\n        getOpenOrdersPerAsset(service)({...args, type: 'bid'}) as Promise<AssetBidOrderList>;\n", "/**\n * Original work Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service';\nimport { GetTradeHistoryPerAccountArgs} from '../../../typings/args';\nimport {TradeHistory} from '../../../typings/tradeHistory';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.getAssetTransfersPerAccount}\n*\n* @category factories\n*/\nexport const getTradeHistoryPerAccount = (service: ChainService):\n    (args: GetTradeHistoryPerAccountArgs) => Promise<TradeHistory> =>\n    (args: GetTradeHistoryPerAccountArgs): Promise<TradeHistory> => {\n            const {accountId, assetId, firstIndex, lastIndex} = args;\n\n            const params = {\n                asset: assetId,\n                account: accountId,\n                firstIndex,\n                lastIndex\n            };\n\n            return service.query<TradeHistory>('getTradeJournal', params);\n\n    };\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {IssueAssetArgs} from '../../../typings/args';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.issueAsset}\n *\n * @category factories\n */\nexport const issueAsset = (service: ChainService) =>\n    (args: IssueAssetArgs) => signIfPrivateKey(service, args,\n        async (a: IssueAssetArgs) => {\n            let parameters = {\n                name: a.name,\n                description: a.description,\n                quantityQNT: a.quantity,\n                decimals: a.decimals,\n                publicKey: a.senderPublicKey,\n                feeNQT: a.feePlanck,\n                mintable: a.mintable,\n                deadline: a.deadline || DefaultDeadline,\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('issueAsset', parameters);\n        });\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {MintAssetArgs} from '../../../typings/args';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.mintAsset}\n * \n*\n* @category factories\n*/\nexport const mintAsset = (service: ChainService) =>\n    (args: MintAssetArgs) => signIfPrivateKey(service, args,\n        async (a: MintAssetArgs) => {\n            let parameters = {\n                asset: a.assetId,\n                quantityQNT: a.quantity,\n                publicKey: a.senderPublicKey,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('mintAsset', parameters);\n        });\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {PlaceOrderArgs} from '../../../typings/args';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {convertPlanckToAssetPrice} from '@signumjs/util';\nimport {Asset} from '../../../typings/asset';\n\ninterface GenericPlaceOrderArgs extends PlaceOrderArgs {\n    type: 'bid' | 'ask';\n}\n\n/**\n * @ignore\n * This is an internal helper\n * See details at {@link AssetApi.placeAskOrder} {@link AssetApi.placeBidOrder}\n*\n* @category factories\n*/\nexport const placeOrder = (service: ChainService) =>\n    (args: GenericPlaceOrderArgs) =>\n        signIfPrivateKey(service, args, async (a: GenericPlaceOrderArgs) => {\n\n            let decimals = args.decimals;\n            if (decimals ===  undefined) {\n                const  asset = await service.query<Asset>('getAsset', {asset: args.assetId});\n                decimals = asset.decimals;\n            }\n\n            let parameters = {\n                asset: a.assetId,\n                priceNQT: convertPlanckToAssetPrice(a.pricePlanck, decimals),\n                quantityQNT: a.quantity,\n                publicKey: a.senderPublicKey,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash || undefined\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            const method = a.type === 'ask' ? 'placeAskOrder' : 'placeBidOrder';\n            return service.send<UnsignedTransaction>(method, parameters);\n        });\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {PlaceOrderArgs} from '../../../typings/args';\nimport {placeOrder} from './placeOrder';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.placeAskOrder}.\n *\n * See details at {@link AssetApi.placeAskOrder}\n * \n*\n* @category factories\n*/\nexport const placeAskOrder = (service: ChainService) =>\n    async (args: PlaceOrderArgs) =>\n        placeOrder(service)({\n            type: 'ask',\n            ...args,\n        });\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {PlaceOrderArgs} from '../../../typings/args';\nimport {placeOrder} from './placeOrder';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi.placeBidOrder}.\n *\n * See details at {@link AssetApi.placeBidOrder}\n * \n*\n* @category factories\n*/\nexport const placeBidOrder = (service: ChainService) =>\n    async (args: PlaceOrderArgs) =>\n        placeOrder(service)({\n            type: 'bid',\n            ...args,\n        });\n", "/**\n * Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {TransferAssetOwnershipArgs} from '../../../typings/args';\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.transferAssetOwnership}\n * \n*\n* @category factories\n*/\nexport const transferAssetOwnership = (service: ChainService) =>\n    (args: TransferAssetOwnershipArgs) => signIfPrivateKey(service, args, async (a: TransferAssetOwnershipArgs) => {\n            let parameters = {\n                publicKey: a.senderPublicKey,\n                recipient: a.recipientId,\n                recipientPublicKey: a.recipientPublicKey || undefined,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('transferAssetOwnership', parameters);\n        }\n    );\n", "/**\n * Copyright (c) 2020 Burst Apps Team\n * Modified (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {UnsignedTransaction} from '../../../typings/unsignedTransaction';\nimport {DefaultDeadline} from '../../../constants';\nimport {createParametersFromAttachment} from '../../../internal/createParametersFromAttachment';\nimport {signIfPrivateKey} from '../../../internal/signIfPrivateKey';\nimport {MultioutAssetQuantities} from '../../../typings/multioutAssetQuantities';\nimport {TransferMultipleAssetsArgs} from '../../../typings/args';\n\n\nfunction mountAssetQuantitiesString(assetQuantities: MultioutAssetQuantities[]): string {\n    return assetQuantities.map(({quantity, assetId}) => `${assetId}:${quantity}`).join(';');\n}\n\nfunction assertCorrectAssetQuantities(assetQuantities: MultioutAssetQuantities[]) {\n    const MaxItems = 4;\n    const MinItems = 2;\n    if (assetQuantities.length < MinItems) {\n        throw new Error(`At least ${MinItems} asset-quantities are needed`);\n    }\n    if (assetQuantities.length > MaxItems) {\n        throw new Error(`At maximum ${MaxItems} asset-quantities are allowed`);\n    }\n    const assetIds = new Set<string>();\n    for (const ra of assetQuantities) {\n        if (assetIds.has(ra.assetId)) {\n            throw new Error('Duplicate assetId found');\n        }\n        assetIds.add(ra.assetId);\n    }\n}\n\n/**\n *\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.transferMultipleAssets}\n * \n*\n* @category factories\n*/\nexport const transferMultipleAssets = (service: ChainService) =>\n    (args: TransferMultipleAssetsArgs) => signIfPrivateKey(service, args, async (a: TransferMultipleAssetsArgs) => {\n\n            assertCorrectAssetQuantities(args.assetQuantities);\n            const assetIdsAndQuantities = mountAssetQuantitiesString(args.assetQuantities);\n\n            let parameters = {\n                assetIdsAndQuantities,\n                amountNQT: a.amountPlanck,\n                publicKey: a.senderPublicKey,\n                recipient: a.recipientId,\n                recipientPublicKey: a.recipientPublicKey || undefined,\n                feeNQT: a.feePlanck,\n                deadline: a.deadline || DefaultDeadline,\n                referencedTransactionFullHash: a.referencedTransactionFullHash\n            };\n\n            if (a.attachment) {\n                parameters = createParametersFromAttachment(a.attachment, parameters);\n            }\n\n            return service.send<UnsignedTransaction>('transferAssetMulti', parameters);\n        }\n    );\n", "/**\n * Original work Copyright (c) 2023 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {Amount} from '@signumjs/util';\nimport {getAsset} from './getAsset';\nimport {CalculateDistributionFeeArgs} from '../../../typings/args/calculateDistributionFeeArgs';\nimport {DistributionFee} from '../../../typings/distributionFee';\n\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link AssetApi}.\n *\n * See details at {@link AssetApi.calculateDistributionFee}\n * @see also {@link AssetApi.distributeToAssetHolders}\n *\n*\n* @category factories\n*/\nexport const calculateDistributionFee = (service: ChainService):\n    (args: CalculateDistributionFeeArgs) => Promise<DistributionFee> =>\n    async (args): Promise<DistributionFee> => {\n        const {assetId, minimumQuantity} = args;\n        const  {numberOfAccounts} = await getAsset(service)({assetId, minimumQuantity});\n\n        const minFee = Amount.fromSigna(0.01);\n        const feePerHolders = minFee.clone().multiply(numberOfAccounts);\n        const fee = feePerHolders.greater(minFee) ? feePerHolders : minFee;\n\n        return {\n            fee,\n            numberOfAccounts,\n        };\n    };\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {GetSingleContractMapValueArgs} from '../../../typings/args';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.getSingleContractMapValue}\n*\n* @category factories\n*/\nexport const getSingleContractMapValue = (service: ChainService):\n    (args: GetSingleContractMapValueArgs) => Promise<{value: string}> =>\n    (args: GetSingleContractMapValueArgs): Promise<{value: string}> => {\n        const params = {\n            at: args.contractId,\n            key1: args.key1,\n            key2: args.key2\n        };\n\n        return service.query('getATMapValue', params);\n    };\n", "/**\n * Copyright (c) 2022 Signum Network\n */\nimport {ChainService} from '../../../service/chainService';\nimport {GetContractMapValuesByFirstKeyArgs } from '../../../typings/args';\nimport {ContractMapValueList} from '../../../typings/contractMapValueList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.getContractMapValuesByFirstKey}\n*\n* @category factories\n*/\nexport const getContractMapValuesByFirstKey = (service: ChainService):\n    (args: GetContractMapValuesByFirstKeyArgs) => Promise<ContractMapValueList> =>\n    (args: GetContractMapValuesByFirstKeyArgs): Promise<ContractMapValueList> => {\n        const params = {\n            at: args.contractId,\n            key1: args.key1,\n        };\n\n        return service.query('getATMapValues', params);\n    };\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n */\nimport {ChainService} from '../../../service/chainService';\nimport {GetAllContractsByCodeHashArgs} from '../../../typings/args';\nimport {ContractList} from '../../../typings/contractList';\n\n/**\n * Use with {@link ApiComposer} and belongs to {@link ContractApi}.\n *\n * See details at {@link ContractApi.getAllContractIds}\n*\n* @category factories\n*/\nexport const getAllContractsByCodeHash = (service: ChainService):\n    (args: GetAllContractsByCodeHashArgs) => Promise<ContractList> =>\n    (args: GetAllContractsByCodeHashArgs): Promise<ContractList> => {\n        const params = {\n            machineCodeHashId: args.machineCodeHash,\n            includeDetails: args.includeDetails || false,\n            firstIndex: args.firstIndex,\n            lastIndex: args.lastIndex,\n\n        };\n\n        return service.query('getATs', params);\n    };\n", "/**\n * Copyright (c) 2019 Burst Apps Team\n * Modified (c) 2021,2022,2023,2024 Signum Network\n */\nimport {ChainService, ChainServiceSettings} from '../service';\nimport {Api} from '../typings/api';\nimport {ApiVersion} from '../constants/apiVersion';\nimport {ApiComposer} from './apiComposer';\nimport {\n    getBlockByHeight,\n    getBlockById,\n    getBlockByTimestamp,\n    getBlockId,\n    getBlocks\n} from './factories/block';\nimport {\n    getBlockchainStatus,\n    getMiningInfo,\n    getPeer,\n    getPeers,\n    getServerStatus,\n    getTime,\n    getSuggestedFees,\n    getNetworkInfo,\n} from './factories/network';\nimport {\n    sendEncryptedMessage,\n    sendMessage,\n} from './factories/message';\nimport {\n    generateSendTransactionQRCode,\n    generateSendTransactionQRCodeAddress,\n    getAccount,\n    getAccountBalance,\n    getAccountBlockIds,\n    getAccountBlocks,\n    getAccountSubscriptions,\n    getAccountTransactions,\n    getSubscriptionsToAccount,\n    getUnconfirmedAccountTransactions,\n    setAccountInfo,\n    setAlias,\n    setRewardRecipient,\n    getRewardRecipient,\n    addCommitment,\n    removeCommitment,\n    getAccountTransactionsBetweenSenderAndRecipient,\n    getAccountTransactionsFromSenderToRecipient,\n    getAccountTransactionsToRecipient,\n    getAccountTransactionsFromSender,\n} from './factories/account';\nimport {\n    getAliasById,\n    getAliases,\n    getAliasByName,\n    getAliasesOnSale,\n    sellAlias,\n    buyAlias,\n    searchAliasesByName,\n    getTopLevelDomains,\n    buyTopLevelDomain\n} from './factories/alias';\nimport {\n    callContractMethod,\n    getAllContractIds,\n    getContract, getContractMapValuesByFirstKey,\n    getContractsByAccount, getSingleContractMapValue,\n    publishContract,\n    publishContractByReference,\n    getAllContractsByCodeHash\n} from './factories/contract';\nimport {\n    broadcastTransaction,\n    cancelSubscription,\n    createSubscription,\n    getTransaction,\n    sendAmountToMultipleRecipients,\n    sendAmountToSingleRecipient,\n    sendSameAmountToMultipleRecipients,\n    getSubscription,\n    getUnconfirmedTransactions,\n    signAndBroadcastTransaction,\n    parseTransactionBytes,\n    getDistributionAmountsFromTransaction,\n    getTransactionByFullHash,\n    getSubscriptionPayments\n} from './factories/transaction';\nimport {\n    cancelAskOrder,\n    cancelBidOrder,\n    getAllAssets,\n    getAsset,\n    issueAsset,\n    placeAskOrder,\n    placeBidOrder,\n    transferAsset,\n    getAssetHolders,\n    getAssetTransfers,\n    getAssetTransfersPerAccount,\n    getAssetTransfersPerAsset,\n    addAssetTreasuryAccount,\n    distributeToAssetHolders,\n    getAllTrades,\n    mintAsset,\n    getAssetTrades,\n    getAssetTradesPerAccount,\n    getAssetTradesPerAsset,\n    getOpenBidOrders,\n    getOpenAskOrders,\n    getOpenBidOrdersPerAsset,\n    getOpenAskOrdersPerAsset,\n    getOpenBidOrdersPerAccount,\n    getOpenAskOrdersPerAccount,\n    burnAsset,\n    getTradeHistoryPerAccount,\n    getAssetsByIssuer,\n    getAssetsByName,\n    transferMultipleAssets,\n    transferAssetOwnership,\n    calculateDistributionFee, getAssetsByOwner\n} from './factories/asset';\nimport {Http} from '@signumjs/http';\n\n/**\n * Settings for API used in {@link composeApi}\n *\n * */\nexport class ApiSettings {\n    /**\n     * @param nodeHost {string} The url of the peer/node\n     * @param reliableNodeHosts A list of node/peer hosts that can be chosen of,\n     * usually a list of reliable/trusted nodes. This is necessary for the automatic node selection.\n     * @param httpClientOptions {any} The optional request configuration for the passed Http client\n     * @param httpClient {Http} It's possible to add a custom Http client adapter. Default is an Axios based implementation\n     * @param apiVersion {ApiVersion} For future usage.\n     * The default implementation uses axios. In case of a custom client pass your own options.\n     * see [Axios Configuration](https://github.com/axios/axios#request-config)\n     */\n    constructor(\n        public nodeHost: string,\n        public reliableNodeHosts?: string[],\n        public httpClientOptions?: any,\n        public httpClient?: Http,\n        public apiVersion?: ApiVersion,\n    ) {\n    }\n}\n\n/**\n * Composes the API, i.e. setup the environment and mounts the API structure\n * with its functions.\n *\n * ```ts\n * const api = composeApi(new ApiSettings('https://europe.signum.network')), // one of the mainnet nodes\n * ```\n *\n * Note, that this method mounts the __entire__ API, i.e. all available methods. One may also customize the API composition\n * using {@link ApiComposer}.\n *\n * @param settings necessary execution context\n * @return The _complete_ API\n *\n */\nexport function composeApi(settings: ApiSettings): Api {\n\n    const serviceSettings: ChainServiceSettings = {...settings};\n    const service = new ChainService(serviceSettings);\n\n    return ApiComposer\n        .create(service)\n        .withBlockApi({\n            getBlockByTimestamp,\n            getBlockByHeight,\n            getBlockById,\n            getBlockId,\n            getBlocks,\n        })\n        .withNetworkApi({\n            getBlockchainStatus,\n            getMiningInfo,\n            getServerStatus,\n            getSuggestedFees,\n            getPeers,\n            getPeer,\n            getTime,\n            getNetworkInfo\n        })\n        .withTransactionApi({\n            broadcastTransaction,\n            cancelSubscription,\n            createSubscription,\n            getDistributionAmountsFromTransaction,\n            getSubscription,\n            getTransaction,\n            getTransactionByFullHash,\n            getUnconfirmedTransactions,\n            parseTransactionBytes,\n            sendAmountToMultipleRecipients,\n            sendAmountToSingleRecipient,\n            sendSameAmountToMultipleRecipients,\n            signAndBroadcastTransaction,\n            getSubscriptionPayments,\n        })\n        .withMessageApi({\n            sendMessage,\n            sendEncryptedMessage,\n        })\n        .withAccountApi({\n            addCommitment,\n            removeCommitment,\n            getAccountTransactions,\n            getAccountTransactionsFromSenderToRecipient,\n            getAccountTransactionsBetweenSenderAndRecipient,\n            getAccountTransactionsFromSender,\n            getAccountTransactionsToRecipient,\n            getUnconfirmedAccountTransactions,\n            getAccountBalance,\n            generateSendTransactionQRCode,\n            generateSendTransactionQRCodeAddress,\n            setAlias,\n            getAccount,\n            getAccountBlocks,\n            getAccountBlockIds,\n            setAccountInfo,\n            setRewardRecipient,\n            getAccountSubscriptions,\n            getSubscriptionsToAccount,\n            getRewardRecipient,\n            getTradeHistoryPerAccount\n        }).withAliasApi({\n            getAliasByName,\n            getAliasById,\n            setAlias,\n            getAliasesOnSale,\n            buyAlias,\n            sellAlias,\n            getAliases,\n            searchAliasesByName,\n            getTopLevelDomains,\n            buyTopLevelDomain\n        }).withContractApi({\n            getContract,\n            getContractsByAccount,\n            getAllContractIds,\n            publishContract,\n            publishContractByReference,\n            callContractMethod,\n            getSingleContractMapValue,\n            getContractMapValuesByFirstKey,\n            getAllContractsByCodeHash\n        }).withAssetApi({\n            getAsset,\n            getAllTrades,\n            getAssetTrades,\n            getAssetTradesPerAccount,\n            getAssetTradesPerAsset,\n            getAllAssets,\n            issueAsset,\n            mintAsset,\n            burnAsset,\n            transferAsset,\n            transferAssetOwnership,\n            transferMultipleAssets,\n            placeAskOrder,\n            placeBidOrder,\n            cancelAskOrder,\n            cancelBidOrder,\n            getAssetHolders,\n            getAssetTransfers,\n            getAssetTransfersPerAccount,\n            getAssetTransfersPerAsset,\n            addAssetTreasuryAccount,\n            distributeToAssetHolders,\n            getOpenBidOrders,\n            getOpenAskOrders,\n            getOpenBidOrdersPerAsset,\n            getOpenAskOrdersPerAsset,\n            getOpenBidOrdersPerAccount,\n            getOpenAskOrdersPerAccount,\n            getTradeHistoryPerAccount,\n            getAssetsByIssuer,\n            getAssetsByOwner,\n            getAssetsByName,\n            calculateDistributionFee,\n        })\n        .compose();\n}\n", "import {Transaction} from '../typings/transaction';\nimport {AttachmentVersionIdentifier} from '../typings/attachmentVersionIdentifier';\n\n/**\n * Gets the attachment version\n * @param transaction The transaction to be checked\n * @param versionIdentifier The versionIdentifier string, i.e. MultiOutCreation\n * @return 0 if not existent, or version number\n *\n */\nexport function getAttachmentVersion(transaction: Transaction, versionIdentifier: AttachmentVersionIdentifier): number {\n    return transaction?.attachment?.[`version.${versionIdentifier}`] ?? 0;\n}\n", "import {Api} from '../typings/api';\nimport {composeApi} from '../api';\nimport {Http} from '@signumjs/http';\n/**\n * Alias for {@link Api}\n */\nexport declare type Ledger = Api;\n\n\n/**\n * The LedgerSettings to use for {@link LedgerClientFactory}\n */\nexport interface LedgerSettings {\n    /**\n     * Url to the API endpoint of the node, i.e. https://brazil.signum.network or http://localhost:8125\n     */\n    nodeHost: string;\n    /**\n     * A list of node Urls, which can be considered reliable. If you set this list, those nodes are used as automatic fallback in case of\n     * request issues.\n     */\n    reliableNodeHosts?: string[];\n    /**\n     * A custom http client implementation. Default is based on axios\n     */\n    httpClient?: Http;\n    /**\n     * Additional global options for the http client. Default client is axios, see its options here:\n     * see [Axios Configuration](https://github.com/axios/axios#request-config)\n     */\n    httpOptions?: any;\n}\n\n/**\n * Factory for the ledger clients to access a nodes API\n * ```ts\n *  const signumClient = LedgerClientFactory.createClient({nodeHost: \"https://europe.signum.network\"});\n * ```\n *\n * The client gives you access to the Signum {@link Api}\n *\n */\nexport class LedgerClientFactory {\n    /**\n     * Creates a ledger client instance\n     *\n     * @param settings The settings for the ledger\n     */\n    static createClient(settings: LedgerSettings): Ledger {\n        return composeApi(settings);\n    }\n}\n", "import {Transaction} from '../typings/transaction';\nimport {TransactionPaymentSubtype, TransactionType} from '../constants';\n\n/**\n * Checks if a transaction is a multi out transaction with same amounts for each recipient\n * @param transaction Transaction to be checked\n * @return true, if is a multi out transaction\n *\n */\nexport const isMultiOutSameTransaction = (transaction: Transaction): boolean =>\n    transaction.type === TransactionType.Payment && transaction.subtype === TransactionPaymentSubtype.MultiOutSameAmount;\n", "import {Transaction} from '../typings/transaction';\nimport {TransactionPaymentSubtype, TransactionType} from '../constants';\n\n/**\n * Checks if a transaction is a multi out transaction (with different amounts)\n * @param transaction Transaction to be checked\n * @return true, if is a multi out transaction\n *\n */\nexport const isMultiOutTransaction = (transaction: Transaction) =>\n    transaction.type === TransactionType.Payment && transaction.subtype === TransactionPaymentSubtype.MultiOut;\n", "import {Transaction, MultioutRecipientAmount} from '..';\nimport {isMultiOutSameTransaction} from './isMultiOutSameTransaction';\nimport {isMultiOutTransaction} from './isMultiOutTransaction';\nimport {Amount} from '@signumjs/util';\n\n/**\n * Tries to extract recipients and its amounts for multi out payments (different and same amount)\n * @param transaction The transaction\n * @return A list of recipients and their payed amount (in NQT)\n * @throws An exception in case of wrong transaction types\n *\n */\nexport function getRecipientAmountsFromMultiOutPayment(transaction: Transaction): Array<MultioutRecipientAmount> {\n\n    if (isMultiOutSameTransaction(transaction)) {\n\n        const recipients = transaction.attachment.recipients;\n\n        const amount = recipients.length ? Amount.fromPlanck(transaction.amountNQT).divide(recipients.length) : Amount.Zero();\n\n        return transaction.attachment.recipients.map(recipient => ({\n            recipient,\n            amountNQT: amount.getPlanck()\n        }));\n    }\n\n    if (isMultiOutTransaction(transaction)) {\n        return transaction.attachment.recipients.map(r => ({\n            recipient: r[0],\n            amountNQT: r[1],\n        }));\n    }\n\n    throw new Error(`Transaction ${transaction.transaction} is not of type 'Multi Out Payment'`);\n}\n", "import {Amount} from '@signumjs/util';\nimport {Transaction} from '../typings/transaction';\nimport {getRecipientAmountsFromMultiOutPayment} from './getRecipientAmountsFromMultiOutPayment';\nimport {isMultiOutTransaction} from './isMultiOutTransaction';\nimport {isMultiOutSameTransaction} from './isMultiOutSameTransaction';\n\n/**\n * Gets the amount from a transaction, considering ordinary and multi out transactions (with same and different payments)\n * @param recipientId The numeric id of the recipient\n * @param transaction The payment transaction\n * @return the amount value object\n *\n */\nexport function getRecipientsAmount(recipientId: string, transaction: Transaction): Amount {\n\n    if (isMultiOutTransaction(transaction) || isMultiOutSameTransaction(transaction)) {\n\n        const recipientAmounts = getRecipientAmountsFromMultiOutPayment(transaction);\n        return recipientAmounts\n            .filter(ra => ra.recipient === recipientId)\n            .reduce((amount, ra) => amount.add(Amount.fromPlanck(ra.amountNQT)), Amount.Zero());\n    }\n\n    return Amount.fromPlanck(transaction.amountNQT);\n}\n", "import {BlockApi} from './blockApi';\nimport {NetworkApi} from './networkApi';\nimport {TransactionApi} from './transactionApi';\nimport {MessageApi} from './messageApi';\nimport {AccountApi} from './accountApi';\nimport {AliasApi} from './aliasApi';\nimport {ContractApi} from './contractApi';\nimport {AssetApi} from './assetApi';\nimport {ChainService} from '../../service';\n\nexport {\n    AccountApi,\n    AliasApi,\n    AssetApi,\n    BlockApi,\n    ContractApi,\n    MessageApi,\n    NetworkApi,\n    TransactionApi,\n};\n\n/**\n * The API structure returned by {@link LedgerClientFactory} (or older style {@link composeApi})\n *\n * The programming interface uses a _builder pattern_ to mount an API.\n *\n * @example Using recommended LedgerClientFactory\n *\n * ```ts\n * const api = LedgerClientFactory.createClient({\n *   nodeHost: 'https://europe.signum.network', // one of the mainnet nodes\n * })\n * ```\n\n * @example Using older composeApi style\n *\n * ```ts\n * const api = composeApi({\n *   nodeHost: 'https://europe.signum.network', // one of the mainnet nodes\n * })\n * ```\n *\n * ### Customize API\n *\n * While this is a straightforward way to have access to _all_ API functionality, this methods\n * has the disadvantage of including all needed dependencies, thus leading to a bigger bundle, for those\n * who use bundlers like [webpack](https://webpack.js.org/). To reduce the bundle size, one may mount a subset of the API\n * conforming their needs using the {@link ApiComposer} class.\n *\n * @category api\n */\nexport class Api {\n    /**\n     * This leaks the underlying {@link ChainService } instance to interact with the chain nodes API directly, e.g. to use an API method that\n     * is not supported by SignumJS yet.\n     */\n    readonly service: ChainService;\n    readonly asset: AssetApi;\n    readonly block: BlockApi;\n    readonly network: NetworkApi;\n    readonly transaction: TransactionApi;\n    readonly message: MessageApi;\n    readonly account: AccountApi;\n    readonly alias: AliasApi;\n    readonly contract: ContractApi;\n}\n"],
  "mappings": "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gB,MAAMnB,GAAYkB,EAAMH,EAAuBC,CAAmB,EAExF,MAAO,CACH,KAAMd,GAAA,OAAO,KAAKiB,EAAc,IAAI,EAAE,SAAS,KAAK,EACpD,MAAOjB,GAAA,OAAO,KAAKiB,EAAc,KAAK,EAAE,SAAS,KAAK,EACtD,OAAQ,GAEhB,iGCxFaC,GAAA,MAAkB,CAC3B,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,yGC99DJC,GAAA,iBAAAC,GAlCA,IAAAC,GAAA,KACAC,GAAA,KAUYC,IAAZ,SAAYA,EAAQ,CAChBA,EAAAA,EAAA,SAAA,EAAA,EAAA,WACAA,EAAAA,EAAA,SAAA,EAAA,EAAA,WACAA,EAAAA,EAAA,SAAA,EAAA,EAAA,WACAA,EAAAA,EAAA,SAAA,EAAA,EAAA,WACAA,EAAAA,EAAA,SAAA,EAAA,EAAA,UACJ,GANYA,KAAQJ,GAAA,SAARI,GAAQ,CAAA,EAAA,EAuBpB,SAAgBH,GAAiBI,EAAuC,CAAC,SAAUD,GAAS,SAAU,WAAYF,GAAA,KAAK,EAAC,CACpH,GAAM,CAAC,SAAAI,EA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",
  "names": ["require_common", "__commonJSMin", "exports", "TYPED_OK", "_has", "obj", "key", "sources", "source", "p", "buf", "size", "fnTyped", "dest", "src", "src_offs", "len", "dest_offs", "i", "chunks", "l", "pos", "chunk", "result", "fnUntyped", "on", "require_adler32", "__commonJSMin", "exports", "module", "adler32", "adler", "buf", "len", "pos", "s1", "s2", "n", "require_crc32", "__commonJSMin", "exports", "module", "makeTable", "c", "table", "n", "k", "crcTable", "crc32", "crc", "buf", "len", "pos", "t", "end", "i", "require_inffast", "__commonJSMin", "exports", "module", "BAD", "TYPE", "strm", "start", "state", "_in", "last", "_out", "beg", "end", "dmax", "wsize", "whave", "wnext", "s_window", "hold", "bits", "lcode", "dcode", "lmask", "dmask", "here", "op", "len", "dist", "from", "from_source", "input", "output", "top", "dolen", "dodist", "require_inftrees", "__commonJSMin", "exports", "module", "utils", "MAXBITS", "ENOUGH_LENS", "ENOUGH_DISTS", "CODES", "LENS", "DISTS", "lbase", "lext", "dbase", "dext", "type", "lens", "lens_index", "codes", "table", "table_index", "work", "opts", "bits", "len", "sym", "min", "max", "root", "curr", "drop", "left", "used", "huff", "incr", "fill", "low", "mask", "next", "base", "base_index", "end", "count", "offs", "extra", "extra_index", "here_bits", "here_op", "here_val", "require_inflate", "__commonJSMin", "exports", "utils", "adler32", "crc32", "inflate_fast", "inflate_table", "CODES", "LENS", "DISTS", "Z_FINISH", "Z_BLOCK", "Z_TREES", "Z_OK", "Z_STREAM_END", "Z_NEED_DICT", "Z_STREAM_ERROR", "Z_DATA_ERROR", "Z_MEM_ERROR", "Z_BUF_ERROR", "Z_DEFLATED", "HEAD", "FLAGS", "TIME", "OS", "EXLEN", "EXTRA", "NAME", "COMMENT", "HCRC", "DICTID", "DICT", "TYPE", "TYPEDO", "STORED", "COPY_", "COPY", "TABLE", "LENLENS", "CODELENS", "LEN_", "LEN", "LENEXT", "DIST", "DISTEXT", "MATCH", "LIT", "CHECK", "LENGTH", "DONE", "BAD", "MEM", "SYNC", "ENOUGH_LENS", "ENOUGH_DISTS", "MAX_WBITS", "DEF_WBITS", "zswap32", "q", "InflateState", "inflateResetKeep", "strm", "state", "inflateReset", "inflateReset2", "windowBits", "wrap", "inflateInit2", "ret", "inflateInit", "virgin", "lenfix", "distfix", "fixedtables", "sym", "updatewindow", "src", "end", "copy", "dist", "inflate", "flush", "input", "output", "next", "put", "have", "left", "hold", "bits", "_in", "_out", "from", "from_source", "here", "here_bits", "here_op", "here_val", "last_bits", "last_op", "last_val", "len", "hbuf", "opts", "n", "order", "inf_leave", "inflateEnd", "inflateGetHeader", "head", "inflateSetDictionary", "dictionary", "dictLength", "dictid", "require_strings", "__commonJSMin", "exports", "utils", "STR_APPLY_OK", "STR_APPLY_UIA_OK", "_utf8len", "q", "str", "buf", "c", "c2", "m_pos", "i", "str_len", "buf_len", "buf2binstring", "len", "result", "max", "out", "c_len", "utf16buf", "pos", "require_constants", "__commonJSMin", "exports", "module", "require_messages", "__commonJSMin", "exports", "module", "require_zstream", "__commonJSMin", "exports", "module", "ZStream", "require_gzheader", "__commonJSMin", "exports", "module", "GZheader", "require_inflate", "__commonJSMin", "exports", "zlib_inflate", "utils", "strings", "c", "msg", "ZStream", "GZheader", "toString", "Inflate", "options", "opt", "status", "data", "mode", "strm", "chunkSize", "dictionary", "_mode", "next_out_utf8", "tail", "utf8str", "allowBufError", "chunk", "inflate", "input", "inflator", "inflateRaw", "require_base64_js", "__commonJSMin", "exports", "byteLength", "toByteArray", "fromByteArray", "lookup", "revLookup", "Arr", "code", "i", "len", "getLens", "b64", "validLen", "placeHoldersLen", "lens", "_byteLength", "tmp", "arr", "curByte", "tripletToBase64", "num", "encodeChunk", "uint8", "start", "end", "output", "extraBytes", "parts", "maxChunkLength", "len2", "require_ieee754", "__commonJSMin", "exports", "buffer", "offset", "isLE", "mLen", "nBytes", "e", "m", "eLen", "eMax", "eBias", "nBits", "i", "d", "s", "value", "c", "rt", "require_buffer", "__commonJSMin", "exports", "base64", "ieee754", "customInspectSymbol", "Buffer", "SlowBuffer", "K_MAX_LENGTH", "typedArraySupport", "arr", "proto", "createBuffer", "length", "buf", "arg", "encodingOrOffset", "allocUnsafe", "from", "value", "fromString", "fromArrayView", "isInstance", "fromArrayBuffer", "valueOf", "b", "fromObject", "assertSize", "size", "alloc", "fill", "encoding", "checked", "string", "byteLength", "actual", "fromArrayLike", "array", "i", "arrayView", "copy", "byteOffset", "obj", "len", "numberIsNaN", "a", "x", "y", "list", "buffer", "pos", "mustMatch", "loweredCase", "utf8ToBytes", "base64ToBytes", "slowToString", "start", "end", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "n", "m", "str", "max", "target", "thisStart", "thisEnd", "thisCopy", "targetCopy", "bidirectionalIndexOf", "val", "dir", "arrayIndexOf", "indexSize", "arrLength", "valLength", "read", "foundIndex", "found", "j", "hexWrite", "offset", "remaining", "strLen", "parsed", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "base64Write", "ucs2Write", "utf16leToBytes", "res", "firstByte", "codePoint", "bytesPerSequence", "secondByte", "thirdByte", "fourthByte", "tempCodePoint", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "codePoints", "ret", "out", "hexSliceLookupTable", "bytes", "newBuf", "checkOffset", "ext", "noAssert", "mul", "defineBigIntMethod", "validateNumber", "first", "last", "boundsError", "lo", "hi", "checkInt", "min", "maxBytes", "wrtBigUInt64LE", "checkIntBI", "wrtBigUInt64BE", "limit", "sub", "checkIEEE754", "writeFloat", "littleEndian", "writeDouble", "targetStart", "code", "errors", "E", "sym", "getMessage", "Base", "name", "range", "input", "msg", "received", "addNumericalSeparator", "checkBounds", "type", "INVALID_BASE64_RE", "base64clean", "units", "leadSurrogate", "byteArray", "c", "src", "dst", "alphabet", "table", "i16", "fn", "BufferBigIntNotDefined", "CryptoError", "exports", "cryptoError_1", "Crypto", "_Crypto", "cryptoAdapter", "exports", "Curve25519", "_Curve25519", "k", "d", "s", "i", "p", "q", "m", "x", "n", "z", "v", "y", "t", "w", "zy", "rn", "dt", "a", "b", "an", "bn", "qn", "temp", "sqrtassist", "t0", "t1", "t2", "t3", "t4", "isOverflowOrNegative", "leastSignificantBit", "u", "a7", "a6", "a5", "a4", "a3", "a2", "a1", "a0", "r", "r15", "b7", "b6", "b5", "b4", "b3", "b2", "b1", "b0", "a15", "ax", "az", "dx", "bx", "bz", "y2", "Px", "Gx", "j", "bit1", "bit0", "temp1", "temp2", "temp3", "exports", "curve25519_1", "ECKCDSA", "h", "x", "s", "w", "i", "h1", "x1", "tmp1", "tmp2", "tmp3", "v", "P", "d", "p", "yx", "yz", "t1", "t2", "vi", "hi", "di", "nvh", "j", "k", "Y", "privateKey", "publicKey", "exports", "exports", "buffer_1", "exports", "crypto_1", "__exportStar", "exports", "decryptData", "decryptMessage", "inflate_1", "base_1", "cryptoError_1", "decrypt", "ivCiphertext", "nonce", "sharedKeyOrig", "sharedKey", "adapter", "key", "e", "encryptedData", "senderPublicKeyHex", "recipientPrivateKeyHex", "compressedPlaintext", "encryptedMessage", "decryptedBytes", "require_trees", "__commonJSMin", "exports", "utils", "Z_FIXED", "Z_BINARY", "Z_TEXT", "Z_UNKNOWN", "zero", "buf", "len", "STORED_BLOCK", "STATIC_TREES", "DYN_TREES", "MIN_MATCH", "MAX_MATCH", "LENGTH_CODES", "LITERALS", "L_CODES", "D_CODES", "BL_CODES", "HEAP_SIZE", "MAX_BITS", "Buf_size", "MAX_BL_BITS", "END_BLOCK", "REP_3_6", "REPZ_3_10", "REPZ_11_138", "extra_lbits", "extra_dbits", "extra_blbits", "bl_order", "DIST_CODE_LEN", "static_ltree", "static_dtree", "_dist_code", "_length_code", "base_length", "base_dist", "StaticTreeDesc", "static_tree", "extra_bits", "extra_base", "elems", "max_length", "static_l_desc", "static_d_desc", "static_bl_desc", "TreeDesc", "dyn_tree", "stat_desc", "d_code", "dist", "put_short", "s", "w", "send_bits", "value", "length", "send_code", "c", "tree", "bi_reverse", "code", "res", "bi_flush", "gen_bitlen", "desc", "max_code", "stree", "has_stree", "extra", "base", "h", "n", "m", "bits", "xbits", "f", "overflow", "gen_codes", "bl_count", "next_code", "tr_static_init", "init_block", "bi_windup", "copy_block", "header", "smaller", "depth", "_n2", "_m2", "pqdownheap", "k", "v", "j", "compress_block", "ltree", "dtree", "lc", "lx", "build_tree", "node", "scan_tree", "prevlen", "curlen", "nextlen", "count", "max_count", "min_count", "send_tree", "build_bl_tree", "max_blindex", "send_all_trees", "lcodes", "dcodes", "blcodes", "rank", "detect_data_type", "black_mask", "static_init_done", "_tr_init", "_tr_stored_block", "stored_len", "last", "_tr_align", "_tr_flush_block", "opt_lenb", "static_lenb", "_tr_tally", "require_deflate", "__commonJSMin", "exports", "utils", "trees", "adler32", "crc32", "msg", "Z_NO_FLUSH", "Z_PARTIAL_FLUSH", "Z_FULL_FLUSH", "Z_FINISH", "Z_BLOCK", "Z_OK", "Z_STREAM_END", "Z_STREAM_ERROR", "Z_DATA_ERROR", "Z_BUF_ERROR", "Z_DEFAULT_COMPRESSION", "Z_FILTERED", "Z_HUFFMAN_ONLY", "Z_RLE", "Z_FIXED", "Z_DEFAULT_STRATEGY", "Z_UNKNOWN", "Z_DEFLATED", "MAX_MEM_LEVEL", "MAX_WBITS", "DEF_MEM_LEVEL", "LENGTH_CODES", "LITERALS", "L_CODES", "D_CODES", "BL_CODES", "HEAP_SIZE", "MAX_BITS", "MIN_MATCH", "MAX_MATCH", "MIN_LOOKAHEAD", "PRESET_DICT", "INIT_STATE", "EXTRA_STATE", "NAME_STATE", "COMMENT_STATE", "HCRC_STATE", "BUSY_STATE", "FINISH_STATE", "BS_NEED_MORE", "BS_BLOCK_DONE", "BS_FINISH_STARTED", "BS_FINISH_DONE", "OS_CODE", "err", "strm", "errorCode", "rank", "f", "zero", "buf", "len", "flush_pending", "s", "flush_block_only", "last", "put_byte", "b", "putShortMSB", "read_buf", "start", "size", "longest_match", "cur_match", "chain_length", "scan", "match", "best_len", "nice_match", "limit", "_win", "wmask", "prev", "strend", "scan_end1", "scan_end", "fill_window", "_w_size", "p", "m", "more", "str", "deflate_stored", "flush", "max_block_size", "max_start", "deflate_fast", "hash_head", "bflush", "deflate_slow", "max_insert", "deflate_rle", "deflate_huff", "Config", "good_length", "max_lazy", "nice_length", "max_chain", "func", "configuration_table", "lm_init", "DeflateState", "deflateResetKeep", "deflateReset", "ret", "deflateSetHeader", "head", "deflateInit2", "level", "method", "windowBits", "memLevel", "strategy", "wrap", "deflateInit", "deflate", "old_flush", "beg", "val", "header", "level_flags", "bstate", "deflateEnd", "status", "deflateSetDictionary", "dictionary", "dictLength", "n", "avail", "next", "input", "tmpDict", "require_deflate", "__commonJSMin", "exports", "zlib_deflate", "utils", "strings", "msg", "ZStream", "toString", "Z_NO_FLUSH", "Z_FINISH", "Z_OK", "Z_STREAM_END", "Z_SYNC_FLUSH", "Z_DEFAULT_COMPRESSION", "Z_DEFAULT_STRATEGY", "Z_DEFLATED", "Deflate", "options", "opt", "status", "dict", "data", "mode", "strm", "chunkSize", "_mode", "chunk", "deflate", "input", "deflator", "deflateRaw", "gzip", "exports", "getRandomBytes", "getRandomWords", "getRandomString", "base_1", "length", "count", "dictionary", "indices", "mask", "randomBytes", "cp", "randomUint32", "randomIndex", "index", "alphabet", "MaxLength", "maxNonBiasedValue", "uint16View", "result", "i", "value", "newBytes", "exports", "encryptData", "encryptMessage", "base_1", "deflate_1", "random_1", "cryptoError_1", "encrypt", "plaintext", "nonce", "sharedKeyOrig", "sharedKey", "i", "adapter", "key", "e", "recipientPublicKeyHex", "senderPrivateKeyHex", "compressedData", "data", "encryptedData", "exports", "exports", "generateMnemonic", "en_1", "random_1", "Strength", "args", "strength", "dictionary", "exports", "sha256Raw", "sha256AsBytes", "sha256AsHex", "sha256AsBase64", "sha256Binary", "base_1", "input", "encoding", "data", "b", "exports", "generateSignKeys", "getAccountIdFromPublicKey", "generateSignature", "verifySignature", "sha256_1", "base_1", "hexToDec", "s", "digits", "i", "carry", "j", "toBytes", "hex", "mergeArrays", "a", "b", "merged", "passPhrase", "hashedPassPhrase", "keys", "publicKey", "slicedArray", "messageHex", "privateKeyHex", "m", "m_s", "x", "y", "m_y", "h", "v", "signature", "publicKeyHex", "signatureBytes", "publicKeyBytes", "h1", "h2", "generateSignedTransactionBytes", "unsignedTransactionHex", "require_cryptoAdapter", "__commonJSMin", "exports", "__exportStar", "exports", "base_1", "exports", "asyncRetry", "args", "asyncFn", "onFailureAsync", "retryCount", "maxRetrials", "e", "GenesisBlockTime", "ChainTime", "_ChainTime", "blockTimestamp", "timestamp", "date", "blockTime", "chainTime", "exports", "require_bignumber", "__commonJSMin", "exports", "module", "globalObject", "BigNumber", "isNumeric", "mathceil", "mathfloor", "bignumberError", "tooManyDigits", "BASE", "LOG_BASE", "MAX_SAFE_INTEGER", "POWS_TEN", "SQRT_BASE", "MAX", "clone", "configObject", "div", "convertBase", "parseNumeric", "P", "ONE", "DECIMAL_PLACES", "ROUNDING_MODE", "TO_EXP_NEG", "TO_EXP_POS", "MIN_EXP", "MAX_EXP", "CRYPTO", "MODULO_MODE", "POW_PRECISION", "FORMAT", "ALPHABET", "alphabetHasNormalDecimalDigits", "v", "b", "alphabet", "c", "caseChanged", "e", "i", "isNum", "len", "str", "x", "intCheck", "round", "obj", "p", "n", "s", "out", "maxOrMin", "pow2_53", "random53bitInt", "dp", "a", "k", "rand", "args", "sum", "decimal", "toBaseOut", "baseIn", "baseOut", "j", "arr", "arrL", "sign", "callerIsToString", "d", "r", "xc", "y", "rm", "toFixedPoint", "coeffToString", "multiply", "base", "m", "temp", "xlo", "xhi", "carry", "klo", "khi", "compare", "aL", "bL", "cmp", "subtract", "more", "prod", "prodL", "q", "qc", "rem", "remL", "rem0", "xi", "xL", "yc0", "yL", "yz", "yc", "bitFloor", "format", "id", "c0", "ne", "toExponential", "normalise", "basePrefix", "dotAfter", "dotBefore", "isInfinityOrNaN", "whitespaceOrPlus", "p1", "p2", "sd", "ni", "rd", "pows10", "valueOf", "half", "isModExp", "nIsBig", "nIsNeg", "nIsOdd", "isOdd", "t", "xLTy", "xe", "ye", "xcL", "ycL", "ylo", "yhi", "zc", "sqrtBase", "rep", "g1", "g2", "groupSeparator", "intPart", "fractionPart", "isNeg", "intDigits", "md", "d0", "d1", "d2", "exp", "n0", "n1", "z", "l", "min", "max", "name", "zs", "bignumber_js_1", "__importDefault", "FormatDotDecimal", "FormatCommaDecimal", "exports", "assureValidValue", "v", "ChainValue", "_ChainValue", "decimals", "a", "c", "value", "chainValue", "prefix", "format", "newValue", "exports", "constants_1", "chainValue_1", "exports", "Amount", "_Amount", "planck", "signa", "b", "p", "amount", "value", "format", "bignumber_js_1", "__importDefault", "convertBase36StringToHexString", "b36", "exports", "require_base64", "__commonJSMin", "exports", "module", "global", "factory", "_Base64", "gBase64", "version", "VERSION", "_hasBuffer", "_TD", "_TE", "b64ch", "b64chs", "b64tab", "a", "tab", "c", "i", "b64re", "_fromCC", "_U8Afrom", "it", "_mkUriSafe", "src", "m0", "_tidyB64", "s", "btoaPolyfill", "bin", "u32", "c0", "c1", "c2", "asc", "pad", "_btoa", "_fromUint8Array", "u8a", "maxargs", "strs", "l", "fromUint8Array", "urlsafe", "cb_utob", "cc", "re_utob", "utob", "u", "_encode", "encode", "encodeURI", "re_btou", "cb_btou", "cccc", "cp", "offset", "btou", "b", "atobPolyfill", "u24", "r1", "r2", "_atob", "_toUint8Array", "toUint8Array", "_unURI", "_decode", "decode", "isValid", "_noEnum", "v", "extendString", "_add", "name", "body", "extendUint8Array", "extendBuiltins", "k", "js_base64_1", "convertBase64StringToString", "b64", "exports", "convertByteArrayToHexString", "bytes", "uppercase", "hex", "byte", "exports", "convertByteArrayToString", "byteArray", "startIndex", "length", "bytes", "len", "checkBytesToIntInput", "escapedUTF8", "exports", "numBytes", "targetLength", "padString", "bignumber_js_1", "__importDefault", "twosComplementBinary", "bn", "bin", "prefix", "i", "exports", "bignumber_js_1", "__importDefault", "twosComplementBinary_1", "convertDecStringToHexString", "decimal", "padding", "bn", "isNegative", "hex", "padSize", "exports", "convertHexEndianess", "hexString", "result", "rawData", "i", "exports", "bignumber_js_1", "__importDefault", "convertHexStringToBase36String", "hex", "exports", "convertHexStringToByteArray", "hex", "bytes", "c", "byte", "exports", "convertHexStringToDecString", "hexStr", "digits", "i", "j", "carry", "exports", "convertByteArrayToString_1", "convertHexStringToByteArray_1", "convertHexStringToString", "hex", "exports", "js_base64_1", "convertStringToBase64String", "str", "isURICompatible", "exports", "convertStringToByteArray", "str", "s", "bytes", "i", "exports", "convertStringToByteArray_1", "convertByteArrayToHexString_1", "convertStringToHexString", "str", "exports", "exports", "convertAssetPriceToPlanck", "amount_1", "assetPrice", "decimals", "exports", "convertPlanckToAssetPrice", "amount_1", "planck", "decimals", "__exportStar", "exports", "__exportStar", "exports", "ApiVersion", "init_apiVersion", "__esmMin", "TransactionType", "init_transactionType", "__esmMin", "TransactionArbitrarySubtype", "init_transactionArbitrarySubtype", "__esmMin", "TransactionAssetSubtype", "init_transactionAssetSubtype", "__esmMin", "TransactionLeasingSubtype", "init_transactionLeasingSubtype", "__esmMin", "TransactionMarketplaceSubtype", "init_transactionMarketplaceSubtype", "__esmMin", "TransactionPaymentSubtype", "init_transactionPaymentSubtype", "__esmMin", "TransactionMiningSubtype", "init_transactionMiningSubtype", "__esmMin", "TransactionAdvancedPaymentSubtype", "init_transactionAdvancedPaymentSubtype", "__esmMin", "TransactionSmartContractSubtype", "init_transactionSmartContractSubtype", "__esmMin", "constants_exports", "__export", "AddressPrefix", "ApiVersion", "DefaultApiEndpoint", "DefaultDeadline", "TransactionAdvancedPaymentSubtype", "TransactionArbitrarySubtype", "TransactionAssetSubtype", "TransactionLeasingSubtype", "TransactionMarketplaceSubtype", "TransactionMiningSubtype", "TransactionPaymentSubtype", "TransactionSmartContractSubtype", "TransactionType", "init_constants", "__esmMin", "init_apiVersion", "init_transactionType", "init_transactionArbitrarySubtype", "init_transactionAssetSubtype", "init_transactionLeasingSubtype", "init_transactionMarketplaceSubtype", "init_transactionPaymentSubtype", "init_transactionMiningSubtype", "init_transactionAdvancedPaymentSubtype", "init_transactionSmartContractSubtype", "HttpResponse", "status", "response", "exports", "HttpError", "requestUrl", "status", "message", "data", "exports", "httpResponse_1", "httpError_1", "HttpMock", "_HttpMock", "status", "data", "requestUrl", "message", "method", "url", "payload", "replyFn", "HttpMockBuilder", "_HttpMockBuilder", "errorMessage", "exports", "bind", "fn", "thisArg", "toString", "getPrototypeOf", "kindOf", "cache", "thing", "str", "kindOfTest", "type", "typeOfTest", "isArray", "isUndefined", "isBuffer", "val", "isFunction", "isArrayBuffer", "isArrayBufferView", "result", "isString", "isNumber", "isObject", "isBoolean", "isPlainObject", "prototype", "isDate", "isFile", "isBlob", "isFileList", "isStream", "isFormData", "kind", "isURLSearchParams", "isReadableStream", "isRequest", "isResponse", "isHeaders", "trim", "forEach", "obj", "allOwnKeys", "i", "l", "keys", "len", "key", "findKey", "_key", "_global", "isContextDefined", "context", "merge", "caseless", "assignValue", "targetKey", "extend", "a", "b", "stripBOM", "content", "inherits", "constructor", "superConstructor", "props", "descriptors", "toFlatObject", "sourceObj", "destObj", "filter", "propFilter", "prop", "merged", "endsWith", "searchString", "position", "lastIndex", "toArray", "arr", "isTypedArray", "TypedArray", "forEachEntry", "iterator", "pair", "matchAll", "regExp", "matches", "isHTMLForm", "toCamelCase", "m", "p1", "p2", "hasOwnProperty", "isRegExp", "reduceDescriptors", "reducer", "reducedDescriptors", "descriptor", "name", "ret", "freezeMethods", "value", "toObjectSet", "arrayOrString", "delimiter", "define", "noop", "toFiniteNumber", "defaultValue", "ALPHA", "DIGIT", "ALPHABET", "generateString", "size", "alphabet", "length", "isSpecCompliantForm", "toJSONObject", "stack", "visit", "source", "target", "reducedValue", "isAsyncFn", "isThenable", "_setImmediate", "setImmediateSupported", "postMessageSupported", "token", "callbacks", "data", "cb", "asap", "utils$1", "AxiosError", "message", "code", "config", "request", "response", "utils", "error", "customProps", "axiosError", "httpAdapter", "isVisitable", "removeBrackets", "renderKey", "path", "dots", "isFlatArray", "predicates", "toFormData", "formData", "options", "option", "metaTokens", "visitor", "defaultVisitor", "indexes", "useBlob", "convertValue", "el", "index", "exposedHelpers", "build", "encode", "charMap", "match", "AxiosURLSearchParams", "params", "encoder", "_encode", "buildURL", "url", "serializeFn", "serializedParams", "hashmarkIndex", "InterceptorManager", "fulfilled", "rejected", "id", "h", "InterceptorManager$1", "transitionalDefaults", "URLSearchParams$1", "FormData$1", "Blob$1", "platform$1", "URLSearchParams", "FormData", "Blob", "hasBrowserEnv", "_navigator", "hasStandardBrowserEnv", "hasStandardBrowserWebWorkerEnv", "origin", "platform", "toURLEncodedForm", "helpers", "parsePropPath", "arrayToObject", "formDataToJSON", "buildPath", "isNumericKey", "isLast", "stringifySafely", "rawValue", "parser", "e", "defaults", "headers", "contentType", "hasJSONContentType", "isObjectPayload", "_FormData", "transitional", "forcedJSONParsing", "JSONRequested", "strictJSONParsing", "status", "method", "defaults$1", "ignoreDuplicateOf", "parseHeaders", "rawHeaders", "parsed", "line", "$internals", "normalizeHeader", "header", "normalizeValue", "parseTokens", "tokens", "tokensRE", "isValidHeaderName", "matchHeaderValue", "isHeaderNameFilter", "formatHeader", "w", "char", "buildAccessors", "accessorName", "methodName", "arg1", "arg2", "arg3", "AxiosHeaders", "valueOrRewrite", "rewrite", "self", "setHeader", "_value", "_header", "_rewrite", "lHeader", "setHeaders", "matcher", "deleted", "deleteHeader", "format", "normalized", "targets", "asStrings", "first", "computed", "accessors", "defineAccessor", "mapped", "headerValue", "AxiosHeaders$1", "transformData", "fns", "isCancel", "CanceledError", "settle", "resolve", "reject", "validateStatus", "parseProtocol", "speedometer", "samplesCount", "min", "bytes", "timestamps", "head", "tail", "firstSampleTS", "chunkLength", "now", "startedAt", "bytesCount", "passed", "throttle", "freq", "timestamp", "threshold", "lastArgs", "timer", "invoke", "args", "progressEventReducer", "listener", "isDownloadStream", "bytesNotified", "_speedometer", "loaded", "total", "progressBytes", "rate", "inRange", "progressEventDecorator", "throttled", "lengthComputable", "asyncDecorator", "isURLSameOrigin", "isMSIE", "cookies", "expires", "domain", "secure", "cookie", "isAbsoluteURL", "combineURLs", "baseURL", "relativeURL", "buildFullPath", "requestedURL", "headersToObject", "mergeConfig", "config1", "config2", "getMergedValue", "mergeDeepProperties", "valueFromConfig2", "defaultToConfig2", "mergeDirectKeys", "mergeMap", "configValue", "resolveConfig", "newConfig", "withXSRFToken", "xsrfHeaderName", "xsrfCookieName", "auth", "xsrfValue", "isXHRAdapterSupported", "xhrAdapter", "_config", "requestData", "requestHeaders", "responseType", "onUploadProgress", "onDownloadProgress", "onCanceled", "uploadThrottled", "downloadThrottled", "flushUpload", "flushDownload", "done", "onloadend", "responseHeaders", "err", "timeoutErrorMessage", "cancel", "protocol", "composeSignals", "signals", "timeout", "controller", "aborted", "onabort", "reason", "unsubscribe", "signal", "composeSignals$1", "streamChunk", "chunk", "chunkSize", "pos", "end", "readBytes", "iterable", "readStream", "stream", "reader", "trackStream", "onProgress", "onFinish", "_onFinish", "loadedBytes", "isFetchSupported", "isReadableStreamSupported", "encodeText", "test", "supportsRequestStream", "duplexAccessed", "hasContentType", "DEFAULT_CHUNK_SIZE", "supportsResponseStream", "resolvers", "res", "_", "getBodyLength", "body", "resolveBodyLength", "fetchAdapter", "cancelToken", "withCredentials", "fetchOptions", "composedSignal", "requestContentLength", "_request", "contentTypeHeader", "flush", "isCredentialsSupported", "isStreamResponse", "responseContentLength", "responseData", "knownAdapters", "renderReason", "isResolvedHandle", "adapter", "adapters", "nameOrAdapter", "rejectedReasons", "reasons", "state", "throwIfCancellationRequested", "dispatchRequest", "VERSION", "validators", "deprecatedWarnings", "validator", "version", "formatMessage", "opt", "desc", "opts", "correctSpelling", "assertOptions", "schema", "allowUnknown", "Axios", "instanceConfig", "configOrUrl", "dummy", "paramsSerializer", "contextHeaders", "requestInterceptorChain", "synchronousRequestInterceptors", "interceptor", "responseInterceptorChain", "promise", "chain", "onFulfilled", "onRejected", "fullPath", "generateHTTPMethod", "isForm", "Axios$1", "CancelToken", "_CancelToken", "executor", "resolvePromise", "onfulfilled", "_resolve", "abort", "c", "CancelToken$1", "spread", "callback", "isAxiosError", "payload", "HttpStatusCode", "HttpStatusCode$1", "createInstance", "defaultConfig", "instance", "axios", "promises", "axios_1", "__importDefault", "httpResponse_1", "httpError_1", "DefaultAxiosOptions", "HttpAdapterAxios", "_HttpAdapterAxios", "baseURL", "options", "url", "error", "status", "data", "payload", "exports", "httpAdapterAxios_1", "HttpClientFactory", "baseUrl", "options", "exports", "httpResponse_1", "exports", "httpError_1", "httpMockBuilder_1", "httpClientFactory_1", "clone", "configObject", "div", "convertBase", "parseNumeric", "P", "BigNumber", "ONE", "DECIMAL_PLACES", "ROUNDING_MODE", "TO_EXP_NEG", "TO_EXP_POS", "MIN_EXP", "MAX_EXP", "CRYPTO", "MODULO_MODE", "POW_PRECISION", "FORMAT", "ALPHABET", "alphabetHasNormalDecimalDigits", "v", "b", "alphabet", "c", "caseChanged", "e", "i", "isNum", "len", "str", "x", "isNumeric", "intCheck", "round", "tooManyDigits", "MAX_SAFE_INTEGER", "mathfloor", "LOG_BASE", "obj", "p", "MAX", "bignumberError", "n", "s", "out", "BASE", "maxOrMin", "pow2_53", "random53bitInt", "dp", "a", "k", "rand", "mathceil", "POWS_TEN", "args", "sum", "decimal", "toBaseOut", "baseIn", "baseOut", "j", "arr", "arrL", "sign", "callerIsToString", "d", "r", "xc", "y", "rm", "toFixedPoint", "coeffToString", "multiply", "base", "m", "temp", "xlo", "xhi", "carry", "klo", "SQRT_BASE", "khi", "compare", "aL", "bL", "cmp", "subtract", "more", "prod", "prodL", "q", "qc", "rem", "remL", "rem0", "xi", "xL", "yc0", "yL", "yz", "yc", "bitFloor", "format", "id", "c0", "ne", "toExponential", "normalise", "basePrefix", "dotAfter", "dotBefore", "isInfinityOrNaN", "whitespaceOrPlus", "p1", "p2", "sd", "ni", "rd", "pows10", "valueOf", "half", "isModExp", "nIsBig", "nIsNeg", "nIsOdd", "isOdd", "t", "xLTy", "xe", "ye", "xcL", "ycL", "ylo", "yhi", "zc", "sqrtBase", "rep", "g1", "g2", "groupSeparator", "intPart", "fractionPart", "isNeg", "intDigits", "md", "d0", "d1", "d2", "exp", "n0", "n1", "z", "l", "min", "max", "name", "zs", "bignumber_default", "init_bignumber", "__esmMin", "ByteBuffer", "init_byteBuffer", "__esmMin", "init_bignumber", "hexString", "c", "byte", "setValue", "byteVal", "shortVal", "intVal", "longVal", "bignumber_default", "longBase", "i", "nBytes", "stringVal", "escapedUTF8", "getAttachmentFields", "version", "requestType", "spec", "GetAttachmentFields", "requestSpec", "AttachmentSpecV1", "AttachmentSpecV2", "init_getAttachmentFields", "__esmMin", "getRequestRebuildInfo", "tx", "requestType", "DecodeRequestType", "t", "init_getRequestRebuildInfo", "__esmMin", "rebuildTransactionPostData", "hexUnsignedBytes", "trBytes", "ByteBuffer", "transaction", "parseBaseTransaction", "rebuiltData", "requestRebuildInfo", "getRequestRebuildInfo", "parseAttachment", "processSpecialCases", "parseMessage", "parseEncryptedMessage", "parseRecipientPublicKey", "parseEncryptToSelfMessage", "requestType", "bignumber_default", "trByteBuffer", "transactionJSON", "subtypeAndVersion", "data", "attachmentVersion", "fields", "getAttachmentFields", "pastValues", "sizeOfString", "item", "itemType", "typeSpec", "repetitionSpec", "repetition", "repVal", "currentValues", "amount", "parseCreationBytes", "initialPos", "version", "_reserved", "codePages", "dpages", "cspages", "uspages", "minActivationAmountNQT", "codeLen", "code", "dataLen", "creationBytesLen", "retObj", "transactionFlags", "lengthBytes", "messageIsText", "messageLength", "init_rebuildTransactionPostData", "__esmMin", "init_bignumber", "init_byteBuffer", "init_getAttachmentFields", "init_getRequestRebuildInfo", "verifyTransaction", "method", "parameters", "response", "methodsToVerify", "rebuiltObject", "rebuildTransactionPostData", "nParameters", "prop", "nRebuilt", "_prop", "init_verifyTransaction", "__esmMin", "init_rebuildTransactionPostData", "verifyTransaction_exports", "__export", "verifyTransaction", "init_verifyTransaction", "__esmMin", "http_1", "util_1", "constants_1", "verifyTransaction_1", "SettingsImpl", "settings", "ChainService", "_ChainService", "apiRootUrl", "url", "apiError", "errorCode", "method", "data", "request", "params", "k", "args", "options", "endpoint", "response", "body", "requestFn", "onFailureAsync", "e", "retrialCount", "shouldRetry", "reconfigure", "timeout", "checkMethod", "reliableNodeHosts", "checkEndpoint", "checkHost", "host", "start", "absoluteUrl", "_", "reject", "error", "successfulHosts", "result", "a", "b", "bestHost", "exports", "exports", "getContractDatablock", "util_1", "contract", "position", "length", "startIndex", "requiredSize", "exports", "convertShortStringToContractData", "util_1", "shortString", "exports", "exports", "countCodePages", "constants_1", "hexCode", "util_1", "getContractDatablock_1", "countCodePages_1", "ContractDataView", "_ContractDataView", "_contract", "index", "hexData", "count", "length", "l", "exports", "exports", "countDataPages", "dataHex", "exports", "calculateMinimumCreationFee", "util_1", "countCodePages_1", "countDataPages_1", "args", "dataHex", "codeHex", "codePagesCount", "dataPagesCount", "convertContractData", "value", "exports", "util_1", "convertContractData_1", "generateMethodCall", "args", "long", "exports", "util_1", "convertContractData_1", "countDataPages_1", "generateDataStack", "data", "dataHex", "long", "dataPageCount", "exports", "__exportStar", "exports", "require_contractData", "__commonJSMin", "exports", "__exportStar", "exports", "__exportStar", "exports", "src_exports", "__export", "Address", "AddressPrefix", "Api", "ApiComposer", "ApiSettings", "ApiVersion", "Attachment", "AttachmentEncryptedMessage", "AttachmentMessage", "DefaultApiEndpoint", "DefaultDeadline", "LedgerClientFactory", "TransactionAdvancedPaymentSubtype", "TransactionArbitrarySubtype", "TransactionAssetSubtype", "TransactionLeasingSubtype", "TransactionMarketplaceSubtype", "TransactionMiningSubtype", "TransactionPaymentSubtype", "TransactionSmartContractSubtype", "TransactionType", "addAssetTreasuryAccount", "addCommitment", "broadcastTransaction", "burnAsset", "buyAlias", "buyTopLevelDomain", "calculateDistributionFee", "callContractMethod", "cancelAskOrder", "cancelBidOrder", "cancelSubscription", "composeApi", "createSubscription", "distributeToAssetHolders", "generateSendTransactionQRCode", "generateSendTransactionQRCodeAddress", "getAccount", "getAccountBalance", "getAccountBlockIds", "getAccountBlocks", "getAccountSubscriptions", "getAccountTransactions", "getAccountTransactionsBetweenSenderAndRecipient", "getAccountTransactionsFromSender", "getAccountTransactionsFromSenderToRecipient", "getAccountTransactionsToRecipient", "getAliasById", "getAliasByName", "getAliases", "getAliasesOnSale", "getAllAssets", "getAllContractIds", "getAllContractsByCodeHash", "getAllTrades", "getAsset", "getAssetHolders", "getAssetTrades", "getAssetTradesPerAccount", "getAssetTradesPerAsset", "getAssetTransfers", "getAssetTransfersPerAccount", "getAssetTransfersPerAsset", "getAssetsByIssuer", "getAssetsByName", "getAssetsByOwner", "getAttachmentVersion", "getBlockByHeight", "getBlockById", "getBlockByTimestamp", "getBlockId", "getBlockchainStatus", "getBlocks", "getContract", "getContractMapValuesByFirstKey", "getContractsByAccount", "getDistributionAmountsFromTransaction", "getMiningInfo", "getNetworkInfo", "getOpenAskOrders", "getOpenAskOrdersPerAccount", "getOpenAskOrdersPerAsset", "getOpenBidOrders", "getOpenBidOrdersPerAccount", "getOpenBidOrdersPerAsset", "getPeer", "getPeers", "getRecipientAmountsFromMultiOutPayment", "getRecipientsAmount", "getRewardRecipient", "getServerStatus", "getSingleContractMapValue", "getSubscription", "getSubscriptionPayments", "getSubscriptionsToAccount", "getSuggestedFees", "getTime", "getTopLevelDomains", "getTradeHistoryPerAccount", "getTransaction", "getTransactionByFullHash", "getUnconfirmedAccountTransactions", "getUnconfirmedTransactions", "isMultiOutSameTransaction", "isMultiOutTransaction", "issueAsset", "mintAsset", "parseTransactionBytes", "placeAskOrder", "placeBidOrder", "publishContract", "publishContractByReference", "removeCommitment", "searchAliasesByName", "sellAlias", "sendAmountToMultipleRecipients", "sendAmountToSingleRecipient", "sendEncryptedMessage", "sendMessage", "sendSameAmountToMultipleRecipients", "setAccountInfo", "setAlias", "setRewardRecipient", "signAndBroadcastTransaction", "transferAsset", "transferAssetOwnership", "transferMultipleAssets", "import_crypto", "import_util", "tokenizeReedSolomonAddress", "address", "tokens", "isExtended", "prefix", "extension", "rs", "initialCodeword", "gexp", "glog", "cwmap", "alphabet", "base32Length", "gmult", "a", "b", "idx", "glog", "gexp", "isDeeplyValidAddress", "address", "codeword", "initialCodeword", "codewordLength", "pos", "alphabet", "codeworkIndex", "cwmap", "sum", "t", "j", "ensureReedSolomonAddress", "address", "tokens", "tokenizeReedSolomonAddress", "isDeeplyValidAddress", "convertReedSolomonAddressToNumericId", "address", "ensureReedSolomonAddress", "rs", "tokenizeReedSolomonAddress", "codeword", "initialCodeword", "codewordLength", "i", "pos", "alphabet", "codeworkIndex", "cwmap", "length", "base32Length", "cypherString32", "out", "newLength", "digit10", "convertNumericIdToReedSolomonAddress", "numericId", "prefix", "plainString10", "codeword", "initialCodeword", "pos", "length", "i", "digit32", "newLength", "p", "base32Length", "fb", "gmult", "out", "alphabet", "cwmap", "init_constants", "ensureValidPublicKey", "publicKey", "Address", "_Address", "args", "anyValidAddress", "prefix", "tokenizeReedSolomonAddress", "numericId", "address", "convertNumericIdToReedSolomonAddress", "ensureReedSolomonAddress", "extension", "convertReedSolomonAddressToNumericId", "withPrefix", "ApiImpl", "service", "ApiComposer", "_ApiComposer", "apiSection", "creatorMap", "creatorName", "service_exports", "__reExport", "getBlockByHeight", "service", "height", "includeTransactions", "getBlockById", "service", "block", "includeTransactions", "getBlockByTimestamp", "service", "timestamp", "includeTransactions", "getBlocks", "service", "firstIndex", "lastIndex", "includeTransactions", "getBlockId", "service", "height", "getBlockchainStatus", "service", "getMiningInfo", "service", "getPeer", "service", "peer", "getPeers", "service", "active", "getServerStatus", "service", "getTime", "service", "import_util", "getSuggestedFees", "service", "getNetworkInfo", "service", "init_constants", "import_crypto", "broadcastTransaction", "service", "signedTransactionPayload", "signAndBroadcastTransaction", "chainService", "unsignedTransaction", "unsignedHexMessage", "senderPrivateKey", "senderPublicKey", "signature", "signedMessage", "broadcastTransaction", "signIfPrivateKey", "service", "txArgs", "transactionFn", "response", "signAndBroadcastTransaction", "sendMessage", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "import_crypto", "init_constants", "MAX_MESSAGE_LENGTH", "sendEncryptedMessage", "service", "args", "signIfPrivateKey", "a", "encryptedMessage", "parameters", "DefaultDeadline", "init_constants", "addCommitment", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "generateSendTransactionQRCode", "service", "receiverId", "amountNQT", "feeSuggestionType", "feeNQT", "immutable", "generateSendTransactionQRCodeAddress", "service", "receiverId", "amountNQT", "feeSuggestionType", "feeNQT", "immutable", "getAccount", "service", "args", "params", "getAccountBalance", "service", "accountId", "getAccountBlockIds", "service", "args", "params", "getAccountBlocks", "service", "args", "params", "getAccountSubscriptions", "service", "accountId", "parameters", "init_constants", "getTransaction", "service", "transactionId", "getTransactionByFullHash", "service", "fullHash", "init_constants", "Attachment", "type", "AttachmentMessage", "data", "AttachmentEncryptedMessage", "createParametersFromAttachment", "attachment", "params", "AttachmentEncryptedMessage", "AttachmentMessage", "SmartContractPublickey", "sendAmountToSingleRecipient", "service", "args", "signIfPrivateKey", "a", "recipientPublicKey", "parameters", "DefaultDeadline", "createParametersFromAttachment", "getDistributionAmountsFromTransaction", "service", "transactionId", "accountId", "result", "init_constants", "sendSameAmountToMultipleRecipients", "service", "args", "signIfPrivateKey", "a", "recipientIds", "senderPublicKey", "amountPlanck", "feePlanck", "referencedTransactionFullHash", "deadline", "DefaultDeadline", "dedupe", "uniqueRecipients", "parameters", "init_constants", "mountRecipientsString", "recipientAmounts", "amountNQT", "recipient", "assertDuplicates", "recipientIds", "ra", "sendAmountToMultipleRecipients", "service", "args", "signIfPrivateKey", "a", "deadline", "DefaultDeadline", "feePlanck", "senderPublicKey", "referencedTransactionFullHash", "parameters", "init_constants", "createSubscription", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "init_constants", "cancelSubscription", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "getSubscription", "service", "subscriptionId", "getUnconfirmedTransactions", "service", "parseTransactionBytes", "service", "transactionHexBytes", "getSubscriptionPayments", "service", "args", "params", "getAccountTransactions", "service", "args", "parameters", "result", "distributions", "type", "subtype", "sender", "tx", "getDistributionAmountsFromTransaction", "resolvedDistributions", "dtx", "transaction", "asset", "assetToDistribute", "getAccountTransactionsFromSender", "service", "args", "parameters", "getAccountTransactionsToRecipient", "service", "args", "parameters", "getAccountTransactionsFromSenderToRecipient", "service", "args", "parameters", "getAccountTransactionsBetweenSenderAndRecipient", "service", "args", "parameters", "getRewardRecipient", "service", "accountId", "parameters", "getSubscriptionsToAccount", "service", "accountId", "parameters", "getUnconfirmedAccountTransactions", "service", "accountId", "includeIndirect", "init_constants", "removeCommitment", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "init_constants", "setAccountInfo", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "init_constants", "setAlias", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "init_constants", "setRewardRecipient", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "getAliasById", "service", "aliasId", "getAliasByName", "service", "aliasName", "tld", "getAliasesOnSale", "service", "args", "params", "getAliases", "service", "args", "init_constants", "buyAlias", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "init_constants", "sellAlias", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "getTopLevelDomains", "service", "args", "init_constants", "init_verifyTransaction", "buyTopLevelDomain", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "searchAliasesByName", "service", "args", "getContract", "service", "id", "getAllContractIds", "service", "args", "params", "getContractsByAccount", "service", "args", "params", "import_contracts", "init_constants", "import_contracts", "publishContract", "service", "args", "signIfPrivateKey", "a", "dataHex", "dataPageCount", "feeNQT", "parameters", "DefaultDeadline", "init_constants", "import_contracts", "publishContractByReference", "service", "args", "signIfPrivateKey", "a", "dataHex", "feeNQT", "parameters", "DefaultDeadline", "import_contracts", "init_constants", "addAssetTreasuryAccount", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "init_constants", "transferAsset", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "burnAsset", "service", "args", "transferAsset", "init_constants", "cancelOrder", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "method", "cancelAskOrder", "service", "args", "cancelOrder", "cancelBidOrder", "service", "args", "cancelOrder", "init_constants", "distributeToAssetHolders", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "getAllAssets", "service", "args", "getAllTrades", "service", "args", "params", "getAsset", "service", "args", "getAssetHolders", "service", "args", "assetId", "ignoreTreasuryAccount", "firstIndex", "lastIndex", "minimumQuantity", "params", "getAssetsByIssuer", "service", "args", "params", "getAssetsByOwner", "service", "args", "params", "getAssetsByName", "service", "args", "params", "getAssetTrades", "service", "args", "assetId", "accountId", "firstIndex", "lastIndex", "includeAssetInfo", "params", "getAssetTradesPerAccount", "service", "args", "getAssetTrades", "getAssetTradesPerAsset", "service", "args", "getAssetTrades", "getAssetTransfers", "service", "args", "assetId", "accountId", "firstIndex", "lastIndex", "params", "getAssetTransfersPerAccount", "service", "args", "getAssetTransfers", "getAssetTransfersPerAsset", "service", "args", "getAssetTransfers", "getOpenOrders", "service", "args", "type", "firstIndex", "lastIndex", "params", "getOpenAskOrders", "service", "args", "getOpenOrders", "getOpenOrdersPerAccount", "service", "args", "type", "firstIndex", "lastIndex", "accountId", "assetId", "params", "getOpenAskOrdersPerAccount", "service", "args", "getOpenOrdersPerAccount", "getOpenOrdersPerAsset", "service", "args", "type", "firstIndex", "lastIndex", "assetId", "params", "getOpenAskOrdersPerAsset", "service", "args", "getOpenOrdersPerAsset", "getOpenBidOrders", "service", "args", "getOpenOrders", "getOpenBidOrdersPerAccount", "service", "args", "getOpenOrdersPerAccount", "getOpenBidOrdersPerAsset", "service", "args", "getOpenOrdersPerAsset", "getTradeHistoryPerAccount", "service", "args", "accountId", "assetId", "firstIndex", "lastIndex", "params", "init_constants", "issueAsset", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "init_constants", "mintAsset", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "init_constants", "import_util", "placeOrder", "service", "args", "signIfPrivateKey", "a", "decimals", "parameters", "DefaultDeadline", "createParametersFromAttachment", "method", "placeAskOrder", "service", "args", "placeOrder", "placeBidOrder", "service", "args", "placeOrder", "init_constants", "transferAssetOwnership", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "init_constants", "mountAssetQuantitiesString", "assetQuantities", "quantity", "assetId", "assertCorrectAssetQuantities", "assetIds", "ra", "transferMultipleAssets", "service", "args", "signIfPrivateKey", "a", "parameters", "DefaultDeadline", "createParametersFromAttachment", "import_util", "calculateDistributionFee", "service", "args", "assetId", "minimumQuantity", "numberOfAccounts", "getAsset", "minFee", "feePerHolders", "callContractMethod", "service", "args", "callMessage", "attachment", "AttachmentMessage", "transferAsset", "sendAmountToSingleRecipient", "getSingleContractMapValue", "service", "args", "params", "getContractMapValuesByFirstKey", "service", "args", "params", "getAllContractsByCodeHash", "service", "args", "params", "ApiSettings", "nodeHost", "reliableNodeHosts", "httpClientOptions", "httpClient", "apiVersion", "composeApi", "settings", "serviceSettings", "service", "ApiComposer", "getBlockByTimestamp", "getBlockByHeight", "getBlockById", "getBlockId", "getBlocks", "getBlockchainStatus", "getMiningInfo", "getServerStatus", "getSuggestedFees", "getPeers", "getPeer", "getTime", "getNetworkInfo", "broadcastTransaction", "cancelSubscription", "createSubscription", "getDistributionAmountsFromTransaction", "getSubscription", "getTransaction", "getTransactionByFullHash", "getUnconfirmedTransactions", "parseTransactionBytes", "sendAmountToMultipleRecipients", "sendAmountToSingleRecipient", "sendSameAmountToMultipleRecipients", "signAndBroadcastTransaction", "getSubscriptionPayments", "sendMessage", "sendEncryptedMessage", "addCommitment", "removeCommitment", "getAccountTransactions", "getAccountTransactionsFromSenderToRecipient", "getAccountTransactionsBetweenSenderAndRecipient", "getAccountTransactionsFromSender", "getAccountTransactionsToRecipient", "getUnconfirmedAccountTransactions", "getAccountBalance", "generateSendTransactionQRCode", "generateSendTransactionQRCodeAddress", "setAlias", "getAccount", "getAccountBlocks", "getAccountBlockIds", "setAccountInfo", "setRewardRecipient", "getAccountSubscriptions", "getSubscriptionsToAccount", "getRewardRecipient", "getTradeHistoryPerAccount", "getAliasByName", "getAliasById", "getAliasesOnSale", "buyAlias", "sellAlias", "getAliases", "searchAliasesByName", "getTopLevelDomains", "buyTopLevelDomain", "getContract", "getContractsByAccount", "getAllContractIds", "publishContract", "publishContractByReference", "callContractMethod", "getSingleContractMapValue", "getContractMapValuesByFirstKey", "getAllContractsByCodeHash", "getAsset", "getAllTrades", "getAssetTrades", "getAssetTradesPerAccount", "getAssetTradesPerAsset", "getAllAssets", "issueAsset", "mintAsset", "burnAsset", "transferAsset", "transferAssetOwnership", "transferMultipleAssets", "placeAskOrder", "placeBidOrder", "cancelAskOrder", "cancelBidOrder", "getAssetHolders", "getAssetTransfers", "getAssetTransfersPerAccount", "getAssetTransfersPerAsset", "addAssetTreasuryAccount", "distributeToAssetHolders", "getOpenBidOrders", "getOpenAskOrders", "getOpenBidOrdersPerAsset", "getOpenAskOrdersPerAsset", "getOpenBidOrdersPerAccount", "getOpenAskOrdersPerAccount", "getAssetsByIssuer", "getAssetsByOwner", "getAssetsByName", "calculateDistributionFee", "getAttachmentVersion", "transaction", "versionIdentifier", "init_constants", "LedgerClientFactory", "settings", "composeApi", "__reExport", "src_exports", "service_exports", "init_constants", "isMultiOutSameTransaction", "transaction", "init_constants", "isMultiOutTransaction", "transaction", "import_util", "getRecipientAmountsFromMultiOutPayment", "transaction", "isMultiOutSameTransaction", "recipients", "amount", "recipient", "isMultiOutTransaction", "r", "import_util", "getRecipientsAmount", "recipientId", "transaction", "isMultiOutTransaction", "isMultiOutSameTransaction", "getRecipientAmountsFromMultiOutPayment", "ra", "amount", "Api"]
}
